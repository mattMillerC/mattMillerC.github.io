{"version":3,"sources":["webpack:///./util/entryrender.js","webpack:///./util/data.js","webpack:///./util/renderTable.js","webpack:///./util/ability.js","webpack:///./js/classes.js"],"names":["EntryRenderer","this","wrapperTag","baseUrl","setWrapperTag","tag","setBaseUrl","url","recursiveEntryRender","entry","textStack","depth","prefix","suffix","forcePrefixSuffix","type","renderPrefix","undefined","handleEntriesOptionsInvocationPatron","self","entries","sort","a","b","name","handleOptions","items","push","style","i","length","source","caption","colLabels","getTableThClassText","rows","j","makeTableTdClassText","colStyles","rowStyles","renderTable","handleInvocation","handlePatron","attributes","renderSuffix","value","getEntryDice","href","path","hash","subhashes","subHash","key","text","renderLink","tagSplit","char","char2","tagDepth","inTag","out","curStr","charAt","splitByTags","s","string","substr","indexOf","actionToExplanation","skillToExplanation","displayText","others","split","fauxEntry","classMatch","RE_INLINE_CLASS","exec","trim","renderString","incDepth","inlineTitle","nextDepth","styleString","styleClasses","HEAD_2","HEAD_NEG_1","HEAD_0","HEAD_1","subclass","join","getStyleString","dataString","titleString","sourceJsonToFull","DATA_NONE","getDataString","preReqText","prerequisite","headerSpan","toAdd","number","faces","String","toRoll","roll","substring","droll","rollable","cache","async","loadModel","modelId","hasOwnProperty","promises","loadJSON","Promise","all","then","data","itemData","basicItemData","variantData","propertyList","typeList","itemList","basicItemList","basicitems","itemPropertyList","itemProperty","itemTypeList","itemType","abbreviation","JSON","parse","stringify","toLowerCase","variantList","concat","tier","inherits","rarity","page","requires","armor","curBasicItem","category","curBasicItemName","curVariant","curRequires","hasRequired","requiredProperty","excludes","curExcludes","excludedProperty","curInherits","tmpBasicItem","inheritedProperty","namePrefix","nameSuffix","k","tmpText","dmgType","replace","dmgTypeToFull","genericBonus","unshift","pushObject","targetObject","objectToBePushed","copiedObject","item","noDisplay","property","properties","resist","stealth","strength","scfType","mergeItemsData","loadAllItemData","monsterData","legendaryGroupData","legendaryGroupList","legendaryGroup","lairActions","regionalEffects","monster","thisGroup","lairaction","regionaleffect","parseLegendaryMonsters","loadAllMonsterData","modelData","index","srcURL","Object","values","allData","srcData","console","error","loadModelFromIndex","Array","isArray","loadModelFromSingleJSON","fetch","response","ok","Error","json","rootEl","columns","filters","curItem","columnsHtmlString","col","id","asiFilter","metric","ability","_fAbility","cssClass","sourceFilter","addIfAbsent","sourceJsonToAbv","prereqText","prof","skillProficiencies","typeFilter","header","displayFn","orderFilter","order","sizeFilter","sizeAbvToFull","size","levelFilter","level","spLevelToFull","timeFilter","_fTimeType","time","map","t","unit","spTimeListToFull","schoolFilter","spSchoolAbvToFull","school","rangeFilter","_fRangeType","range","spRangeToFull","classFilter","_fClasses","classes","fromClassList","c","forEach","spClassesToFull","subclassFilter","_fSubclasses","fromSubclass","sc","metaFilter","_fMeta","searchStack","e1","_pTypes","monTypeToFullObj","tags","asText","uppercaseFirst","crFilter","tagFilter","miscFilter","_fMisc","legendary","cr","adjCR","deselFn","deselectFilter","wondrous","technology","age","weaponCategory","itemTypeToAbv","typeText","_fTypes","rarityFilter","tierFilter","attunementFilter","categoryFilter","tierTags","attunement","reqAttune","startsWith","tt","_fTier","_fAttunement","linkData","tempString","rowEl","querySelector","append","list","valueNames","listClass","keys","filter","filterBox","render","handleFilterChange","f","getValues","elm","getAttribute","ft","toDisplay","addEventListener","EVNT_VALCHANGE","deselectProperty","deselectValue","val","selectionHash","resolveHash","deselNoHash","parts","parse_abilityLong","abilityObj","abbArr","abilityItem","mod","parseInt","attAbvToFull","choose","options","from","amount","abbChoices","option","abbChoicesText","parse_abilityShort","count","countStr","parse_abilityCollection","CLSS_ACTIVE","renderer","renderStr","renderStack","setSubclassFixation","top","document","body","scrollTop","classList","contains","add","height","remove","onLoad","backToTop","window","scrollTo","onDataLoad","subclasses","classTableDefault","innerHTML","gridString","curClass","svg","newClasses","e","tar","target","closest","appendChild","onHashChange","svgName","isUaClass","hd","proficiency","p","sProfs","startingProficiencies","weapons","w","tools","skills","numString","skillOptions","result","skill","numberToString","getSkillProfString","sEquip","startingEquipment","fromBackground","additionalFromBackground","defList","default","goldAlt","goldAlternative","tData","classTableGroups","groupHeaders","colHeaders","levelTrs","spellsFlag","tGroup","hasTitle","title","subclassData","lbl","tr","stack","classFeatures","mobileClone","cloneNode","setAttribute","colHeaderEls","querySelectorAll","colHeaderEl","textContent","subclassIndex","tblLvlFeatures","featureNames","lvlFeatureList","feature","featureId","featureLinkPart","featureLink","preventDefault","getElementById","scrollIntoView","offset","scrollBy","gainSubclassFeature","subClass","l","subclassFeatures","subFeature","m","childEntry","shortName","nonStandardPills","nonStandardPill","display","subclassPillWrapper","allSourcesToggle","makeGenericTogglePill","subClasses","nonStandardSource","pillText","pill","handleSubclassClick","toggle","click","pillActiveClass","pillId","hashKey","defaultActive","active","isPillActive","outStack","hashPart","newHash","handleToggleFeaturesClicks","subclassName","subclassSource","routeSelection","encodedSubClass","subclassLink","includes","subClassStack","hasSubclassHash","onSubChange","sub","curHash","hideClassFeatures","showAllSources","slice","hideOtherSources","updateClassTableLinks","$toShow","$toHide","$subClassSpanList","classSpan","$this","thisSc","shown","otherSrcSubFeats","shownInTable","v","selectedSCFeatures","selectedSCFeature","otherSrcSubFeat","asInTable","handleTableGroups","subClassEls","subClassEl","cfToggle","toToggleCf","el","srcToggle","toToggleSrc","tableDataTag","show","listEls","scs","hashParts","outParts","part","els","prevFeature"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import { isNonstandardSource, encodeForHash, ascSort, utils_makeAttChoose } from \"../js/utils.js\";\r\nimport {\r\n  CLSS_NON_STANDARD_SOURCE,\r\n  HASH_LIST_SEP,\r\n  ATB_DATA_SC,\r\n  ATB_DATA_SRC,\r\n  CLSS_SUBCLASS_FEATURE,\r\n\tSRC_MM,\r\n\tSRC_PHB\r\n} from \"../util/consts.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n// ENTRY RENDERING =====================================================================================================\r\n/*\r\n * // EXAMPLE USAGE //\r\n *\r\n * const entryRenderer = new EntryRenderer();\r\n *\r\n * const topLevelEntry = mydata[0];\r\n * // prepare an array to hold the string we collect while recursing\r\n * const textStack = [];\r\n *\r\n * // recurse through the entry tree\r\n * entryRenderer.renderEntries(topLevelEntry, textStack);\r\n *\r\n * // render the final product by joining together all the collected strings\r\n * $(\"#myElement\").html(toDisplay.join(\"\"));\r\n */\r\nfunction EntryRenderer() {\r\n\r\n\tthis.wrapperTag = \"div\";\r\n\tthis.baseUrl = \"\";\r\n\r\n\t/**\r\n\t * Set the tag used to group rendered elements\r\n\t * @param tag to use\r\n\t */\r\n\tthis.setWrapperTag = function (tag) {\r\n\t\tthis.wrapperTag = tag;\r\n\t};\r\n\r\n\t/**\r\n\t * Set the base url for rendered links.\r\n\t * Usage: `renderer.setBaseUrl(\"https://www.cool.site/\")` (note the \"http\" prefix and \"/\" suffix)\r\n\t * @param url to use\r\n\t */\r\n\tthis.setBaseUrl = function(url) {\r\n\t\tthis.baseUrl = url;\r\n\t};\r\n\r\n\t/**\r\n\t * Recursively walk down a tree of \"entry\" JSON items, adding to a stack of strings to be finally rendered to the\r\n\t * page. Note that this function does _not_ actually do the rendering, see the example code above for how to display\r\n\t * the result.\r\n\t *\r\n\t * @param entry An \"entry\" usually defined in JSON. A schema is available in tests/schema\r\n\t * @param textStack A reference to an array, which will hold all our strings as we recurse\r\n\t * @param depth The current recursion depth. Optional; default 0, or -1 for type \"section\" entries\r\n\t * @param prefix The (optional) prefix to be added to the textStack before whatever is added by the current call\r\n\t * @param suffix The (optional) suffix to be added to the textStack after whatever is added by the current call\r\n\t * @param forcePrefixSuffix force the prefix and suffix to be added (useful for the first call from external code)\r\n\t */\r\n\tthis.recursiveEntryRender = function(entry, textStack, depth, prefix, suffix, forcePrefixSuffix) {\r\n\t\tdepth = depth === undefined || depth === null ? entry.type === \"section\" ? -1 : 0 : depth;\r\n\t\tprefix = prefix === undefined || prefix === null ? null : prefix;\r\n\t\tsuffix = suffix === undefined || suffix === null ? null : suffix;\r\n\t\tforcePrefixSuffix = forcePrefixSuffix === undefined || forcePrefixSuffix === null ? false : forcePrefixSuffix;\r\n\r\n\t\tif (forcePrefixSuffix) renderPrefix();\r\n\t\tif (typeof entry === \"object\") {\r\n\t\t\t// the root entry (e.g. \"Rage\" in barbarian \"classFeatures\") is assumed to be of type \"entries\"\r\n\t\t\tconst type = entry.type === undefined || entry.type === \"section\" ? \"entries\" : entry.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\t// TODO add an \"insert box\" type\r\n\r\n\t\t\t\t// recursive\r\n\t\t\t\tcase \"entries\":\r\n\t\t\t\t\thandleEntries(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"options\":\r\n\t\t\t\t\thandleOptions(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"list\":\r\n\t\t\t\t\tif (entry.items) {\r\n\t\t\t\t\t\ttextStack.push(`<ul ${entry.style ? `class=\"${entry.style}\"` : ''}>`);\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.items.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.items[i], textStack, depth + 1, `<li ${isNonstandardSource(entry.items[i].source) ? `class=\"${CLSS_NON_STANDARD_SOURCE}\"` : \"\"}>`, \"</li>\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttextStack.push(\"</ul>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\trenderTable(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"invocation\":\r\n\t\t\t\t\thandleInvocation(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"patron\":\r\n\t\t\t\t\thandlePatron(this);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// block\r\n\t\t\t\tcase \"abilityDc\":\r\n\t\t\t\t\trenderPrefix();\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} save DC</span> = 8 + your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\trenderSuffix();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"abilityAttackMod\":\r\n\t\t\t\t\tif (prefix !== null) textStack.push(prefix);\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} attack modifier</span> = your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\tif (suffix !== null) textStack.push(suffix);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// inline\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.entries[i], textStack, depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonus\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonusSpeed\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value + \"ft.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"dice\":\r\n\t\t\t\t\ttextStack.push(EntryRenderer.getEntryDice(entry));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\trenderLink(this, entry);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"item\":\r\n\t\t\t\t\ttextStack.push(`<li><b>${entry.name}: </b>`);\r\n\t\t\t\t\tthis.recursiveEntryRender(entry.entry, textStack, depth);\r\n\t\t\t\t\ttextStack.push('</li>');\r\n\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (typeof entry === \"string\") { // block\r\n\t\t\trenderPrefix();\r\n\t\t\trenderString(this);\r\n\t\t\trenderSuffix();\r\n\t\t} else { // block\r\n\t\t\t// for ints or any other types which do not require specific rendering\r\n\t\t\trenderPrefix();\r\n\t\t\ttextStack.push(entry);\r\n\t\t\trenderSuffix();\r\n\t\t}\r\n\t\tif (forcePrefixSuffix) renderSuffix();\r\n\r\n\t\tfunction renderPrefix() {\r\n\t\t\tif (prefix !== null) {\r\n\t\t\t\ttextStack.push(prefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction renderSuffix() {\r\n\t\t\tif (suffix !== null) {\r\n\t\t\t\ttextStack.push(suffix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderTable(self) {\r\n\t\t\t// TODO add handling for rowLabel property\r\n\r\n\t\t\ttextStack.push(\"<table class='table'>\");\r\n\r\n\t\t\tif (entry.caption !== undefined) {\r\n\t\t\t\ttextStack.push(`<caption>${entry.caption}</caption>`);\r\n\t\t\t}\r\n\t\t\ttextStack.push(\"<thead>\");\r\n\t\t\ttextStack.push(\"<tr class='table-row table-row--header'>\");\r\n\r\n\t\t\tif (entry.colLabels) {\r\n\t\t\t\tfor (let i = 0; i < entry.colLabels.length; ++i) {\r\n\t\t\t\t\ttextStack.push(`<th ${getTableThClassText(i)}>${entry.colLabels[i]}</th>`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\ttextStack.push(\"</thead>\");\r\n\t\t\ttextStack.push(\"<tbody>\");\r\n\r\n\t\t\tfor (let i = 0; i < entry.rows.length; ++i) {\r\n\t\t\t\ttextStack.push(\"<tr class='table-row'>\");\r\n\t\t\t\tfor (let j = 0; j < entry.rows[i].length; ++j) {\r\n\t\t\t\t\ttextStack.push(`<td ${makeTableTdClassText(j)}>`);\r\n\t\t\t\t\tself.recursiveEntryRender(entry.rows[i][j], textStack, depth + 1);\r\n\t\t\t\t\ttextStack.push(\"</td>\");\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tbody>\");\r\n\t\t\ttextStack.push(\"</table>\");\r\n\r\n\t\t\tfunction getTableThClassText(i) {\r\n\t\t\t\treturn entry.colStyles === undefined || i >= entry.colStyles.length ? \"class='table-cell'\" :  `class=\"table-cell ${entry.colStyles[i]}\"`;\r\n\t\t\t}\r\n\r\n\t\t\tfunction makeTableTdClassText(i) {\r\n\t\t\t\tif (entry.rowStyles !== undefined) {\r\n\t\t\t\t\treturn entry.rowStyles === undefined || i >= entry.rowStyles.length ? \"class='table-cell'\" : `class=\"table-cell ${entry.rowStyles[i]}\"`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getTableThClassText(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction handleEntries(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handleOptions(self) {\r\n\t\t\tif (entry.entries) {\r\n\t\t\t\tentry.entries = entry.entries.sort((a, b) => a.name && b.name ? ascSort(a.name, b.name) : a.name ? -1 : b.name ? 1 : 0);\r\n\t\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleInvocation(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handlePatron(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t}\r\n\r\n\t\tfunction handleEntriesOptionsInvocationPatron(self, incDepth) {\r\n\t\t\tconst inlineTitle = depth >= 2;\r\n\t\t\tconst nextDepth = incDepth ? depth+1 : depth;\r\n\t\t\tconst styleString = getStyleString();\r\n\t\t\tconst dataString = getDataString();\r\n\t\t\tconst preReqText = getPreReqText();\r\n\t\t\tconst headerSpan = entry.name !== undefined ? `<span class=\"stat-name\">${entry.name}${inlineTitle ? \".\" : \"\"}</span> ` : \"\";\r\n\r\n\t\t\tif (entry.entries || entry.name) {\r\n\t\t\t\ttextStack.push(`<${self.wrapperTag} ${dataString} ${styleString}>${headerSpan}${preReqText}`);\r\n\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\tself.recursiveEntryRender(entry.entries[i], textStack, nextDepth, \"<p>\", \"</p>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(`</${self.wrapperTag}>`);\r\n\t\t\t}\r\n\r\n\t\t\tfunction getStyleString() {\r\n\t\t\t\tconst styleClasses = [];\r\n\t\t\t\tif (isNonstandardSource(entry.source)) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n\t\t\t\tif (inlineTitle && entry.name !== undefined) styleClasses.push(EntryRenderer.HEAD_2);\r\n\t\t\t\telse styleClasses.push(depth === -1 ? EntryRenderer.HEAD_NEG_1 : depth === 0 ? EntryRenderer.HEAD_0 : EntryRenderer.HEAD_1);\r\n\t\t\t\tif ((entry.type === \"invocation\" || entry.type === \"patron\") && entry.subclass !== undefined) styleClasses.push(CLSS_SUBCLASS_FEATURE);\r\n\t\t\t\treturn styleClasses.length > 0 ? `class=\"${styleClasses.join(\" \")}\"` : \"\";\r\n\t\t\t}\r\n\r\n\t\t\tfunction getDataString() {\r\n\t\t\t\tlet dataString = \"\";\r\n\t\t\t\tif (entry.type === \"invocation\" || entry.type === \"patron\") {\r\n\t\t\t\t\tconst titleString = entry.source ? `title=\"Source: ${Parser.sourceJsonToFull(entry.source)}\"` : \"\";\r\n\t\t\t\t\tif (entry.subclass !== undefined) dataString = `${ATB_DATA_SC}=\"${entry.subclass.name}\" ${ATB_DATA_SRC}=\"${entry.subclass.source}\" ${titleString}`;\r\n\t\t\t\t\telse dataString = `${ATB_DATA_SC}=\"${EntryRenderer.DATA_NONE}\" ${ATB_DATA_SRC}=\"${EntryRenderer.DATA_NONE}\" ${titleString}`;\r\n\t\t\t\t}\r\n\t\t\t\treturn dataString;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getPreReqText() {\r\n\t\t\t\tif (entry.prerequisite) return `<span class=\"prerequisite\">Prerequisite: ${entry.prerequisite}</span>`;\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderLink(self, entry) {\r\n\t\t\tlet href;\r\n\t\t\tif (entry.href.type === \"internal\") {\r\n\t\t\t\t// baseURL is blank by default\r\n\t\t\t\thref = `${self.baseUrl}${entry.href.path}#`;\r\n\t\t\t\tif (entry.href.hash !== undefined) {\r\n\t\t\t\t\thref += entry.href.hash;\r\n\t\t\t\t\tif (entry.href.subhashes !== undefined) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.href.subhashes.length; i++) {\r\n\t\t\t\t\t\t\tconst subHash = entry.href.subhashes[i];\r\n\t\t\t\t\t\t\thref += `,${encodeForHash(subHash.key)}:${encodeForHash(subHash.value)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (entry.href.type === \"external\") {\r\n\t\t\t\thref = entry.href.url;\r\n\t\t\t}\r\n\t\t\ttextStack.push(`<a href='${href}'>${entry.text}</a>`);\r\n\t\t}\r\n\r\n\t\tfunction renderString(self) {\r\n\t\t\tconst tagSplit = splitByTags();\r\n\t\t\tfor (let i = 0; i < tagSplit.length; i++) {\r\n\t\t\t\tconst s = tagSplit[i];\r\n\t\t\t\tif (s === undefined || s === null || s === \"\") continue;\r\n\t\t\t\tif (s.charAt(0) === \"@\") {\r\n\t\t\t\t\tconst [tag, text] = splitFirstSpace(s);\r\n\r\n\t\t\t\t\tif (tag === \"@bold\" || tag === \"@italic\" || tag === \"@skill\" || tag === \"@action\") {\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@bold\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<b>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</b>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@italic\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<i>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</i>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@action\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.actionToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@skill\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.skillToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst [name, source, displayText, ...others] = text.split(\"|\");\r\n\t\t\t\t\t\tconst hash = `${name}${source ? `${HASH_LIST_SEP}${source}` : \"\"}`;\r\n\r\n\t\t\t\t\t\tconst fauxEntry = {\r\n\t\t\t\t\t\t\t\"type\": \"link\",\r\n\t\t\t\t\t\t\t\"href\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"internal\",\r\n\t\t\t\t\t\t\t\t\"path\": \"\",\r\n\t\t\t\t\t\t\t\t\"hash\": hash\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"text\": (displayText ? displayText : name)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@spell\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/spells/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@item\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += \"_dmg\";\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/items/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@class\":\r\n\t\t\t\t\t\t\t\tconst classMatch = EntryRenderer.RE_INLINE_CLASS.exec(text);\r\n\t\t\t\t\t\t\t\tif (classMatch) {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = classMatch[1].trim(); // TODO pass this in\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.subhashes = [{\"key\": \"sub\", \"value\": classMatch[2].trim() + \"~phb\"}] // TODO pass this in\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/classes/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@creature\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_MM;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/bestiary/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@filter\":\r\n\t\t\t\t\t\t\t\t// todo... maybe\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@dice\":\r\n\t\t\t\t\t\t\t\t// todo\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextStack.push(s);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitFirstSpace(string) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tstring.substr(0, string.indexOf(' ')),\r\n\t\t\t\t\tstring.substr(string.indexOf(' ') + 1)\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitByTags() {\r\n\t\t\t\tlet tagDepth = 0;\r\n\t\t\t\tlet inTag = false;\r\n\t\t\t\tlet char, char2;\r\n\t\t\t\tconst out = [];\r\n\t\t\t\tlet curStr = \"\";\r\n\t\t\t\tfor (let i = 0; i < entry.length; ++i) {\r\n\t\t\t\t\tchar = entry.charAt(i);\r\n\t\t\t\t\tchar2 = i < entry.length-1 ? entry.charAt(i+1) : null;\r\n\r\n\t\t\t\t\tswitch (char) {\r\n\t\t\t\t\t\tcase \"{\":\r\n\t\t\t\t\t\t\tif (char2 === \"@\") {\r\n\t\t\t\t\t\t\t\tif (tagDepth++ > 0) {\r\n\t\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\t\tinTag = false;\r\n\t\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"}\":\r\n\t\t\t\t\t\t\tif (--tagDepth === 0) {\r\n\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (curStr.length > 0) out.push(curStr);\r\n\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nEntryRenderer.getEntryDice = function (entry) {\r\n\t// TODO make droll integration optional\r\n\tlet toAdd;\r\n\tif (entry.number && entry.faces) {\r\n\t\ttoAdd = String(entry.number) + \"d\" + entry.faces;\r\n\t} else if (entry.toRoll && entry.toRoll.length) {\r\n\t\tfor (let roll of entry.toRoll) {\r\n\t\t\ttoAdd = String(roll.number) + \"d\" + roll.faces + \" + \"\r\n\t\t}\r\n\t\ttoAdd = toAdd.substring(0, toAdd.length - 3);\r\n\t}\r\n\tif (typeof droll !== \"undefined\" && entry.rollable === true) {\r\n\t\t// TODO output this somewhere nice\r\n\t\t// TODO make this less revolting\r\n\r\n\t\t// TODO output to small tooltip-stype bubble? Close on mouseout\r\n\t\treturn `<span class='roller unselectable' onclick=\"if (this.rolled) { this.innerHTML = this.innerHTML.split('=')[0].trim()+' = '+droll.roll('${toAdd}').total; } else { this.rolled = true; this.innerHTML += ' = '+droll.roll('${toAdd}').total; }\">${toAdd}</span>`;\r\n\t} else {\r\n\t\treturn toAdd;\r\n\t}\r\n};\r\n\r\nEntryRenderer.RE_INLINE_CLASS = /(.*?) \\((.*?)\\)/;\r\nEntryRenderer.HEAD_NEG_1 = \"statsBlockSectionHead\";\r\nEntryRenderer.HEAD_0 = \"statsBlockHead\";\r\nEntryRenderer.HEAD_1 = \"statsBlockSubHead\";\r\nEntryRenderer.HEAD_2 = \"statsInlineHead\";\r\nEntryRenderer.DATA_NONE = \"data-none\";\r\n\r\nexport default EntryRenderer;","import {cloneDeep} from \"../js/utils.js\";\nimport Parser from \"./Parser.js\";\n\nlet cache = {};\n\n/**\n * Returns model data object, serving the cached version if already requested.\n * @param {String} modelId Model ID for the data being requested.\n */\nexport default async function loadModel(modelId) {\n\tif (modelId) {\n\t\t// Checks model cache for data\n\t\tif (!cache.hasOwnProperty(modelId)) {\n\t\t\t// Catch for items.json to load additional data\n\t\t\tswitch (modelId) {\n\t\t\t\tcase \"items\":\n\t\t\t\t\tcache[modelId] = await loadAllItemData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bestiary\":\n\t\t\t\t\tcache[modelId] = await loadAllMonsterData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spells\":\n\t\t\t\tcase \"classes\":\n\t\t\t\t\tcache[modelId] = await loadModelFromIndex(modelId);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcache[modelId] = await loadModelFromSingleJSON(modelId);\n\t\t\t}\n\t\t}\n\t\treturn cache[modelId];\n\t} else {\n\t\tconsole.error(\"Missing modelID\");\n\t\treturn [];\n\t}\n}\n\n/**\n * Loads JSON from the given URL.\n * @param {String} url Makes request to specified URL, returns JSON\n */\nfunction loadJSON(url) {\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    });\n};\n\nasync function loadModelFromSingleJSON(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}.json`);\n\tif (Array.isArray(modelData)) {\n\t\treturn modelData;\n\t} else {\n\t\tconsole.error(\"Array data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nasync function loadModelFromIndex(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}/index.json`);\n\tif (modelData.index) {\n\t\tlet promises = [];\n\n\t\tfor (let srcURL of Object.values(modelData.index)) {\n\t\t\tpromises.push(loadJSON(`/data/${modelId}/${srcURL}`));\n\t\t}\n\t\treturn Promise.all(promises).then(data => {\n\t\t\tlet allData = [];\n\n\t\t\tfor (let srcData of data) {\n\t\t\t\tallData = allData.concat(srcData);\n\t\t\t}\n\n\t\t\treturn allData;\n\t\t});\n\t} else {\n\t\tconsole.error(\"Model index data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nfunction loadAllMonsterData() {\n\tconst promises = [];\n\n\tpromises.push(loadJSON(`/data/bestiary.json`));\n\tpromises.push(loadJSON(`/data/legendarygroups.json`));\n\n\treturn Promise.all(promises).then(data => {\n\t\treturn parseLegendaryMonsters(data[0], data[1]);\n\t});\n}\n\nfunction parseLegendaryMonsters(monsterData, legendaryGroupData) {\n  const legendaryGroupList = {};\n\n  for (let legendaryGroup of legendaryGroupData) {\n    legendaryGroupList[legendaryGroup.name] = {\n      lairActions: legendaryGroup.lairActions,\n      regionalEffects: legendaryGroup.regionalEffects\n    };\n  }\n\n  for (let monster of monsterData) {\n    if (monster.legendaryGroup) {\n      const legendaryGroup = monster.legendaryGroup;\n      if (legendaryGroup) {\n        const thisGroup = legendaryGroupList[legendaryGroup];\n        if (thisGroup.lairActions) monster.lairaction = cloneDeep(thisGroup.lairActions);\n        if (thisGroup.regionalEffects) monster.regionaleffect = cloneDeep(thisGroup.regionalEffects);\n      }\n    }\n  }\n  return monsterData;\n}\n\n/**\n * Loads and merges all Item data.\n */\nfunction loadAllItemData() {\n\tconst promises = [];\n\n  promises.push(loadJSON(\"/data/items.json\"));\n  promises.push(loadJSON(\"/data/basicitems.json\"));\n\tpromises.push(loadJSON(\"/data/magicvariants.json\"));\n\n  return Promise.all(promises).then((data) => {\n\t\treturn mergeItemsData(data[0], data[1], data[2]);\n  });\n}\n\nfunction mergeItemsData(itemData, basicItemData, variantData) {\n  const propertyList = {};\n  const typeList = {};\n  let itemList = itemData;\n\n\tlet basicItemList = basicItemData.basicitems;\n\tconst itemPropertyList = basicItemData.itemProperty;\n\tconst itemTypeList = basicItemData.itemType;\n\t// Convert the property and type list JSONs into look-ups, i.e. use the abbreviation as a JSON property name\n\tfor (let i = 0; i < itemPropertyList.length; i++) propertyList[itemPropertyList[i].abbreviation] = itemPropertyList[i].name ? JSON.parse(JSON.stringify(itemPropertyList[i])) : {\"name\": itemPropertyList[i].entries[0].name.toLowerCase(), \"entries\": itemPropertyList[i].entries};\n\tfor (let i = 0; i < itemTypeList.length; i++) typeList[itemTypeList[i].abbreviation] = itemTypeList[i].name ? JSON.parse(JSON.stringify(itemTypeList[i])): {\"name\": itemTypeList[i].entries[0].name.toLowerCase(), \"entries\": itemTypeList[i].entries};\n\n\tlet variantList = variantData;\n\titemList = itemList.concat(basicItemList);\n\tfor (let i = 0; i < variantList.length; i++) {\n\t\tvariantList[i].tier = variantList[i].inherits.tier;\n\t\tvariantList[i].rarity = variantList[i].inherits.rarity;\n\t\tvariantList[i].source = variantList[i].inherits.source;\n\t\tvariantList[i].page = variantList[i].inherits.page;\n\t\tif(!variantList[i].entries && variantList[i].inherits.entries) variantList[i].entries=JSON.parse(JSON.stringify(variantList[i].inherits.entries));\n\t\tif(variantList[i].requires.armor) variantList[i].armor = variantList[i].requires.armor\n\t}\n\titemList = itemList.concat(variantList);\n\tfor (let i = 0; i < basicItemList.length; i++) {\n\t\tconst curBasicItem = basicItemList[i];\n\t\tbasicItemList[i].category = \"Basic\";\n\t\tif(curBasicItem.entries === undefined) curBasicItem.entries=[];\n\t\tconst curBasicItemName = curBasicItem.name.toLowerCase();\n\t\tfor (let j = 0; j < variantList.length; j++) {\n\t\t\tconst curVariant = variantList[j];\n\t\t\tconst curRequires = curVariant.requires;\n\t\t\tlet hasRequired = curBasicItemName.indexOf(\" (\") === -1;\n\t\t\tfor (const requiredProperty in curRequires) if (curRequires.hasOwnProperty(requiredProperty) && curBasicItem[requiredProperty] !== curRequires[requiredProperty]) hasRequired=false;\n\t\t\tif (curVariant.excludes) {\n\t\t\t\tconst curExcludes = curVariant.excludes;\n\t\t\t\tfor (const excludedProperty in curExcludes) if (curExcludes.hasOwnProperty(excludedProperty) && curBasicItem[excludedProperty] === curExcludes[excludedProperty]) hasRequired=false;\n\t\t\t}\n\t\t\tif (hasRequired) {\n\t\t\t\tconst curInherits = curVariant.inherits;\n\t\t\t\tconst tmpBasicItem = JSON.parse(JSON.stringify(curBasicItem));\n\t\t\t\tdelete tmpBasicItem.value; // Magic items do not inherit the value of the non-magical item\n\t\t\t\ttmpBasicItem.category = \"Specific Variant\";\n\t\t\t\tfor (const inheritedProperty in curInherits) {\n\t\t\t\t\tif (curInherits.hasOwnProperty(inheritedProperty)) {\n\t\t\t\t\t\tif (inheritedProperty === \"namePrefix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name = curInherits.namePrefix+tmpBasicItem.name;\n\t\t\t\t\t\t} else if (inheritedProperty === \"nameSuffix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name += curInherits.nameSuffix;\n\t\t\t\t\t\t} else if (inheritedProperty === \"entries\") {\n\t\t\t\t\t\t\tfor (let k = curInherits.entries.length-1; k > -1; k--) {\n\t\t\t\t\t\t\t\tlet tmpText = curInherits.entries[k];\n\t\t\t\t\t\t\t\tif (typeof tmpText === \"string\") {\n\t\t\t\t\t\t\t\t\tif (tmpBasicItem.dmgType) tmpText = tmpText.replace(\"{@dmgType}\", Parser.dmgTypeToFull(tmpBasicItem.dmgType));\n\t\t\t\t\t\t\t\t\tif (curInherits.genericBonus) tmpText = tmpText.replace(\"{@genericBonus}\", curInherits.genericBonus);\n\t\t\t\t\t\t\t\t\tif (tmpText.indexOf(\"{@lowerName}\") !== -1) tmpText = tmpText.split(\"{@lowerName}\").join(curBasicItemName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmpBasicItem.entries.unshift(tmpText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\ttmpBasicItem[inheritedProperty] = curInherits[inheritedProperty];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titemList.push(tmpBasicItem);\n\t\t\t}\n\t\t}\n\t}\n\t\n\n  let pushObject = (targetObject, objectToBePushed) => {\n    const copiedObject = JSON.parse(JSON.stringify(targetObject));\n    copiedObject.push(objectToBePushed);\n    return copiedObject;\n  };\n\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n  }\n  return itemList;\n}","import {\n  getSourceFilter,\n  getAsiFilter,\n  initFilterBox,\n  utils_makePrerequisite,\n  search,\n  debounce,\n  ascSort,\n  parseHTML,\n  getHiddenModeList,\n  parse_psionicTypeToFull,\n  parse_psionicOrderToFull,\n  parse_backgroundSkills,\n  getTblTimeStr,\n  getRangeType,\n  getFltrSpellLevelStr,\n  getClassFilterStr,\n  getMetaFilterObj,\n  getTimeDisplay,\n  getRuleSearchStackNames,\n  uppercaseFirst,\n  getFromPath,\n  decodeForHash,\n  encodeForHash\n} from \"../js/utils.js\";\nimport { parse_abilityShort, parse_abilityCollection } from \"../util/ability.js\";\nimport {\n  FLTR_ID,\n  STR_NONE,\n  STR_EMPTY,\n  SZ_FINE,\n  SZ_DIMINUTIVE,\n  SZ_TINY,\n  SZ_SMALL,\n  SZ_MEDIUM,\n  SZ_LARGE,\n  SZ_HUGE,\n  SZ_GARGANTUAN,\n  SZ_COLOSSAL,\n  SZ_VARIES\n} from \"./consts.js\";\nimport Parser from \"./Parser.js\";\nimport { Filter, FilterBox } from \"./Filter.js\";\nimport { readRouteSelection } from \"./routing.js\";\n\nfunction renderTable(data, rootEl, columns) {\n  const filters = {};\n\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst curItem = data[i];\n    const name = curItem.name;\n\t\tlet columnsHtmlString = '';\n\t\tfor (let col of columns) {\n\t\t\tswitch (col.id) {\n        case \"ability\":\n          if (!filters[col.id]) {\n            let asiFilter = getAsiFilter();\n            asiFilter.metric = \"_fAbility\";\n            filters[col.id] = asiFilter;\n          }\n          const ability = parse_abilityShort(curItem.ability) || STR_NONE;\n          curItem._fAbility = parse_abilityCollection(curItem.ability);\n          columnsHtmlString += `<td class='table-cell ability ${\n            ability === STR_NONE ? \"list-entry-none \" : \"\"\n          } ${col.cssClass}'>${ability}</td>`;\n          break;\n\n        case \"name\":\n          columnsHtmlString += `<td class='table-cell table-cell--border name ${col.cssClass}'>${name}</td>`;\n          break;\n\n        case \"source\":\n          if (!filters[col.id]) {\n            let sourceFilter = getSourceFilter();\n            sourceFilter.metric = \"source\";\n            filters[col.id] = sourceFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.source);\n\n          columnsHtmlString += `<td class='table-cell source source${curItem.source} ${\n            col.cssClass\n          }' title='${Parser.sourceJsonToFull(curItem.source)}'>${Parser.sourceJsonToAbv(curItem.source)}</td>`;\n          break;\n\n        case \"prerequisite\":\n          let prereqText = utils_makePrerequisite(curItem.prerequisite, true);\n          if (!prereqText) {\n            prereqText = STR_NONE;\n          }\n          columnsHtmlString += `<td class='table-cell prerequisite ${\n            prereqText === STR_NONE ? \"list-entry-none \" : \"\"\n          } ${col.cssClass}'>${prereqText}</td>`;\n          break;\n\n        case \"proficiencies\":\n          const prof = curItem.skillProficiencies && curItem.skillProficiencies.length > 0\n            ? parse_backgroundSkills(curItem.skillProficiencies) : \"--\";\n          columnsHtmlString += `<td class=\"table-cell proficiencies ${col.cssClass}\">${prof}</td>`;\n          break;\n\n        case \"psy-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({ header: \"Type\", items: [\"D\", \"T\"], displayFn: parse_psionicTypeToFull });\n            typeFilter.metric = \"type\";\n            filters[col.id] = typeFilter;\n          }\n          columnsHtmlString += `<td class='psy-type table-cell ${col.cssClass}'>${parse_psionicTypeToFull(\n            curItem.type\n          )}</td>`;\n          break;\n\n        case \"psy-order\":\n          if (!filters[col.id]) {\n            let orderFilter = new Filter({\n              header: \"Order\",\n              items: [\"Avatar\", \"Awakened\", \"Immortal\", \"Nomad\", \"Wu Jen\", \"None\"]\n            });\n            orderFilter.metric = \"order\";\n            filters[col.id] = orderFilter;\n          }\n          curItem.order = parse_psionicOrderToFull(curItem.order);\n          columnsHtmlString += `<td class='psy-order table-cell  ${col.cssClass} ${\n            curItem.order === STR_NONE ? \"list-entry-none\" : STR_EMPTY\n          }'>${curItem.order}</td>`;\n          break;\n\n        case \"psy-mode-list\":\n          columnsHtmlString += `<td class='psy-mode-list ${col.cssClass}'>${getHiddenModeList(curItem)}</td>`;\n          break;\n\n        case \"size\":\n          if (!filters[col.id]) {\n            let sizeFilter = new Filter({ header: \"Size\", displayFn: Parser.sizeAbvToFull });\n            sizeFilter.metric = \"size\";\n            filters[col.id] = sizeFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.size);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} size'>${Parser.sizeAbvToFull(curItem.size)}</td>`;\n          break;\n\n        case \"reward-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({\n              header: \"Type\",\n              items: [\"Blessing\", \"Boon\", \"Charm\", \"Demonic Boon\"]\n            });\n            typeFilter.metric = \"type\";\n            filters[col.id] = typeFilter;\n          }\n          columnsHtmlString += `<td class='table-cell type ${col.cssClass}'>${curItem.type}</td>`;\n          break;\n\n        case \"level\":\n          if (!filters[col.id]) {\n            let levelFilter = new Filter({header: \"Level\", displayFn: getFltrSpellLevelStr});\n            levelFilter.metric = \"level\";\n            filters[col.id] = levelFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.level);\n          columnsHtmlString += `<td class='table-cell level ${col.cssClass}'>${Parser.spLevelToFull(curItem.level)}</td>`;\n          break;\n\n        case \"time\":\n          if (!filters[col.id]) {\n            let timeFilter = new Filter({\n              header: \"Cast Time\",\n              items: [\"action\", \"bonus action\", \"reaction\", \"round\", \"minute\", \"hour\"],\n              displayFn: getTimeDisplay\n            });\n            timeFilter.metric = \"_fTimeType\";\n            filters[col.id] = timeFilter;\n          }\n          curItem._fTimeType = curItem.time.map(t => t.unit);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} time' title='${Parser.spTimeListToFull(curItem.time)}'>${getTblTimeStr(curItem.time[0])}</td>`;\n          break;\n\n        case \"school\":\n          if (!filters[col.id]) {\n            let schoolFilter = new Filter({ header: \"School\", displayFn: Parser.spSchoolAbvToFull });\n            schoolFilter.metric = \"school\";\n            filters[col.id] = schoolFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.school);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} school school_${curItem.school}' title=\"${Parser.spSchoolAbvToFull(curItem.school)}\">${Parser.spSchoolAbvToFull(curItem.school)}</td>`;\n          break;\n\n        case \"range\":\n          if (!filters[col.id]) {\n            let rangeFilter = new Filter({\n              header: \"Range\",\n              items: [\"Self\", \"Touch\", \"Point\", \"Area\", \"Special\"]\n            });\n            rangeFilter.metric = \"_fRangeType\";\n            filters[col.id] = rangeFilter;\n          }\n          curItem._fRangeType = getRangeType(curItem.range);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} range'>${Parser.spRangeToFull(curItem.range)}</td>`;\n          break;\n\n        case \"classes\":\n          if (!filters[col.id]) {\n            let classFilter = new Filter({ header: \"Class\" });\n            classFilter.metric = \"_fClasses\";\n            filters[col.id] = classFilter;\n          }\n          curItem._fClasses = curItem.classes.fromClassList ? curItem.classes.fromClassList.map(c => getClassFilterStr(c)) : [];\n\t\t      curItem._fClasses.forEach(c => filters[col.id].addIfAbsent(c));\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} classes'>${Parser.spClassesToFull(curItem.classes)}</td>`;\n          break;\n\n        case \"subclasses\":\n          if (!filters[col.id]) {\n            let subclassFilter = new Filter({ header: \"Subclass\" });\n            subclassFilter.metric = \"_fSubclasses\";\n            filters[col.id] = subclassFilter;\n          }\n          curItem._fSubclasses = curItem.classes.fromSubclass ? curItem.classes.fromSubclass.map(c => getClassFilterStr(c.subclass)) : [];\n\t\t      curItem._fSubclasses.forEach(sc => filters[col.id].addIfAbsent(sc));\n          columnsHtmlString += `<td class='table-cell subclasses ${col.cssClass}'>${curItem._fSubclasses.join(\", \")}</td>`;\n          break;\n\n        case \"spell-meta\":\n          if (!filters[col.id]) {\n            let metaFilter = new Filter({\n              header: \"Tag\",\n              items: [\"Concentration\", \"Verbal\", \"Somatic\", \"Material\", \"Ritual\", \"Technomagic\"]\n            });\n            metaFilter.metric = \"_fMeta\";\n            filters[col.id] = metaFilter;\n          }\n          curItem._fMeta = getMetaFilterObj(curItem);\n          columnsHtmlString += `<td class='table-cell spell-meta ${col.cssClass}'>${curItem._fMeta}</td>`;\n          break;\n        \n        case \"rules-search\":\n          const searchStack = [];\n          for (const e1 of curItem.entries) {\n            getRuleSearchStackNames(searchStack, e1);\n          }\n          columnsHtmlString += `<td class='table-cell rules-search ${col.cssClass}'>${searchStack.join(\",\")}</td>`;\n          break;\n        \n        case \"monster-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({\n              header: \"Type\",\n              items: [\"aberration\", \"beast\", \"celestial\", \"construct\", \"dragon\", \"elemental\", \"fey\", \"fiend\", \"giant\", \"humanoid\", \"monstrosity\", \"ooze\", \"plant\", \"undead\"],\n              displayFn: uppercaseFirst\n            });\n            typeFilter.metric = \"_pTypes.type\";\n            filters[col.id] = typeFilter;\n          }\n          curItem._pTypes = Parser.monTypeToFullObj(curItem.type);\n          curItem._pTypes.tags.forEach(t => filters[col.id].addIfAbsent(t));\n          columnsHtmlString += `<td class='table-cell type ${col.cssClass}'>${curItem._pTypes.asText.uppercaseFirst()}</td>`;\n          break;\n        \n\n        // adds additional filters for monster table\n        case \"cr\":\n          if (!filters[col.id]) {\n            let crFilter = new Filter({ header: \"CR\" });\n            crFilter.metric = \"cr\";\n            filters[col.id] = crFilter;\n            filters.sizeFilter = new Filter({\n              header: \"Size\",\n              items: [SZ_FINE, SZ_DIMINUTIVE, SZ_TINY, SZ_SMALL, SZ_MEDIUM, SZ_LARGE, SZ_HUGE, SZ_GARGANTUAN, SZ_COLOSSAL, SZ_VARIES],\n              displayFn: Parser.sizeAbvToFull\n            });\n            filters.sizeFilter.metric = \"size\";\n            filters.tagFilter = new Filter({ header: \"Tag\", displayFn: uppercaseFirst });\n            filters.tagFilter.metric = \"_pTypes.tags\";\n            filters.miscFilter = new Filter({header: \"Miscellaneous\", items: [\"Legendary\"], displayFn: uppercaseFirst});\n            filters.miscFilter.metric = \"_fMisc\";\n          }\n          curItem._fMisc = curItem.legendary || curItem.legendaryGroup ? [\"Legendary\"] : [];\n          curItem.cr = curItem.cr === undefined ? \"Unknown\" : curItem.cr;\n          let adjCR = curItem.cr === \"Unknown\" ? \"--\" : curItem.cr;\n          filters[col.id].addIfAbsent(curItem.cr);\n          columnsHtmlString += `<td class='table-cell cr ${col.cssClass}'>${adjCR}</td>`;\n          break;\n\n        case \"item-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({header: \"Type\", deselFn: deselectFilter(\"type\", \"$\")});;\n            typeFilter.metric = \"_fTypes\";\n            filters[col.id] = typeFilter;\n          }\n          const type = [];\n          if (curItem.wondrous) type.push(\"Wondrous Item\");\n          if (curItem.technology) type.push(curItem.technology);\n          if (curItem.age) type.push(curItem.age);\n          if (curItem.weaponCategory) type.push(curItem.weaponCategory + \" Weapon\");\n          if (curItem.type) type.push(Parser.itemTypeToAbv(curItem.type));\n          curItem.typeText = type.join(\", \"); // for loadhash to use\n          curItem._fTypes = type;\n          type.forEach(t => filters[col.id].addIfAbsent(t));\n          columnsHtmlString += `<td class='table-cell item-type ${col.cssClass}'>${type.join(\", \")}</td>`;\n          break;\n\n        // adds additional filters for item table\n        case \"item-rarity\":\n           if (!filters[col.id]) {\n            let rarityFilter = new Filter({header: \"Rarity\", items: [\"None\", \"Common\", \"Uncommon\", \"Rare\", \"Very Rare\", \"Legendary\", \"Artifact\", \"Unknown\"]});\n            rarityFilter.metric = \"rarity\";\n            filters[col.id] = rarityFilter;\n            filters.tierFilter = new Filter({header: \"Tier\", items: [\"None\", \"Minor\", \"Major\"]});\n            filters.tierFilter.metric = \"_fTier\";\n            filters.attunementFilter = new Filter({header: \"Attunement\", items: [\"Yes\", \"By...\", \"Optional\", \"No\"]});\n            filters.attunementFilter.metric = \"_fAttunement\";\n            filters.categoryFilter = new Filter({header: \"Category\", items: [\"Basic\", \"Generic Variant\", \"Specific Variant\", \"Other\"], deselFn: deselectFilter(\"category\", \"Specific Variant\")});\n            filters.categoryFilter.metric = \"category\";\n          }\n          const tierTags = [];\n          tierTags.push(curItem.tier ? curItem.tier : \"None\");\n          let attunement = \"No\";\n          if (curItem.reqAttune !== undefined) {\n            if (curItem.reqAttune === \"YES\") {\n              attunement = \"Yes\";\n              curItem.reqAttune = \"(Requires Attunement)\";\n            } else if (curItem.reqAttune === \"OPTIONAL\") {\n              attunement = \"Optional\";\n              curItem.reqAttune = \"(Attunement Optional)\";\n            } else if (curItem.reqAttune.toLowerCase().startsWith(\"by\")) {\n              attunement = \"By...\";\n              curItem.reqAttune = \"(Requires Attunement \" + curItem.reqAttune + \")\";\n            } else {\n              attunement = \"Yes\"; // throw any weird ones in the \"Yes\" category (e.g. \"outdoors at night\")\n              curItem.reqAttune = \"(Requires Attunement \" + curItem.reqAttune + \")\";\n            }\n          }\n          tierTags.forEach(tt => filters.tierFilter.addIfAbsent(tt));\n          curItem._fTier = tierTags;\n          curItem._fAttunement = attunement;\n          columnsHtmlString += `<td class='table-cell item-rarity ${col.cssClass}'>${curItem.rarity}</td>`;\n          break;\n      }\n    }\n    let linkData = [curItem.name];\n    if (curItem.source) {\n      linkData.push(curItem.source);\n    }\n    let dataLink = encodeForHash(linkData);\n\t\tlet tempString = `\n\t\t\t<tr class='table-row history-link' data-link='${dataLink}' data-title='${name}' ${FLTR_ID}='${i}' id='${i}'>\n\t\t\t\t${columnsHtmlString}\n\t\t\t</tr>`;\n\n\t\tconst rowEl = parseHTML(tempString, true);\n\t\trootEl.querySelector(\".list\").append(rowEl);\n  }\n  \n\tconst list = search({\n\t\tvalueNames: columns.map(col => col.id),\n\t\tlistClass: \"list\"\n  }, rootEl);\n\n  if (Object.keys(filters).length > 0) {\n    Object.values(filters).forEach(filter => {\n      filter.items.sort(ascSort);\n    });\n    const filterBox = initFilterBox(\n      rootEl,\n      ...Object.values(filters)\n    );\n\n    filterBox.render();\n    let handleFilterChange = debounce(() => {\n      list.filter(function(item) {\n        const f = filterBox.getValues();\n        let filterId = item.elm.getAttribute(FLTR_ID);\n        if (filterId) {\n          const ft = data[item.elm.getAttribute(FLTR_ID)];\n\n          for (let filter of Object.values(filters)) {\n            let toDisplay = filter.toDisplay(f, getFromPath(ft, filter.metric));\n            if (!toDisplay) {\n              return false;\n            }\n          }\n        }\n        return true;\n      });\n    }, 200);\n\n    filterBox.addEventListener(FilterBox.EVNT_VALCHANGE, handleFilterChange);\n    handleFilterChange();\n  }\n  \n  function deselectFilter(deselectProperty, deselectValue) {\n    return function(val) {\n      let selectionHash = readRouteSelection();\n      if (selectionHash.length) {\n        const itemProperty = resolveHash(data, selectionHash)[deselectProperty];\n        if (itemProperty === deselectValue) {\n          return deselNoHash();\n        } else {\n          return val === deselectValue && itemProperty !== val;\n        }\n      } else {\n        return deselNoHash();\n      }\n\n      function deselNoHash() {\n        return val === deselectValue;\n      }\n    };\n  }\n}\n\nfunction resolveHash(data, hash) {\n  let parts = decodeForHash(hash),\n    name = parts[0],\n    source = parts[1];\n\n  for (let item of data) {\n    if (\n      item.name.toLowerCase() === name.toLowerCase() &&\n      (!source || item.source.toLowerCase() === source.toLowerCase())\n    ) {\n      return item;\n    }\n  }\n  console.error('Hash link was not found in loaded data', hash, data);\n  return undefined;\n}\n\nexport {renderTable, resolveHash};","import Parser from \"../util/Parser.js\";\nimport { utils_joinPhraseArray, util_capitalize } from \"../js/utils.js\";\n\nexport {\n\tparse_abilityLong,\n\tparse_abilityShort,\n\tparse_abilityCollection\n};\n\nfunction parse_abilityLong(abilityObj) {\n\tconst TO_MAX_OF_TWENTY = \", to a maximum of 20.\";\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tfor (let [key, value] of Object.entries(abilityItem)) {\n\t\t\t\tif (key !== \"choose\" && key !== \"hidden\") {\n\t\t\t\t\tlet mod = parseInt(value) > 0 ? \"+\" + value : value || \"+1\",\n\t\t\t\t\t\tability = key;\n\t\t\t\t\t\tabbArr.push(\"Increase your \" + Parser.attAbvToFull(ability) + \" score by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abilityItem.choose) {\t\n\t\t\t\tlet options = abilityItem.choose.from,\n\t\t\t\t\tmod = abilityItem.choose.amount;\n\t\t\t\t\n\t\t\t\t\tmod = parseInt(mod) > 0 ? \"+\" + mod : mod || \"+1\";\n\n\t\t\t\tif (options.length === 6) {\n\t\t\t\t\tif (abilityItem.choose.entry) { // only used in \"Resilient\"\n\t\t\t\t\t\tabbArr.push(abilityItem.choose.entry);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tabbArr.push(\"Increase one ability score of your choice by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst abbChoices = [];\n\t\t\t\t\tfor (let option of options) {\n\t\t\t\t\t\tabbChoices.push(util_capitalize(option));\n\t\t\t\t\t}\n\t\t\t\t\tconst abbChoicesText = utils_joinPhraseArray(abbChoices, \", \", \" or \");\n\t\t\t\t\tabbArr.push(\"Increase your \" + abbChoicesText + \" by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn abbArr.join(\" \");\n}\n\nfunction parse_abilityShort(abilityObj) {\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tfor (let [key, value] of Object.entries(abilityItem)) {\n\t\t\t\tif (key !== \"choose\" && key !== \"hidden\") {\n\t\t\t\t\tlet mod = parseInt(value) > 0 ? \"+\" + value : value || \"+1\",\n\t\t\t\t\t\tability = key;\n\t\t\t\t\tabbArr.push(util_capitalize(ability) + \" \" + mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abilityItem.choose) {\t\n\t\t\t\tlet options = abilityItem.choose.from,\n\t\t\t\t\tmod = abilityItem.choose.amount,\n\t\t\t\t\tcount = abilityItem.choose.count,\n\t\t\t\t\tcountStr = count !== undefined && count !== 1 ? `${count} from ` : \"\";\n\t\t\t\t\n\t\t\t\t\tmod = parseInt(mod) > 0 ? \"+\" + mod : mod || \"+1\";\n\n\t\t\t\tif (options.length === 6) {\n\t\t\t\t\tabbArr.push(\"Choose \" + countStr + \"any \" + mod);\n\t\t\t\t} else if (options.length + abbArr.length === 6) {\n\t\t\t\t\tabbArr.push(\"Any other \" + mod);\n\t\t\t\t} else {\n\t\t\t\t\tconst abbChoices = [];\n\t\t\t\t\tfor (let option of options) {\n\t\t\t\t\t\tabbChoices.push(util_capitalize(option));\n\t\t\t\t\t}\n\t\t\t\t\tconst abbChoicesText = utils_joinPhraseArray(abbChoices, \", \", \" or \");\n\t\t\t\t\tabbArr.push(\"Choose \" + countStr + abbChoicesText + \" \" + mod);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\treturn abbArr.join(\"; \");\n}\n\nfunction parse_abilityCollection(abilityObj) {\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tif (abilityItem.choose) {\n\t\t\t\tconst options = abilityItem.choose.from;\n\t\t\t\t\n\t\t\t\tfor (let option of options) {\n\t\t\t\t\tabbArr.push(option);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let [ability, mod] of Object.entries(abilityItem)) {\n\t\t\t\t\tabbArr.push(ability);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn abbArr;\n}","const HASH_SUBCLASS = \"sub:\";\r\nconst HASH_FEATURE = \"f:\";\r\nconst HASH_HIDE_FEATURES = \"hideclassfs:\";\r\nconst HASH_ALL_SOURCES = \"allsrc:\";\r\nconst HASH_SUB_LIST_SEP = \"~\";\r\n\r\nconst CLSS_FEATURE_LINK = \"feature-link\";\r\nconst CLSS_ACTIVE = \"mdc-chip--selected\";\r\nconst CLSS_SUBCLASS_PILL = \"mdc-chip\";\r\nconst CLSS_CLASS_FEATURES_ACTIVE = \"cf-active\";\r\nconst CLSS_OTHER_SOURCES_ACTIVE = \"os-active\";\r\nconst CLSS_SUBCLASS_PREFIX = \"subclass-prefix\";\r\nconst CLSS_CLASS_FEATURE = \"class-feature\";\r\nconst CLSS_GAIN_SUBCLASS_FEATURE = \"gain-subclass-feature\";\r\nconst ID_CLASS_FEATURES_TOGGLE = \"cf-toggle\";\r\nconst ID_OTHER_SOURCES_TOGGLE = \"os-toggle\";\r\n\r\nconst STR_PROF_NONE = \"none\";\r\n\r\nconst ATB_DATA_FEATURE_LINK = \"data-flink\";\r\nconst ATB_DATA_FEATURE_ID = \"data-flink-id\";\r\nconst ATB_DATA_SC_LIST = \"data-subclass-list\";\r\n\r\nimport {\r\n  jqHeight,\r\n  jqOffset,\r\n  parseHTML,\r\n  throttle,\r\n  ascSort,\r\n  encodeForHash,\r\n  jqAfter,\r\n  jqEmpty,\r\n  isNonstandardSource,\r\n  joinConjunct,\r\n  hasBeenReprinted\r\n} from \"../js/utils.js\";\r\nimport {\r\n  HASH_LIST_SEP,\r\n  HASH_PART_SEP,\r\n  CLSS_SUBCLASS_FEATURE,\r\n  ATB_DATA_SC,\r\n  ATB_DATA_SRC,\r\n  CLSS_NON_STANDARD_SOURCE,\r\n  ATB_DATA_PART_SEP,\r\n  ATB_DATA_LIST_SEP,\r\n  HASH_START\r\n} from \"../util/consts.js\";\r\nimport EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { setRouteSelection, readRouteSelection } from \"../util/routing.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\nexport { onLoad, onDataLoad, onHashChange, onSubChange };\r\n\r\nfunction renderStr(string) {\r\n  let renderStack = []\r\n  renderer.recursiveEntryRender(string, renderStack, 0);\r\n  return renderStack.join(\" \");\r\n}\r\nfunction setSubclassFixation(rootEl) {\r\n  if (jqOffset(rootEl.querySelector(\"#subclassHeight\")).top - document.body.scrollTop < 34) {\r\n    if (!rootEl.querySelector(\"#subclasses\").classList.contains(\"fixed\")) {\r\n      rootEl.querySelector(\"#subclasses\").classList.add(\"fixed\");\r\n      rootEl.querySelector(\"#subclassHeight\").style.height =\r\n        jqHeight(rootEl.querySelector(\"#subclasses\")) + 40 + \"px\";\r\n    }\r\n  } else {\r\n    rootEl.querySelector(\"#subclasses\").classList.remove(\"fixed\");\r\n    rootEl.querySelector(\"#subclassHeight\").style.height = \"0\";\r\n  }\r\n}\r\n\r\nfunction onLoad(rootEl) {\r\n  let backToTop = rootEl.querySelector(\".back-to-top\");\r\n  backToTop.addEventListener(\"click\", () => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  window.addEventListener(\r\n    \"scroll\",\r\n    throttle(() => {\r\n      if (document.body.scrollTop > 850) {\r\n        backToTop.classList.remove(\"hidden\");\r\n      } else {\r\n        backToTop.classList.add(\"hidden\");\r\n      }\r\n      setSubclassFixation(rootEl);\r\n    }, 100)\r\n  );\r\n}\r\n\r\nfunction onDataLoad(classes, rootEl) {\r\n\t// alphabetically sort subclasses\r\n\tfor (const c of classes) {\r\n    if (c.subclasses) {\r\n      c.subclasses = c.subclasses.sort((a, b) => ascSort(a.name, b.name));\r\n    }\r\n\t}\r\n\r\n\twindow.classTableDefault = rootEl.querySelector(\"#classtable\").innerHTML;\r\n\r\n\t//const classLinkList = rootEl.querySelector(\".classes\");\r\n\t//let tempString = \"\";\r\n\tlet gridString = \"\";\r\n\tfor (let i = 0; i < classes.length; i++) {\r\n\t\tconst curClass = classes[i];\r\n\t\t// tempString +=\r\n\t\t// \t`<div id='${i}' class='class-item mdc-list-item mdc-theme--on-surface history-link' data-link='${getClassHash(curClass)}' data-title='${curClass.name}'>\r\n\t\t// \t\t${curClass.name}\r\n\t\t// \t</div>`;\r\n\r\n\t\tlet svg = curClass.name.replace(/(\\s|\\(|\\))/g, \"\");\r\n\r\n\t\tgridString += \r\n\t\t\t`<div class='class-grid-item history-link class-grid-item__${curClass.name.replace(/(\\s|\\(|\\))/g,'')}'\r\n\t\t\t\tdata-link='${encodeForHash(curClass.name, curClass.source)}' data-title='${curClass.name}'>\r\n\t\t\t\t<span class='class-grid-item--text'>${curClass.name}</span>\r\n\t\t\t\t<dnd-svg id='${svg}' class='class-grid-item--image class-grid-item__${svg}'></dnd-svg>\r\n\t\t\t</div>`\r\n\t}\r\n\t//classLinkList.append(parseHTML(tempString));\r\n\tlet newClasses = parseHTML(gridString);\r\n\twhile (newClasses.length > 0) {\r\n\t\tnewClasses[0].addEventListener(\"click\", (e) => {\r\n\t\t\tlet tar = e.target.closest(\".class-grid-item\");\r\n      setRouteSelection(tar.getAttribute(\"data-link\"));\r\n    });\r\n\t\trootEl.querySelector(\".class-list-container\").appendChild(newClasses[0]);\r\n\t}\r\n}\r\n\r\nfunction onHashChange(curClass, rootEl) {\r\n  rootEl.querySelector(\"#classtable\").innerHTML = window.classTableDefault;\r\n  rootEl.querySelector(\"#subclasses\").classList.remove(\"fixed\");\r\n  rootEl.querySelector(\"#subclasses\").classList.remove(\"closed\");\r\n  rootEl.querySelector(\".mobile-clone-spells\") && rootEl.querySelector(\".mobile-clone-spells\").remove();\r\n\r\n  let svgName = curClass.name.replace(/(\\s|\\(|\\))/g, \"\");\r\n  rootEl.querySelector(\".class-icon.stand-alone-icon\").id = svgName;\r\n\r\n  const isUaClass = isNonstandardSource(curClass.source);\r\n\r\n  // SUMMARY SIDEBAR =================================================================================================\r\n  // hit dice and HP\r\n  if (curClass.hd) {\r\n    rootEl.querySelector(\"#hp\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#hp div#hitdice span\").innerHTML = EntryRenderer.getEntryDice(curClass.hd);\r\n    rootEl.querySelector(\"#hp div#hp1stlevel span\").innerHTML = curClass.hd.faces + \" + your Constitution modifier\";\r\n    rootEl.querySelector(\"#hp div#hphigherlevels span\").innerHTML =\r\n      `${EntryRenderer.getEntryDice(curClass.hd)} (or ${curClass.hd.faces / 2 + 1}) + your Constitution modifier per ${\r\n        curClass.name\r\n      } level after 1st`;\r\n  } else {\r\n    rootEl.querySelector(\"#hp\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // save proficiency\r\n  if (curClass.proficiency) {\r\n    rootEl.querySelector(\"#prof\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#prof div#saves span\").innerHTML = curClass.proficiency.map(p => Parser.attAbvToFull(p)).join(\", \");\r\n  } else {\r\n    rootEl.querySelector(\"#prof\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // starting proficiencies\r\n  const sProfs = curClass.startingProficiencies;\r\n  if (sProfs) {\r\n    rootEl.querySelector(\"#armor\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#weapons\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#tools\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#skills\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"div#armor span\").innerHTML =\r\n      sProfs.armor === undefined\r\n        ? STR_PROF_NONE\r\n        : sProfs.armor.map(a => (a === \"light\" || a === \"medium\" || a === \"heavy\" ? a + \" armor\" : a)).join(\", \");\r\n    rootEl.querySelector(\"div#weapons span\").innerHTML =\r\n      sProfs.weapons === undefined\r\n        ? STR_PROF_NONE\r\n        : sProfs.weapons.map(w => (w === \"simple\" || w === \"martial\" ? w + \" weapons\" : w)).join(\", \");\r\n    rootEl.querySelector(\"div#tools span\").innerHTML =\r\n      sProfs.tools === undefined ? STR_PROF_NONE : sProfs.tools.join(\", \");\r\n    rootEl.querySelector(\"div#skills span\").innerHTML =\r\n      sProfs.skills === undefined ? STR_PROF_NONE : getSkillProfString(sProfs.skills);\r\n  } else {\r\n    rootEl.querySelector(\"#armor\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#weapons\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#tools\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#skills\").classList.add(\"hidden\");\r\n  }\r\n\r\n  function getSkillProfString(skills) {\r\n    let numString, skillOptions, result;\r\n    // Different data structure for v2 classes\r\n    if (Array.isArray(skills)) {\r\n      for (let skill of skills) {\r\n        if (skill.choose) {\r\n          numString = Parser.numberToString(skill.choose.count);\r\n          skillOptions = skill.choose.from;\r\n          result += skillOptions.length === 18\r\n            ? `Choose any ${numString}.`\r\n            : `Choose ${numString} from ${joinConjunct(skillOptions, \", \", \", and \")}.`;\r\n        }\r\n      }\r\n    } else {\r\n      numString = Parser.numberToString(skills.choose);\r\n      skillOptions = skills.from;\r\n      result += skillOptions.length === 18\r\n        ? `Choose any ${numString}.`\r\n        : `Choose ${numString} from ${joinConjunct(skillOptions, \", \", \", and \")}.`;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // starting equipment\r\n  const sEquip = curClass.startingEquipment;\r\n  if (sEquip) {\r\n    rootEl.querySelector(\"#equipment\").classList.remove(\"hidden\");\r\n    const fromBackground = sEquip.additionalFromBackground\r\n      ? \"<p>You start with the following items, plus anything provided by your background.</p>\"\r\n      : \"\";\r\n    const defList = sEquip.default.length === 0 ? \"\" : `<ul><li>${sEquip.default.map(i => renderStr(i)).join(\"</li><li>\")}</ul>`;\r\n    const goldAlt =\r\n      sEquip.goldAlternative === undefined\r\n        ? \"\"\r\n        : `<p>Alternatively, you may start with ${renderStr(sEquip.goldAlternative)} gp to buy your own equipment.</p>`;\r\n    rootEl.querySelector(\"#equipment div\").innerHTML = `${fromBackground}${defList}${goldAlt}`;\r\n  } else {\r\n    rootEl.querySelector(\"#equipment\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // FEATURE TABLE ===================================================================================================\r\n  const tData = curClass.classTableGroups;\r\n  const groupHeaders = rootEl.querySelector(\"#groupHeaders\");\r\n  const colHeaders = rootEl.querySelector(\"#colHeaders\");\r\n  const levelTrs = [];\r\n  let spellsFlag = false;\r\n  if (tData) {\r\n    for (let i = 0; i < tData.length; i++) {\r\n      const tGroup = tData[i];\r\n\r\n      const hasTitle = tGroup.title !== undefined;\r\n      let subclassData = \"\";\r\n      if (tGroup.subclasses !== undefined) {\r\n        subclassData = `${ATB_DATA_SC_LIST}=\"${tGroup.subclasses\r\n          .map(s => s.name+ATB_DATA_PART_SEP+s.source)\r\n          .join(ATB_DATA_LIST_SEP)}\"`;\r\n      }\r\n      groupHeaders.append(parseHTML(\r\n        `<th ${hasTitle ? `class=\"colGroupTitle table-cell\"` : \"\"} colspan=\"${tGroup.colLabels.length}\" ${subclassData}>${\r\n          hasTitle ? tGroup.title : \"\"\r\n        }</th>`, true, true));\r\n\r\n      for (let j = 0; j < tGroup.colLabels.length; j++) {\r\n        let lbl = tGroup.colLabels[j];\r\n        if (lbl.indexOf(\"@\") > -1) {\r\n          let renderStack = []\r\n          renderer.recursiveEntryRender(lbl, renderStack, 0);\r\n          lbl = renderStack.join(\" \");\r\n        }\r\n        colHeaders.append(parseHTML(`<th class=\"centred-col table-cell\" ${subclassData}>${lbl}</th>`, true, true));\r\n      }\r\n\r\n      for (let j = 0; j < 20; j++) {\r\n        const tr = rootEl.querySelector(`#level${j + 1}`);\r\n        levelTrs[j] = tr;\r\n        for (let k = 0; k < tGroup.rows[j].length; k++) {\r\n          let entry = tGroup.rows[j][k];\r\n          if (entry === 0) entry = \"\\u2014\";\r\n          const stack = [];\r\n          renderer.recursiveEntryRender(entry, stack, \"\", \"\");\r\n          tr.append(parseHTML(`<td class=\"centred-col\" ${subclassData}>${stack.join(\"\")}</td>`, true, true));\r\n        }\r\n      }\r\n      if (\r\n        !spellsFlag &&\r\n        (tGroup.colLabels.indexOf(\"Spells Known\") > -1 ||\r\n          tGroup.colLabels.indexOf(\"Cantrips Known\") > -1 ||\r\n          tGroup.colLabels.indexOf(\"1st\") > -1 ||\r\n          tGroup.colLabels.indexOf(\"Ki Points\") > -1 ||\r\n          tGroup.colLabels.indexOf(\"Rages\") > -1 ||\r\n          tGroup.colLabels.indexOf(\"Talents Known\") > -1)\r\n      ) {\r\n        spellsFlag = true;\r\n      }\r\n    }\r\n  // uses different data structure for Fighter, since no classTableGroups\r\n  } else if (curClass.classFeatures.length) {\r\n    // for each level, find and index the feature cell\r\n    for (let i = 0; i < 20; i++) {\r\n      const tr = rootEl.querySelector(`#level${i + 1}`);\r\n      levelTrs[i] = tr;\r\n    }\r\n  }\r\n\r\n  rootEl.querySelector(\"#classtable\").classList.remove(\"mobile-clone-features\");\r\n  if (spellsFlag) {\r\n    rootEl.querySelector(\"#classtable\").classList.add(\"mobile-clone-features\");\r\n\t\tlet mobileClone = parseHTML('<div class=\"mobile-clone-spells\"></div>');\r\n\t\tmobileClone.append(rootEl.querySelector(\"#classtable\").cloneNode(true));\r\n    mobileClone.querySelector(\"#classtable\").classList.remove(\"mobile-clone-features\");\r\n    mobileClone.querySelector(\"#groupHeaders th:not(.colGroupTitle)\").remove();\r\n    mobileClone.querySelector(\"#groupHeaders .colGroupTitle\") &&\r\n      mobileClone.querySelector(\"#groupHeaders .colGroupTitle\").setAttribute(\"colspan\", \"12\");\r\n\t\tlet colHeaderEls = mobileClone.querySelectorAll(\"#colHeaders th\");\r\n\t\tfor (let colHeaderEl of colHeaderEls) {\r\n      if (colHeaderEl.textContent.toLowerCase().indexOf(\"sneak attack\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Sneak Attack\">Snk Atk</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"sorcery points\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Sorcery Points\">SP</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"spells known\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Spells Known\">S</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"cantrips known\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Cantrips Known\">C</span>';\r\n      }\r\n\t\t}\r\n    jqAfter(rootEl.querySelector(\"#classtable\"), mobileClone);\r\n  }\r\n\r\n  // FEATURE DESCRIPTIONS ============================================================================================\r\n  const renderStack = [];\r\n  let subclassIndex = 0; // the subclass array is not 20 elements\r\n  for (let i = 0; i < 20; i++) {\r\n    // track class table feature names\r\n    const tblLvlFeatures = levelTrs[i].querySelector(\".features\");\r\n    const featureNames = [];\r\n\r\n    // add class features to render stack\r\n    const lvlFeatureList = curClass.classFeatures[i];\r\n    for (let j = 0; j < lvlFeatureList.length; j++) {\r\n      const feature = lvlFeatureList[j];\r\n      const featureId = HASH_FEATURE + encodeForHash(feature.name) + \"_\" + i;\r\n\r\n      const featureLinkPart = HASH_FEATURE + encodeForHash(feature.name) + i;\r\n      const featureLink = parseHTML(\r\n        `<a href=\"#${encodeForHash(curClass.name, curClass.source)}${HASH_PART_SEP}${featureLinkPart}\"\r\n          class=\"${CLSS_FEATURE_LINK}\"\r\n          ${ATB_DATA_FEATURE_LINK}=\"${featureLinkPart}\"\r\n          ${ATB_DATA_FEATURE_ID}=\"${featureId}\">${feature.name}</a>`\r\n      );\r\n      featureLink.addEventListener(\"click\", function(e) {\r\n        e.preventDefault();\r\n        rootEl.getElementById(featureId).scrollIntoView(true);\r\n        let offset = -84 - jqHeight(rootEl.querySelector(\"#subclasses\"));\r\n        window.scrollBy(0, offset);\r\n      });\r\n      featureNames.push(featureLink);\r\n\r\n      const styleClasses = [CLSS_CLASS_FEATURE];\r\n      if (feature.gainSubclassFeature) styleClasses.push(CLSS_GAIN_SUBCLASS_FEATURE);\r\n\r\n      renderer.recursiveEntryRender(\r\n        feature,\r\n        renderStack,\r\n        0,\r\n        `<div id=\"${featureId}\" class=\"${styleClasses.join(\" \")}\">`,\r\n        `</div>`,\r\n        true\r\n      );\r\n\r\n      // add subclass features to render stack if appropriate\r\n      if (feature.gainSubclassFeature) {\r\n        for (let k = 0; k < curClass.subclasses.length; k++) {\r\n          const subClass = curClass.subclasses[k];\r\n          for (let l = 0; l < subClass.subclassFeatures[subclassIndex].length; l++) {\r\n            const subFeature = subClass.subclassFeatures[subclassIndex][l];\r\n\r\n            // if this is not the subclass intro, add the subclass to the feature name\r\n            // this will only be shown if there are multiple subclasses displayed\r\n            if (subFeature.name === undefined) {\r\n              for (let m = 0; m < subFeature.entries.length; m++) {\r\n                const childEntry = subFeature.entries[m];\r\n                if (\r\n                  childEntry.name !== undefined &&\r\n                  !childEntry.name.startsWith(`<span class=\"${CLSS_SUBCLASS_PREFIX}\">`)\r\n                ) {\r\n                  childEntry.name = `<span class=\"${CLSS_SUBCLASS_PREFIX}\">${subClass.name}: </span>${childEntry.name}`;\r\n                }\r\n              }\r\n            }\r\n\r\n            const styleClasses = [CLSS_SUBCLASS_FEATURE];\r\n            const hideSource =\r\n              isNonstandardSource(subClass.source) || hasBeenReprinted(subClass.shortName, subClass.source);\r\n            if (hideSource) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n            renderer.recursiveEntryRender(\r\n              subFeature,\r\n              renderStack,\r\n              0,\r\n              `<div class=\"${styleClasses.join(\" \")}\" ${ATB_DATA_SC}=\"${subClass.name}\" ${ATB_DATA_SRC}=\"${\r\n                subClass.source\r\n              }\">`,\r\n              `</div>`,\r\n              true\r\n            );\r\n          }\r\n        }\r\n        subclassIndex++;\r\n      }\r\n    }\r\n\r\n    // render class table feature names\r\n    if (featureNames.length === 0) tblLvlFeatures.innerHTML = \"\\u2014\";\r\n    else {\r\n      for (let j = 0; j < featureNames.length; j++) {\r\n        tblLvlFeatures.append(featureNames[j]);\r\n        if (j < featureNames.length - 1) tblLvlFeatures.append(\", \");\r\n      }\r\n    }\r\n  }\r\n  rootEl.querySelector(\"#stats\").innerHTML = renderStack.join(\"\");\r\n\r\n  // hide UA/other sources by default\r\n\tlet nonStandardPills = rootEl.querySelectorAll(`.${CLSS_NON_STANDARD_SOURCE}`);\r\n\tfor (let nonStandardPill of nonStandardPills) {\r\n\t\tif (!nonStandardPill.classList.contains(CLSS_SUBCLASS_PILL)) {\r\n\t\t\tnonStandardPill.style.display = 'none';\r\n\t\t}\r\n\t}\r\n\r\n  // CLASS FEATURE/UA/SUBCLASS PILL BUTTONS ==========================================================================\r\n  const subclassPillWrapper = rootEl.querySelector(\"div#subclasses\");\r\n  // remove any from previous class\r\n  jqEmpty(subclassPillWrapper);\r\n  subclassPillWrapper.append(parseHTML(`<div class='title'>Subclasses</div>`));\r\n\r\n  // show/hide UA/other sources\r\n  const allSourcesToggle = makeGenericTogglePill(\r\n    \"All Sources\",\r\n    CLSS_OTHER_SOURCES_ACTIVE,\r\n    ID_OTHER_SOURCES_TOGGLE,\r\n    HASH_ALL_SOURCES,\r\n    false\r\n  );\r\n\r\n  // show/hide class features pill\r\n  makeGenericTogglePill(\r\n    \"Class Features\",\r\n    CLSS_CLASS_FEATURES_ACTIVE,\r\n    ID_CLASS_FEATURES_TOGGLE,\r\n    HASH_HIDE_FEATURES,\r\n    true\r\n  );\r\n\r\n  // subclass pills\r\n  if (curClass.subclasses) {\r\n    const subClasses = curClass.subclasses\r\n      .map(sc => ({ name: sc.name, source: sc.source, shortName: sc.shortName }))\r\n      .sort(function(a, b) {\r\n        return ascSort(a.shortName, b.shortName);\r\n      });\r\n    for (let i = 0; i < subClasses.length; i++) {\r\n      const nonStandardSource =\r\n        isNonstandardSource(subClasses[i].source) || hasBeenReprinted(subClasses[i].shortName, subClasses[i].source);\r\n      const styleClasses = [CLSS_ACTIVE, CLSS_SUBCLASS_PILL];\r\n      if (nonStandardSource) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n      const pillText = hasBeenReprinted(subClasses[i].shortName, subClasses[i].source)\r\n        ? `${subClasses[i].shortName} (${Parser.sourceJsonToAbv(subClasses[i].source)})`\r\n        : subClasses[i].shortName;\r\n      const pill = parseHTML(\r\n        `<div class=\"${styleClasses.join(\" \")}\" ${ATB_DATA_SC}=\"${subClasses[i].name}\" ${ATB_DATA_SRC}=\"${\r\n          subClasses[i].source\r\n        }\" title=\"Source: ${Parser.sourceJsonToFull(\r\n          subClasses[i].source\r\n        )}\"><span class='mdc-chip__text'>${pillText}</span></div>`\r\n      );\r\n      pill.addEventListener(\"click\", function() {\r\n        handleSubclassClick(pill.classList.contains(CLSS_ACTIVE), subClasses[i].name, subClasses[i].source);\r\n      });\r\n      if (nonStandardSource) pill.style.display = 'none';\r\n      subclassPillWrapper.append(pill);\r\n    }\r\n    subclassPillWrapper.append(parseHTML(`<div class='tab material-icons'>expand_less</div>`));\r\n\r\n    rootEl.querySelector(\"#subclasses .tab\").addEventListener(\"click\", () => {\r\n      rootEl.querySelector(\"#subclasses\").classList.toggle(\"closed\");\r\n    });\r\n\r\n    // if this is a UA class, toggle the \"All Sources\" button\r\n    if (isUaClass) {\r\n      allSourcesToggle.click();\r\n      allSourcesToggle.classList.add(\"hidden\");\r\n    }\r\n  } else {\r\n    rootEl.querySelector(\"#subclasses\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // helper functions\r\n  function makeGenericTogglePill(pillText, pillActiveClass, pillId, hashKey, defaultActive) {\r\n    const pill = parseHTML(`<div id=\"${pillId}\" class=\"mdc-chip\"><span class=\"mdc-chip__text\">${pillText}</span></div>`);\r\n    if (defaultActive) pill.classList.add(pillActiveClass);\r\n    subclassPillWrapper.append(pill);\r\n    pill.addEventListener(\"click\", function() {\r\n      let active = pill.classList.contains(pillActiveClass);\r\n      if (!defaultActive) active = !active;\r\n      handleToggleFeaturesClicks(active);\r\n    });\r\n    return pill;\r\n\r\n    function handleToggleFeaturesClicks(isPillActive) {\r\n      const outStack = [];\r\n      const split = readRouteSelection().split(HASH_PART_SEP);\r\n\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(hashKey)) outStack.push(hashPart);\r\n      }\r\n      if (isPillActive) {\r\n        outStack.push(hashKey + \"true\");\r\n      } else {\r\n        outStack.push(hashKey + \"false\");\r\n      }\r\n      const newHash = outStack.join(HASH_PART_SEP);\r\n      setRouteSelection(newHash, true);\r\n    }\r\n  }\r\n\r\n  function handleSubclassClick(isPillActive, subclassName, subclassSource) {\r\n    const outStack = [];\r\n    const routeSelection = readRouteSelection();\r\n    const split = routeSelection.split(HASH_PART_SEP);\r\n\r\n    const encodedSubClass = encodeForHash(subclassName, subclassSource);\r\n    const subclassLink = HASH_SUBCLASS + encodedSubClass;\r\n\r\n    if (isPillActive && routeSelection.includes(HASH_SUBCLASS)) {\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(HASH_SUBCLASS)) {\r\n\t\t\t\t\toutStack.push(hashPart);\r\n\t\t\t\t} else {\r\n          const subClassStack = [];\r\n          const subClasses = hashPart.substr(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n          for (let j = 0; j < subClasses.length; j++) {\r\n            const subClass = subClasses[j];\r\n            if (subClass !== encodedSubClass) subClassStack.push(subClass);\r\n          }\r\n          if (subClassStack.length > 0) outStack.push(HASH_SUBCLASS + subClassStack.join(HASH_LIST_SEP));\r\n        }\r\n      }\r\n    } else {\r\n      let hasSubclassHash = false;\r\n\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(HASH_SUBCLASS)) outStack.push(hashPart);\r\n        else {\r\n          const subClassStack = [];\r\n          const subClasses = hashPart.substr(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n          for (let j = 0; j < subClasses.length; j++) {\r\n            const subClass = subClasses[j];\r\n            if (subClass !== encodedSubClass) subClassStack.push(subClass);\r\n          }\r\n          subClassStack.push(encodedSubClass);\r\n          if (subClassStack.length > 0) outStack.push(HASH_SUBCLASS + subClassStack.join(HASH_LIST_SEP));\r\n\r\n          hasSubclassHash = true;\r\n        }\r\n      }\r\n\r\n      if (!hasSubclassHash) outStack.push(subclassLink);\r\n    }\r\n    const newHash = outStack.join(HASH_PART_SEP);\r\n    setRouteSelection(newHash, true);\r\n  }\r\n}\r\n\r\nfunction onSubChange(sub, curHash, rootEl) {\r\n  setSubclassFixation(rootEl);\r\n\tlet subclasses = null;\r\n\tlet feature = null;\r\n\tlet hideClassFeatures = null;\r\n\tlet showAllSources = null;\r\n\r\n\tfor (let i = 0; i < sub.length; i++) {\r\n\t\tconst hashPart = sub[i];\r\n\r\n\t\tif (hashPart.startsWith(HASH_SUBCLASS)) subclasses = hashPart.slice(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n\t\tif (hashPart.startsWith(HASH_FEATURE)) feature = hashPart;\r\n\t\tif (hashPart.startsWith(HASH_HIDE_FEATURES)) hideClassFeatures = hashPart.slice(HASH_HIDE_FEATURES.length) === \"true\";\r\n\t\tif (hashPart.startsWith(HASH_ALL_SOURCES)) showAllSources = hashPart.slice(HASH_ALL_SOURCES.length) === \"true\";\r\n\t}\r\n\r\n\tconst hideOtherSources = showAllSources === null || showAllSources === false;\r\n\r\n\tif (subclasses !== null) {\r\n\t\tupdateClassTableLinks();\r\n\r\n\t\tconst $toShow = [];\r\n\t\tconst $toHide = [];\r\n\t\tconst $subClassSpanList = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PILL}`);\r\n\t\tfor (let classSpan of $subClassSpanList) {\r\n\t\t\tconst $this = classSpan;\r\n\t\t\tconst thisSc = encodeForHash($this.getAttribute(ATB_DATA_SC), $this.getAttribute(ATB_DATA_SRC));\r\n\t\t\tlet shown = false;\r\n\r\n\t\t\tfor (let j = 0; j < subclasses.length; j++) {\r\n\t\t\t\tconst sc = subclasses[j];\r\n\t\t\t\tif (sc.trim() === thisSc) {\r\n\t\t\t\t\tshown = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shown) {\r\n\t\t\t\t$toShow.push($this);\r\n\t\t\t} else {\r\n\t\t\t\t$toHide.push($this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    const otherSrcSubFeats = rootEl.querySelectorAll(`p.${CLSS_NON_STANDARD_SOURCE}`);\r\n    const shownInTable = [];\r\n\r\n    for (let v of $toShow) {\r\n      v.classList.add(CLSS_ACTIVE);\r\n      let selectedSCFeatures = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_FEATURE}[${ATB_DATA_SC}=\"${v.getAttribute(ATB_DATA_SC)}\"][${ATB_DATA_SRC}=\"${v.getAttribute(ATB_DATA_SRC)}\"]`);\r\n      for (let selectedSCFeature of selectedSCFeatures) {\r\n        selectedSCFeature.style.display = null;\r\n      }\r\n      if (hideOtherSources) {\r\n        for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n          if (\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n          ) {\r\n            otherSrcSubFeat.style.display = \"none\";\r\n          }\r\n        }\r\n      } else {\r\n        for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n          if (\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n          ) {\r\n            otherSrcSubFeat.style.display = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      const asInTable = v.getAttribute(ATB_DATA_SC) + ATB_DATA_PART_SEP + v.getAttribute(ATB_DATA_SRC);\r\n      shownInTable.push(asInTable);\r\n      handleTableGroups(shownInTable, asInTable, true);\r\n    }\r\n\r\n    for (let v of $toHide) {\r\n      v.classList.remove(CLSS_ACTIVE);\r\n      let selectedSCFeatures = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_FEATURE}[${ATB_DATA_SC}=\"${v.getAttribute(ATB_DATA_SC)}\"][${ATB_DATA_SRC}=\"${v.getAttribute(ATB_DATA_SRC)}\"]`);\r\n      for (let selectedSCFeature of selectedSCFeatures) {\r\n        selectedSCFeature.style.display = 'none';\r\n      }\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n        ) {\r\n          otherSrcSubFeat.style.display = \"none\";\r\n        }\r\n      }\r\n      v.getAttribute(ATB_DATA_SC);\r\n      const asInTable = v.getAttribute(ATB_DATA_SC) + ATB_DATA_PART_SEP + v.getAttribute(ATB_DATA_SRC);\r\n      handleTableGroups(shownInTable, asInTable, false);\r\n    };\r\n\r\n    if (hideOtherSources) {\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          !otherSrcSubFeat.classList.contains(CLSS_SUBCLASS_FEATURE) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === EntryRenderer.DATA_NONE &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === EntryRenderer.DATA_NONE\r\n        ) {\r\n          otherSrcSubFeat.style.display = \"none\";\r\n        }\r\n      }\r\n    } else {\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          !otherSrcSubFeat.classList.contains(CLSS_SUBCLASS_FEATURE) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === EntryRenderer.DATA_NONE &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === EntryRenderer.DATA_NONE\r\n        ) {\r\n          otherSrcSubFeat.style.display = null;\r\n        }\r\n      }\r\n    }\r\n\r\n\t\t// show subclass prefixes if we're displaying more than 1 subclass\r\n\t\tlet subClassEls = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PREFIX}`);\r\n\t\tif ($toShow.length !== 1) {\r\n\t\t\tfor (let subClassEl of subClassEls) {\r\n\t\t\t\tsubClassEl.style.display = null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let subClassEl of subClassEls) {\r\n\t\t\t\tsubClassEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// hide class features as required\r\n\tconst cfToggle = rootEl.querySelector(`#${ID_CLASS_FEATURES_TOGGLE}`);\r\n\tconst toToggleCf= rootEl.querySelectorAll(`.${CLSS_CLASS_FEATURE}`);\r\n\tif (hideClassFeatures !== null && hideClassFeatures) {\r\n\t\tcfToggle.classList.remove(CLSS_CLASS_FEATURES_ACTIVE);\r\n\t\tfor (let el of toToggleCf) {\r\n\t\t\tif (!el.classList.contains(CLSS_GAIN_SUBCLASS_FEATURE)) {\r\n        el.style.display = \"none\";\r\n      }\r\n\t\t}\r\n\t} else {\r\n\t\tcfToggle.classList.add(CLSS_CLASS_FEATURES_ACTIVE);\r\n\t\tfor (let el of toToggleCf) {\r\n\t\t\tif (!el.classList.contains(CLSS_GAIN_SUBCLASS_FEATURE)) {\r\n        el.style.display = null;\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\t// show UA/etc content as required\r\n\tconst srcToggle = rootEl.querySelector(`#${ID_OTHER_SOURCES_TOGGLE}`);\r\n\tconst toToggleSrc = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PILL}.${CLSS_NON_STANDARD_SOURCE}`);\r\n\tif (hideOtherSources) {\r\n\t\tsrcToggle.classList.remove(CLSS_OTHER_SOURCES_ACTIVE);\r\n\t\tfor (let el of toToggleSrc) {\r\n\t\t\tel.style.display = \"none\";\r\n\t\t}\r\n\t} else {\r\n\t\tsrcToggle.classList.add(CLSS_OTHER_SOURCES_ACTIVE);\r\n\t\tfor (let el of toToggleSrc) {\r\n\t\t\tel.style.display = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// scroll to the linked feature if required\r\n\tif (feature !== null && (window.prevFeature === undefined || window.prevFeature !== feature)) {\r\n\t\trootEl.getElementById(rootEl.querySelectorAll(`[${ATB_DATA_FEATURE_LINK}=\"${feature}\"]`).getAttribute(ATB_DATA_FEATURE_ID)).scrollIntoView();\r\n\t\twindow.prevFeature = feature;\r\n\t}\r\n\r\n\tupdateClassTableLinks();\r\n\r\n\tfunction handleTableGroups(shownInTable, tableDataTag, show) {\r\n\t\tlet listEls = rootEl.querySelectorAll(`[data-subclass-list]`);\r\n\t\tfor (let el of listEls) {\r\n\t\t\tconst $this = el;\r\n\t\t\tconst scs = $this.getAttribute(ATB_DATA_SC_LIST).split(ATB_DATA_LIST_SEP);\r\n\r\n\t\t\t// if another class has shown this item, don't hide it\r\n\t\t\tif (!show) {\r\n\t\t\t\tfor (let i = 0; i < scs.length; i++) {\r\n\t\t\t\t\tconst sc = scs[i];\r\n\t\t\t\t\tif (sc.indexOf(shownInTable) > -1) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < scs.length; i++) {\r\n\t\t\t\tconst sc = scs[i];\r\n\t\t\t\tif (sc === tableDataTag) {\r\n\t\t\t\t\tif (show) $this.style.display = null;\r\n\t\t\t\t\telse $this.style.display = 'none';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateClassTableLinks () {\r\n\t\tconst hashParts = curHash.slice(1).split(HASH_PART_SEP);\r\n\t\tconst outParts = [];\r\n\t\tfor (let i = 0; i < hashParts.length; i++) {\r\n\t\t\tconst part = hashParts[i];\r\n\t\t\tif (!part.startsWith(HASH_FEATURE)) outParts.push(part);\r\n\t\t}\r\n\t\tlet els = rootEl.querySelectorAll(`.${CLSS_FEATURE_LINK}`);\r\n\t\tfor (let el of els) {\r\n\t\t\tel.href = HASH_START+outParts.join(HASH_PART_SEP)+HASH_PART_SEP+el.getAttribute(ATB_DATA_FEATURE_LINK);\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}