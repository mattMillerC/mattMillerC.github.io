{"version":3,"sources":["webpack:///./components/dnd-select-add.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/views/character/dnd-character-builder-attributes.js"],"names":["DndSelectAdd","test","type","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","Number","label","placeholder","multiValue","this","listBox","remove","$","select","render","isArray","choiceArray","map","v","indexOf","findIndex","o","name","source","filter","selectedValues","i","join","super","ready","setTimeout","async","renderer","root","document","createElement","setAttribute","addEventListener","e","opened","wasPreviouslySelected","srcElement","getAttribute","length","splice","selectedOptions","option","item","textContent","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","customElements","define","$_documentContainer","head","content","memoizedTemplate","innerHTML","hasControls","min","max","step","__previousValidInput","inputElement","__onInputChange","bind","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","checkValidity","window","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","str","dex","con","int","wis","cha","strAdj","dexAdj","conAdj","intAdj","wisAdj","chaAdj","strProfs","dexProfs","intProfs","wisProfs","chaProfs","saves","classSkillProfOptions","Object","backgroundSkillProfOptions","defaultBackgroundSkillProf","raceAttributeOptions","defaultRaceAttribute","isEditMode","characterChangeHandler","character","detail","updateAttributesFromCharacter","editModeHandler","attr","setProperties","attributeAdj","raceAttributes","choose","from","toUpperCase","raceAttributeChoices","count","raceAttributeSelections","attribute","toLowerCase","mod","composed","adj","b","intA","parseInt","intB","base","floor","_total","arg","arguments","constructor","entries"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              if (option.name) {\n                item.textContent = option.name;\n                item.setAttribute(\"value\", i);\n              } else {\n                item.textContent = util_capitalizeAll(option);\n                item.setAttribute(\"value\", i);\n              }\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices) {\n    if (label) {\n      if (choices) {\n        return `${label} (${choices})`;\n      } else {\n        return label;\n      }\n    }\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices)]]\" placeholder=\"[[placeholder]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import {PolymerElement, html} from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-select-add\";\nimport { \n  getCharacterChannel,\n  getSelectedCharacter,\n  updateAttr,\n  getClassSaves,\n  getSkillProfs,\n  getRaceAttributeOptions,\n  getRaceAttributeDefaults,\n  getAttributeScoreModifiers\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt } from \"../../../js/utils\";\n\nclass DndCharacterBuilderAttributes extends PolymerElement {\n  \n  static get properties() {\n    return {\n      str: {\n        type: Number\n      },\n      dex: {\n        type: Number\n      },\n      con: {\n        type: Number\n      },\n      int: {\n        type: Number\n      },\n      wis: {\n        type: Number\n      },\n      cha: {\n        type: Number\n      },\n      strAdj: {\n        type: Number,\n        value: 0\n      },\n      dexAdj: {\n        type: Number,\n        value: 0\n      },\n      conAdj: {\n        type: Number,\n        value: 0\n      },\n      intAdj: {\n        type: Number,\n        value: 0\n      },\n      wisAdj: {\n        type: Number,\n        value: 0\n      },\n      chaAdj: {\n        type: Number,\n        value: 0\n      },\n      strProfs: {\n        type: String,\n        value: \"\"\n      },\n      dexProfs: {\n        type: String,\n        value: \"\"\n      },\n      intProfs: {\n        type: String,\n        value: \"\"\n      },\n      wisProfs: {\n        type: String,\n        value: \"\"\n      },\n      chaProfs: {\n        type: String,\n        value: \"\"\n      },\n\n      saves: {\n        type: Array,\n        value: []\n      },\n      classSkillProfOptions: {\n        type: Object,\n        value: {}\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      raceAttributeOptions: {\n        type: Object,\n        value: []\n      },\n      defaultRaceAttribute: {\n        type: String,\n        value: \"\"\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\"updateCharAttr(str, dex, con, int, wis, cha)\"]\n  }\n\n  updateCharAttr(str, dex, con, int, wis, cha) {\n    if (str && dex && con && int && wis && cha) {\n      updateAttr({str, dex, con, int, wis, cha});\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateAttributesFromCharacter(character);\n    };\n    \n    this.updateAttributesFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateAttributesFromCharacter(character) {\n    if (character && character.attr) {\n      const attr = character.attr;\n      if (attr.str !== this.str || attr.dex !== this.dex || attr.con !== this.con \n          || attr.int !== this.int || attr.wis !== this.wis || attr.cha !== this.cha) {\n        this.setProperties({\n          str: character.attr.str,\n          dex: character.attr.dex,\n          con: character.attr.con,\n          int: character.attr.int,\n          wis: character.attr.wis,\n          cha: character.attr.cha\n        });\n      }\n\n      this.saves = await getClassSaves();\n\n      // Attributes from Race\n      let attributeAdj = await getAttributeScoreModifiers();\n      let raceAttributes = await getRaceAttributeOptions();\n      if (raceAttributes && raceAttributes.choose) {\n        this.raceAttributeOptions = raceAttributes.choose.from.map(i => { return i.toUpperCase() });\n        this.raceAttributeChoices = raceAttributes.choose.count || 1;\n        this.raceAttributeSelections = character.raceAttributes;\n      } else {\n        this.raceAttributeOptions = undefined;\n        this.raceAttributeChoices = undefined;\n        this.raceAttributeSelections = undefined;\n      }\n      let defaultRaceAttribute = await getRaceAttributeDefaults(raceAttributes);\n      this.defaultRaceAttribute = defaultRaceAttribute\n        .map(e => {\n          let attribute = e[0].toLowerCase(),\n            mod = e[1];\n          return attribute.toUpperCase() + ' ' + absInt(mod);\n        }).join(', ');\n\n      this.strAdj = attributeAdj.str;\n      this.dexAdj = attributeAdj.dex;\n      this.conAdj = attributeAdj.con;\n      this.intAdj = attributeAdj.int;\n      this.wisAdj = attributeAdj.wis;\n      this.chaAdj = attributeAdj.cha;\n\n      let strProfs = await getSkillProfs('str')\n      this.strProfs = strProfs.map(s => {return util_capitalizeAll(s)}).join(', ');\n      let dexProfs = await getSkillProfs('dex')\n      this.dexProfs = dexProfs.map(s => {return util_capitalizeAll(s)}).join(', ');\n      let intProfs = await getSkillProfs('int')\n      this.intProfs = intProfs.map(s => {return util_capitalizeAll(s)}).join(', ');\n      let wisProfs = await getSkillProfs('wis')\n      this.wisProfs = wisProfs.map(s => {return util_capitalizeAll(s)}).join(', ');\n      let chaProfs = await getSkillProfs('cha')\n      this.chaProfs = chaProfs.map(s => {return util_capitalizeAll(s)}).join(', ');\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _adjustString(adj) {\n    if (adj !== 0 && adj !== undefined) {\n      return absInt(adj);\n    }\n    return \"\";\n  }\n\n  _total(a, b) {\n    let intA = parseInt(a),\n      intB = parseInt(b);\n\n    intA = isNaN(intA) ? 0 : intA;\n    intB = isNaN(intB) ? 0 : intB;\n\n    return intA + intB;\n  }\n\n  _mod(base, adj) {\n    return absInt(Math.floor((this._total(base, adj) - 10) / 2));\n  }\n\n  _contains(saves, str) {\n    return saves.indexOf(str) > -1;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        :host {\n          display: block;\n          padding: 14px;\n        }\n\n        .default-selection {\n          font-style: italic;\n        }\n\n        .row {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: flex-end;\n          margin-bottom: 12px;\n        }\n\n        .row.heading {\n          margin-bottom: 0;\n        }\n\n        .data {\n          font-size: 18px;\n          padding: 10px 8px 8px;\n          display: flex;\n          justify-content: center;\n          margin-bottom: 4px;\n          min-width: 24px;\n        }\n\n        .data:last-child {\n          flex-basis: 100%;\n        }\n        \n        .heading .data {\n          font-weight: bold;\n          margin-bottom: 0;\n          padding-bottom: 0;\n          font-size: 14px;\n        }\n\n        .mod {\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          width: 24px;\n          margin-left: auto;\n          margin-right: auto;\n          border: 2px solid var(--mdc-theme-primary);\n        }\n        .mod.no-bg {\n          background: none;\n          border: none;\n        }\n\n        .prof {\n          justify-content: flex-start;\n          margin: 0 12px;\n        }\n\n        .heading .prof {\n          display: none;\n        }\n\n        .mobile-label .data {\n          justify-content: flex-start;\n        }\n\n        vaadin-integer-field {\n          width: 100px;\n        }\n\n        .input {\n          width: 84px;\n          flex-shrink: 0;\n        }\n        \n        .save {\n          width: 24px;\n        }\n\n        .save-icon {\n          width: 24px;\n        }\n\n        [hidden] {\n          visibility: hidden;\n        }\n        @media(min-width: 420px) {\n          .mod {\n            width: 32px;\n          }\n          .data {\n            min-width: 44px;\n          }\n          .heading .data {\n            font-size: 18px;\n          }\n        }\n        @media(min-width: 921px) {\n          .mobile-label {\n            display: none;\n          }\n          .attr-choice-wrap,\n          .prof-choice-wrap {\n            flex-direction: row;\n          }\n          .row {\n            flex-wrap: nowrap;\n          }\n          .heading .prof {\n            display: block;\n          }\n        }\n      </style>\n\n      <h2>Attributes</h2>\n      <div class=\"stats\">\n        <div class=\"row heading\">\n          <div class=\"input data\"></div>\n          <div class=\"save data\">Save</div>\n          <div class=\"adj data\">Adj.</div>\n          <div class=\"total data\">Total</div>\n          <div class=\"mod data no-bg\">Mod</div>\n          <div class=\"prof data\"></div>\n        </div>\n        <div class=\"row\">\n          <vaadin-integer-field value={{str}} min=\"1\" max=\"20\" has-controls label=\"Strength\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'str')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(strAdj)]]</div>\n          <div class=\"total data\">[[_total(strAdj, str)]]</div>\n          <div class=\"mod data\">[[_mod(strAdj, str)]]</div>\n          <div class=\"prof data\">[[strProfs]]</div>\n        </div>\n\n        <div class=\"row\">\n          <vaadin-integer-field value={{dex}} min=\"1\" max=\"20\" has-controls label=\"Dexterity\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'dex')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(dexAdj)]]</div>\n          <div class=\"total data\">[[_total(dexAdj, dex)]]</div>\n          <div class=\"mod data\">[[_mod(dexAdj, dex)]]</div>\n          <div class=\"prof data\">[[dexProfs]]</div>\n        </div>\n\n        <div class=\"row\">\n          <vaadin-integer-field value={{con}} min=\"1\" max=\"20\" has-controls label=\"Constitution\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'con')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(conAdj)]]</div>\n          <div class=\"total data\">[[_total(conAdj, con)]]</div>\n          <div class=\"mod data\">[[_mod(conAdj, con)]]</div>\n          <div class=\"prof data\">[[conProfs]]</div>\n        </div>\n\n        <div class=\"row\">\n          <vaadin-integer-field value={{int}} min=\"1\" max=\"20\" has-controls label=\"Intellegence\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'int')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(intAdj)]]</div>\n          <div class=\"total data\">[[_total(intAdj, int)]]</div>\n          <div class=\"mod data\">[[_mod(intAdj, int)]]</div>\n          <div class=\"prof data\">[[intProfs]]</div>\n        </div>\n\n        <div class=\"row\">\n          <vaadin-integer-field value={{wis}} min=\"1\" max=\"20\" has-controls label=\"Wisdom\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'wis')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(wisAdj)]]</div>\n          <div class=\"total data\">[[_total(wisAdj, wis)]]</div>\n          <div class=\"mod data\">[[_mod(wisAdj, wis)]]</div>\n          <div class=\"prof data\">[[wisProfs]]</div>\n        </div>\n\n        <div class=\"row\">\n          <vaadin-integer-field value={{cha}} min=\"1\" max=\"20\" has-controls label=\"Charisma\"></vaadin-integer-field>\n          <div class=\"save data\">\n            <span hidden$=\"[[!_contains(saves, 'cha')]]\" class=\"save-icon material-icons\">done</span>\n          </div>\n          <div class=\"adj data\">[[_adjustString(chaAdj)]]</div>\n          <div class=\"total data\">[[_total(chaAdj, cha)]]</div>\n          <div class=\"mod data\">[[_mod(chaAdj, cha)]]</div>\n          <div class=\"prof data\">[[chaProfs]]</div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-attributes\", DndCharacterBuilderAttributes);"],"sourceRoot":""}