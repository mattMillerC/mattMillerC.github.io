{"version":3,"sources":["webpack:///./components/dnd-rules.js","webpack:///./components/views/dnd-rules-view.js","webpack:///./util/data.js"],"names":["rules","type","Array","selectedRule","Object","value","observer","contentsOrder","id","title","this","htmlcontent","dispatchEvent","CustomEvent","bubbles","composed","detail","name","$","rulescontent","innerHTML","tables","querySelectorAll","table","hash","length","hashName","category","values","rule","set","undefined","super","then","data","rulesObject","compendium","parentlist","push","shadowRoot","currentSelection","connectedCallback","selectionChangeHandler","e","selection","deselectionChangeHandler","addEventListener","disconnectedCallback","removeEventListener","el","target","closest","getAttribute","a","customElements","define","cache","async","loadModel","modelId","hasOwnProperty","promises","loadJSON","Promise","all","itemData","basicItemData","variantData","propertyList","typeList","itemList","basicItemList","basicitems","itemPropertyList","itemProperty","itemTypeList","itemType","i","abbreviation","JSON","parse","stringify","entries","toLowerCase","variantList","concat","tier","inherits","rarity","source","page","requires","armor","curBasicItem","curBasicItemName","j","curVariant","curRequires","hasRequired","indexOf","requiredProperty","excludes","curExcludes","excludedProperty","curInherits","tmpBasicItem","inheritedProperty","namePrefix","nameSuffix","k","tmpText","dmgType","replace","dmgTypeToFull","genericBonus","split","join","unshift","pushObject","targetObject","objectToBePushed","copiedObject","item","noDisplay","property","properties","resist","stealth","strength","scfType","mergeItemsData","loadAllItemData","monsterData","legendaryGroupData","legendaryGroupList","legendaryGroup","lairActions","regionalEffects","monster","thisGroup","lairaction","regionaleffect","parseLegendaryMonsters","loadAllMonsterData","modelData","index","srcURL","allData","srcData","console","error","loadModelFromIndex","isArray","loadModelFromSingleJSON","url","fetch","response","ok","Error","json"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import {PolymerElement, html} from '@polymer/polymer';\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport loadModel from \"../util/data.js\";\nimport \"./styles/material-styles.js\";\nimport \"./styles/my-styles.js\";\nimport { jqWrap, initCollapseToggles, encodeForHash, decodeForHash } from \"../js/utils.js\";\nimport { clearRouteSelection, setRouteSelection, routeEventChannel, readRouteSelection } from '../util/routing.js';\n\nclass DndRules extends PolymerElement {\n  \n  static get properties() {\n    return {\n      rules: {\n        type: Array\n      },\n      selectedRule: {\n        type: Object,\n        value: '',\n        observer: '_selectedRuleChange'\n      },\n      contentsOrder: {\n        type: Array,\n        value: () => {\n          return [\n            { id: \"charactercreation\", title: \"Character Creation\" },\n            { id: \"equipment\", title: \"Equipment\" },\n            { id: \"playingthegame\", title: \"Playing the Game\" },\n            { id: \"runningthegame\", title: \"Running the Game\" },\n            { id: \"setting\", title: \"Setting\" },\n            { id: \"unearthedarcana\", title: \"Unearthed Arcana\" }\n          ];\n        }\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_openRuleFromHash(hash, rules)'\n    ]\n  }\n\n  _selectedRuleChange() {\n    if (this.selectedRule && this.selectedRule.htmlcontent) {\n      this.dispatchEvent(new CustomEvent(\"title-change\", {\n        bubbles: true,\n        composed: true,\n        detail: { title: this.selectedRule.name }\n      }));\n      this.$.rulescontent.innerHTML = this.selectedRule.htmlcontent;\n      let tables = this.$.rulescontent.querySelectorAll(\"table\");\n      for (let table of tables) {\n        jqWrap(table, '<div class=\"table-scroll-wrap\">');\n      }\n    }\n  }\n\n  _openRuleFromHash() {\n    if (this.rules && this.hash && this.hash.length > 1) {\n      let hashName = decodeForHash(this.hash)[0];\n      let selectedRule;\n      for (let category of Object.values(this.rules)) {\n        for (let rule of category) {\n          if (rule.name === hashName) {\n            selectedRule = rule;\n            break;\n          }\n        }\n        if (selectedRule) {\n          break;\n        }\n      }\n      if (selectedRule) {\n        this.set(\"selectedRule\", selectedRule);\n      } else {\n        clearRouteSelection(true);\n      }\n    } else {\n      this.set(\"selectedRule\", undefined);\n    }\n  }\n\n  constructor() {\n    super();\n    loadModel(\"rules\").then((data) => {\n      const rulesObject = {};\n      const rules = data.compendium.rules;\n      for (let rule of rules) {\n        if (rulesObject[rule.parentlist]) {\n          rulesObject[rule.parentlist].push(rule);\n        } else {\n          rulesObject[rule.parentlist] = [rule];\n        }\n      }\n      this.set('rules', rulesObject);\n      initCollapseToggles(this.shadowRoot);\n      let currentSelection = readRouteSelection();\n      if (currentSelection) {\n        this.hash = currentSelection;\n      }\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectionChangeHandler = (e) => {\n      if (e.detail && e.detail.selection) {\n        this.hash = e.detail.selection;\n      }\n    };\n    this.deselectionChangeHandler = () => {\n      this.set(\"selectedRule\", undefined);\n    }\n    routeEventChannel().addEventListener(\"selection-change\", this.selectionChangeHandler);\n    routeEventChannel().addEventListener(\"selection-deselected\", this.deselectionChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.deselectionChangeHandler();\n    routeEventChannel().removeEventListener(\"selection-change\", this.selectionChangeHandler);\n    routeEventChannel().removeEventListener(\"selection-deselected\", this.deselectionChangeHandler);\n  }\n\n  _getCategoryRules(id, rules) {\n    return rules ? rules[id] : '';\n  }\n\n  _openRule(e) {\n    let el = e.target.closest('.mdc-list-item');\n    let category = el.getAttribute(\"category\");\n    let rule = el.getAttribute(\"rule\");\n    let hash = encodeForHash(this.rules[category][rule].name);\n    setRouteSelection(hash);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <div class=\"rules-wrapper\" hidden$=\"[[_exists(selectedRule)]]\">\n        <template is=\"dom-repeat\" items=\"[[contentsOrder]]\" as=\"category\">\n          <div class=\"collapse collapse--left-arrow\">\n            <div class=\"collapse-toggle\">\n              <div class=\"mdc-list-item rule-title mdc-theme--on-surface\">\n                [[category.title]]\n              </div>\n            </div>\n            <div class=\"collapse-wrapper\">\n              <ul class$=\"collapse-list rules [[category.id]]\">\n                <template is=\"dom-repeat\" items=\"[[_getCategoryRules(category.id, rules)]]\" as=\"rule\">\n                  <div\n                    class=\"mdc-list-item mdc-theme--on-surface\"\n                    on-click=\"_openRule\"\n                    category$=\"[[category.id]]\"\n                    rule$=\"[[index]]\"\n                  >\n                    <span class=\"name col-xs-12\">[[rule.name]]</span>\n                  </div>\n                </template>\n              </ul>\n            </div>\n          </div>\n        </template>\n      </div>\n\n      <div id=\"rulescontent\" hidden$=\"[[!_exists(selectedRule)]]\"></div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-rules', DndRules);","import {PolymerElement, html} from '@polymer/polymer';\nimport '../styles/material-styles.js';\nimport '../styles/my-styles.js';\nimport '../dnd-rules';\n\nclass DndRulesView extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <dnd-rules></dnd-rules>\n    `;\n  }\n}\n\ncustomElements.define('dnd-rules-view', DndRulesView);","import {cloneDeep} from \"../js/utils.js\";\nimport Parser from \"./Parser.js\";\n\nlet cache = {};\n\n/**\n * Returns model data object, serving the cached version if already requested.\n * @param {String} modelId Model ID for the data being requested.\n */\nexport default async function loadModel(modelId) {\n\tif (modelId) {\n\t\t// Checks model cache for data\n\t\tif (!cache.hasOwnProperty(modelId)) {\n\t\t\t// Catch for items.json to load additional data\n\t\t\tswitch (modelId) {\n\t\t\t\tcase \"items\":\n\t\t\t\t\tcache[modelId] = await loadAllItemData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bestiary\":\n\t\t\t\t\tcache[modelId] = await loadAllMonsterData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spells\":\n\t\t\t\tcase \"classes\":\n\t\t\t\t\tcache[modelId] = await loadModelFromIndex(modelId);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcache[modelId] = await loadModelFromSingleJSON(modelId);\n\t\t\t}\n\t\t}\n\t\treturn cache[modelId];\n\t} else {\n\t\tconsole.error(\"Missing modelID\");\n\t\treturn [];\n\t}\n}\n\n/**\n * Loads JSON from the given URL.\n * @param {String} url Makes request to specified URL, returns JSON\n */\nfunction loadJSON(url) {\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    });\n};\n\nasync function loadModelFromSingleJSON(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}.json`);\n\tif (Array.isArray(modelData)) {\n\t\treturn modelData;\n\t} else {\n\t\tconsole.error(\"Array data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nasync function loadModelFromIndex(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}/index.json`);\n\tif (modelData.index) {\n\t\tlet promises = [];\n\n\t\tfor (let srcURL of Object.values(modelData.index)) {\n\t\t\tpromises.push(loadJSON(`/data/${modelId}/${srcURL}`));\n\t\t}\n\t\treturn Promise.all(promises).then(data => {\n\t\t\tlet allData = [];\n\n\t\t\tfor (let srcData of data) {\n\t\t\t\tallData = allData.concat(srcData);\n\t\t\t}\n\n\t\t\treturn allData;\n\t\t});\n\t} else {\n\t\tconsole.error(\"Model index data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nfunction loadAllMonsterData() {\n\tconst promises = [];\n\n\tpromises.push(loadJSON(`/data/bestiary.json`));\n\tpromises.push(loadJSON(`/data/legendarygroups.json`));\n\n\treturn Promise.all(promises).then(data => {\n\t\treturn parseLegendaryMonsters(data[0], data[1]);\n\t});\n}\n\nfunction parseLegendaryMonsters(monsterData, legendaryGroupData) {\n  const legendaryGroupList = {};\n\n  for (let legendaryGroup of legendaryGroupData) {\n    legendaryGroupList[legendaryGroup.name] = {\n      lairActions: legendaryGroup.lairActions,\n      regionalEffects: legendaryGroup.regionalEffects\n    };\n  }\n\n  for (let monster of monsterData) {\n    if (monster.legendaryGroup) {\n      const legendaryGroup = monster.legendaryGroup;\n      if (legendaryGroup) {\n        const thisGroup = legendaryGroupList[legendaryGroup];\n        if (thisGroup.lairActions) monster.lairaction = cloneDeep(thisGroup.lairActions);\n        if (thisGroup.regionalEffects) monster.regionaleffect = cloneDeep(thisGroup.regionalEffects);\n      }\n    }\n  }\n  return monsterData;\n}\n\n/**\n * Loads and merges all Item data.\n */\nfunction loadAllItemData() {\n\tconst promises = [];\n\n  promises.push(loadJSON(\"/data/items.json\"));\n  promises.push(loadJSON(\"/data/basicitems.json\"));\n\tpromises.push(loadJSON(\"/data/magicvariants.json\"));\n\n  return Promise.all(promises).then((data) => {\n\t\treturn mergeItemsData(data[0], data[1], data[2]);\n  });\n}\n\nfunction mergeItemsData(itemData, basicItemData, variantData) {\n  const propertyList = {};\n  const typeList = {};\n  let itemList = itemData;\n\n\tlet basicItemList = basicItemData.basicitems;\n\tconst itemPropertyList = basicItemData.itemProperty;\n\tconst itemTypeList = basicItemData.itemType;\n\t// Convert the property and type list JSONs into look-ups, i.e. use the abbreviation as a JSON property name\n\tfor (let i = 0; i < itemPropertyList.length; i++) propertyList[itemPropertyList[i].abbreviation] = itemPropertyList[i].name ? JSON.parse(JSON.stringify(itemPropertyList[i])) : {\"name\": itemPropertyList[i].entries[0].name.toLowerCase(), \"entries\": itemPropertyList[i].entries};\n\tfor (let i = 0; i < itemTypeList.length; i++) typeList[itemTypeList[i].abbreviation] = itemTypeList[i].name ? JSON.parse(JSON.stringify(itemTypeList[i])): {\"name\": itemTypeList[i].entries[0].name.toLowerCase(), \"entries\": itemTypeList[i].entries};\n\n\tlet variantList = variantData;\n\titemList = itemList.concat(basicItemList);\n\tfor (let i = 0; i < variantList.length; i++) {\n\t\tvariantList[i].tier = variantList[i].inherits.tier;\n\t\tvariantList[i].rarity = variantList[i].inherits.rarity;\n\t\tvariantList[i].source = variantList[i].inherits.source;\n\t\tvariantList[i].page = variantList[i].inherits.page;\n\t\tif(!variantList[i].entries && variantList[i].inherits.entries) variantList[i].entries=JSON.parse(JSON.stringify(variantList[i].inherits.entries));\n\t\tif(variantList[i].requires.armor) variantList[i].armor = variantList[i].requires.armor\n\t}\n\titemList = itemList.concat(variantList);\n\tfor (let i = 0; i < basicItemList.length; i++) {\n\t\tconst curBasicItem = basicItemList[i];\n\t\tbasicItemList[i].category = \"Basic\";\n\t\tif(curBasicItem.entries === undefined) curBasicItem.entries=[];\n\t\tconst curBasicItemName = curBasicItem.name.toLowerCase();\n\t\tfor (let j = 0; j < variantList.length; j++) {\n\t\t\tconst curVariant = variantList[j];\n\t\t\tconst curRequires = curVariant.requires;\n\t\t\tlet hasRequired = curBasicItemName.indexOf(\" (\") === -1;\n\t\t\tfor (const requiredProperty in curRequires) if (curRequires.hasOwnProperty(requiredProperty) && curBasicItem[requiredProperty] !== curRequires[requiredProperty]) hasRequired=false;\n\t\t\tif (curVariant.excludes) {\n\t\t\t\tconst curExcludes = curVariant.excludes;\n\t\t\t\tfor (const excludedProperty in curExcludes) if (curExcludes.hasOwnProperty(excludedProperty) && curBasicItem[excludedProperty] === curExcludes[excludedProperty]) hasRequired=false;\n\t\t\t}\n\t\t\tif (hasRequired) {\n\t\t\t\tconst curInherits = curVariant.inherits;\n\t\t\t\tconst tmpBasicItem = JSON.parse(JSON.stringify(curBasicItem));\n\t\t\t\tdelete tmpBasicItem.value; // Magic items do not inherit the value of the non-magical item\n\t\t\t\ttmpBasicItem.category = \"Specific Variant\";\n\t\t\t\tfor (const inheritedProperty in curInherits) {\n\t\t\t\t\tif (curInherits.hasOwnProperty(inheritedProperty)) {\n\t\t\t\t\t\tif (inheritedProperty === \"namePrefix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name = curInherits.namePrefix+tmpBasicItem.name;\n\t\t\t\t\t\t} else if (inheritedProperty === \"nameSuffix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name += curInherits.nameSuffix;\n\t\t\t\t\t\t} else if (inheritedProperty === \"entries\") {\n\t\t\t\t\t\t\tfor (let k = curInherits.entries.length-1; k > -1; k--) {\n\t\t\t\t\t\t\t\tlet tmpText = curInherits.entries[k];\n\t\t\t\t\t\t\t\tif (typeof tmpText === \"string\") {\n\t\t\t\t\t\t\t\t\tif (tmpBasicItem.dmgType) tmpText = tmpText.replace(\"{@dmgType}\", Parser.dmgTypeToFull(tmpBasicItem.dmgType));\n\t\t\t\t\t\t\t\t\tif (curInherits.genericBonus) tmpText = tmpText.replace(\"{@genericBonus}\", curInherits.genericBonus);\n\t\t\t\t\t\t\t\t\tif (tmpText.indexOf(\"{@lowerName}\") !== -1) tmpText = tmpText.split(\"{@lowerName}\").join(curBasicItemName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmpBasicItem.entries.unshift(tmpText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\ttmpBasicItem[inheritedProperty] = curInherits[inheritedProperty];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titemList.push(tmpBasicItem);\n\t\t\t}\n\t\t}\n\t}\n\t\n\n  let pushObject = (targetObject, objectToBePushed) => {\n    const copiedObject = JSON.parse(JSON.stringify(targetObject));\n    copiedObject.push(objectToBePushed);\n    return copiedObject;\n  };\n\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n  }\n  return itemList;\n}"],"sourceRoot":""}