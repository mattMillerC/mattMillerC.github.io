{"version":3,"sources":["webpack:///./util/entryrender.js","webpack:///./js/spells.js","webpack:///./node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle-styles.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-tree-toggle.js","webpack:///./components/views/character/dnd-character-builder-spells.js"],"names":["EntryRenderer","this","wrapperTag","baseUrl","setWrapperTag","tag","setBaseUrl","url","recursiveEntryRender","entry","textStack","depth","prefix","suffix","forcePrefixSuffix","type","renderPrefix","undefined","handleEntriesOptionsInvocationPatron","self","entries","sort","a","b","name","handleOptions","items","push","style","i","length","source","caption","colLabels","getTableThClassText","rows","j","makeTableTdClassText","colStyles","rowStyles","renderTable","handleInvocation","handlePatron","attributes","renderSuffix","value","getEntryDice","href","path","hash","subhashes","subHash","key","text","renderLink","renderString","incDepth","inlineTitle","nextDepth","styleString","styleClasses","HEAD_2","HEAD_NEG_1","HEAD_0","HEAD_1","subclass","join","getStyleString","dataString","titleString","sourceJsonToFull","DATA_NONE","getDataString","preReqText","prerequisite","headerSpan","tagSplit","char","char2","tagDepth","inTag","out","curStr","charAt","splitByTags","s","string","substr","indexOf","actionToExplanation","skillToExplanation","displayText","others","split","fauxEntry","classMatch","RE_INLINE_CLASS","exec","trim","substring","toAdd","number","faces","String","toRoll","roll","droll","rollable","renderer","renderSelection","spell","rootEl","querySelector","innerHTML","spellHtmlString","spellHtml","renderStack","sourceJsonToAbv","spLevelSchoolMetaToFull","level","school","meta","spTimeListToFull","time","spRangeToFull","range","spComponentsToFull","components","spDurationToFull","duration","entriesHigherLevel","higherLevelsEntryList","spMainClassesToFull","classes","fromSubclass","currentAndLegacy","spSubclassesToCurrentAndLegacyFull","scrollNote","$_documentContainer","document","head","appendChild","content","createElement","Number","observer","leaf","Boolean","reflectToAttribute","expanded","notify","super","ready","addEventListener","e","_onClick","preventDefault","toString","_debouncerUpdateLevel","debounce","updateStyles","customElements","define","is","spellsKnown","Object","preparedSpells","heightByRows","window","innerWidth","isEditMode","connectedCallback","characterChangeHandler","character","detail","updateFromCharacter","refresh","editModeHandler","disconnectedCallback","removeEventListener","multiclassSlotsDef","setTimeout","$","grid","dataProvider","params","callback","startIndex","page","pageSize","children","parentItem","spellDisplay","slice","bind","classRefs","classLevels","newSpellMods","overalLevel","reduce","total","className","profBonus","classRef","casterProgression","attributeModifier","spellcastingAbility","spellAttackBonus","dc","mod","spellMods","expandedItems","spellsKnownObj","updateSpellStats","spellsKnownOrPrepared","cantripsKnown","warlockSpellLevel","warlockSpellSlots","spellsKnowPreparedType","classTableGroups","forEach","classTableGroup","spellsColIndex","findIndex","label","toLowerCase","cantripsColIndex","warlockSpellLevelColIndex","warlockSpellLevelMatches","match","parseInt","warlockSpellSlotsColIndex","levelMultiplier","Math","floor","classSpellList","subclassLevel","subclassName","subclasses","shortName","subclassSpellList","divineAffinityChoice","filter","map","isSubclassSpell","Set","concat","divineSoulSpellList","spellTable","find","tableGroup","title","spellSlotEntries","spellSlots","hasCantrips","oldSpellsPrepared","JSON","parse","stringify","oldCantripsPrepared","preparedCantrips","index","spellList","isCantrip","isPrepared","id","hasChildren","parentClass","parentLevel","isWarlock","levelObj","currentSlots","some","item","slots","current","keys","max","maxCantrips","currentCantrips","classObj","spellPrepType","multiclassingLevels","newSpellDisplay","multiclassLevel","isMulticlass","spellClass","spellLevel","adjIndex","multiclassSlotsArray","currentWarlockSlots","dispatchEvent","CustomEvent","bubbles","composed","clearCache","stopPropagation","model","_toggleCantripPrepared","_isPreparedSpell","currentPreparedCount","_currentSpellsKnownCount","maxPreparedCount","_maxSpellsKnownCount","spellsKnownCopy","splice","_flashPreparedButton","_isPreparedCantrip","_currentCantripsKnownCount","_maxCantripsKnownCount","buttonEl","classList","add","remove","isInput","maxSlots","checked","_setSpellSlotsChecked","count","el","checkboxes","querySelectorAll","spellName","prepareType","data","Parser","spLevelToFull","spellParent","ritual","d","concentration"],"mappings":"0FAAA,yBA4BA,SAASA,IAERC,KAAKC,WAAa,MAClBD,KAAKE,QAAU,GAMfF,KAAKG,cAAgB,SAAUC,GAC9BJ,KAAKC,WAAaG,GAQnBJ,KAAKK,WAAa,SAASC,GAC1BN,KAAKE,QAAUI,GAehBN,KAAKO,qBAAuB,SAASC,EAAOC,EAAWC,EAAOC,EAAQC,EAAQC,GAO7E,GANAH,EAAQA,QAAuD,YAAfF,EAAMM,MAAsB,EAAI,EAAIJ,EACpFC,EAASA,QAA0C,KAAOA,EAC1DC,EAASA,QAA0C,KAAOA,GAC1DC,EAAoBA,SAAwEA,IAErEE,IACF,iBAAVP,EAAoB,CAG9B,YAD4BQ,IAAfR,EAAMM,MAAqC,YAAfN,EAAMM,KAAqB,UAAYN,EAAMM,MAKrF,IAAK,UA0ING,EAzIgBjB,MAyI2B,GAxIzC,MACD,IAAK,WA0IP,SAAuBkB,GAClBV,EAAMW,UACTX,EAAMW,QAAUX,EAAMW,QAAQC,KAAK,CAACC,EAAGC,IAAMD,EAAEE,MAAQD,EAAEC,KAAO,kBAAQF,EAAEE,KAAMD,EAAEC,MAAQF,EAAEE,MAAQ,EAAID,EAAEC,KAAO,EAAI,GACrHN,EAAqCC,GAAM,IA5I1CM,CAAcxB,MACd,MACD,IAAK,OACJ,GAAIQ,EAAMiB,MAAO,CAChBhB,EAAUiB,KAAK,OAAOlB,EAAMmB,MAAQ,UAAUnB,EAAMmB,SAAW,OAC/D,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAMiB,MAAMI,OAAQD,IACvC5B,KAAKO,qBAAqBC,EAAMiB,MAAMG,GAAInB,EAAWC,EAAQ,EAAG,OAAO,8BAAoBF,EAAMiB,MAAMG,GAAGE,QAAU,UAAU,OAA8B,MAAO,SAEpKrB,EAAUiB,KAAK,SAEhB,MACD,IAAK,SA0EP,SAAqBR,GAGpBT,EAAUiB,KAAK,8BAEOV,IAAlBR,EAAMuB,SACTtB,EAAUiB,KAAK,YAAYlB,EAAMuB,qBAKlC,GAHAtB,EAAUiB,KAAK,WACfjB,EAAUiB,KAAK,4CAEXlB,EAAMwB,UACT,IAAK,IAAIJ,EAAI,EAAGA,EAAIpB,EAAMwB,UAAUH,SAAUD,EAC7CnB,EAAUiB,KAAK,OAAOO,EAAoBL,MAAMpB,EAAMwB,UAAUJ,WAIlEnB,EAAUiB,KAAK,SACfjB,EAAUiB,KAAK,YACfjB,EAAUiB,KAAK,WAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIpB,EAAM0B,KAAKL,SAAUD,EAAG,CAC3CnB,EAAUiB,KAAK,0BACf,IAAK,IAAIS,EAAI,EAAGA,EAAI3B,EAAM0B,KAAKN,GAAGC,SAAUM,EAC3C1B,EAAUiB,KAAK,OAAOU,EAAqBD,OAC3CjB,EAAKX,qBAAqBC,EAAM0B,KAAKN,GAAGO,GAAI1B,EAAWC,EAAQ,GAC/DD,EAAUiB,KAAK,SAEhBjB,EAAUiB,KAAK,SAMhB,SAASO,EAAoBL,GAC5B,YAA2BZ,IAApBR,EAAM6B,WAA2BT,GAAKpB,EAAM6B,UAAUR,OAAS,qBAAwB,qBAAqBrB,EAAM6B,UAAUT,MAGpI,SAASQ,EAAqBR,GAC7B,YAAwBZ,IAApBR,EAAM8B,eACkBtB,IAApBR,EAAM8B,WAA2BV,GAAKpB,EAAM8B,UAAUT,OAAS,qBAAuB,qBAAqBrB,EAAM8B,UAAUV,MAE3HK,EAAoBL,GAX7BnB,EAAUiB,KAAK,YACfjB,EAAUiB,KAAK,YAzGba,CAAYvC,MACZ,MACD,IAAK,cAkIP,SAA0BkB,GACzBD,EAAqCC,GAAM,GAlIzCsB,CAAiBxC,MACjB,MACD,IAAK,UAmIP,SAAsBkB,GACrBD,EAAqCC,GAAM,GAnIzCuB,CAAazC,MACb,MAGD,IAAK,YACJe,IACAN,EAAUiB,KAAK,qCAAqClB,EAAMe,2DAA2D,8BAAoBf,EAAMkC,sBAC/IC,IACA,MACD,IAAK,mBACW,OAAXhC,GAAiBF,EAAUiB,KAAKf,GACpCF,EAAUiB,KAAK,qCAAqClB,EAAMe,+DAA+D,8BAAoBf,EAAMkC,sBACpI,OAAX9B,GAAiBH,EAAUiB,KAAKd,GACpC,MAGD,IAAK,SACJ,GAAIJ,EAAMW,QACT,IAAK,IAAIS,EAAI,EAAGA,EAAIpB,EAAMW,QAAQU,OAAQD,IACzC5B,KAAKO,qBAAqBC,EAAMW,QAAQS,GAAInB,EAAWC,GAGzD,MACD,IAAK,QACJD,EAAUiB,MAAMlB,EAAMoC,MAAQ,EAAI,GAAK,KAAOpC,EAAMoC,OACpD,MACD,IAAK,aACJnC,EAAUiB,MAAMlB,EAAMoC,MAAQ,EAAI,GAAK,KAAOpC,EAAMoC,MAAQ,OAC5D,MACD,IAAK,OACJnC,EAAUiB,KAAK3B,EAAc8C,aAAarC,IAC1C,MACD,IAAK,QAiJP,SAAoBU,EAAMV,GACzB,IAAIsC,EACJ,GAAwB,aAApBtC,EAAMsC,KAAKhC,MAGd,GADAgC,EAAO,GAAG5B,EAAKhB,UAAUM,EAAMsC,KAAKC,aACZ/B,IAApBR,EAAMsC,KAAKE,OACdF,GAAQtC,EAAMsC,KAAKE,UACUhC,IAAzBR,EAAMsC,KAAKG,WACd,IAAK,IAAIrB,EAAI,EAAGA,EAAIpB,EAAMsC,KAAKG,UAAUpB,OAAQD,IAAK,CACrD,MAAMsB,EAAU1C,EAAMsC,KAAKG,UAAUrB,GACrCkB,GAAQ,IAAI,wBAAcI,EAAQC,QAAQ,wBAAcD,EAAQN,cAIrC,aAApBpC,EAAMsC,KAAKhC,OACrBgC,EAAOtC,EAAMsC,KAAKxC,KAEnBG,EAAUiB,KAAK,YAAYoB,MAAStC,EAAM4C,YAjKxCC,CAAWrD,KAAMQ,GACjB,MACD,IAAK,OACJC,EAAUiB,KAAK,UAAUlB,EAAMe,cAC/BvB,KAAKO,qBAAqBC,EAAMA,MAAOC,EAAWC,GAClDD,EAAUiB,KAAK,SACf,MACD,IAAK,QACJjB,EAAUiB,KAAK4B,EAAa9C,EAAMA,aAGT,iBAAVA,GACjBO,IACAuC,EAAatD,MACb2C,MAGA5B,IACAN,EAAUiB,KAAKlB,GACfmC,KAID,SAAS5B,IACO,OAAXJ,GACHF,EAAUiB,KAAKf,GAGjB,SAASgC,IACO,OAAX/B,GACHH,EAAUiB,KAAKd,GAuEjB,SAASK,EAAqCC,EAAMqC,GACnD,MAAMC,EAAc9C,GAAS,EACvB+C,EAAYF,EAAW7C,EAAM,EAAIA,EACjCgD,EAeN,WACC,MAAMC,EAAe,GACjB,8BAAoBnD,EAAMsB,SAAS6B,EAAajC,KAAK,KACrD8B,QAA8BxC,IAAfR,EAAMe,KAAoBoC,EAAajC,KAAK3B,EAAc6D,QACxED,EAAajC,MAAgB,IAAXhB,EAAeX,EAAc8D,WAAuB,IAAVnD,EAAcX,EAAc+D,OAAS/D,EAAcgE,QAChG,eAAfvD,EAAMM,MAAwC,WAAfN,EAAMM,WAAyCE,IAAnBR,EAAMwD,UAAwBL,EAAajC,KAAK,KAChH,OAAOiC,EAAa9B,OAAS,EAAI,UAAU8B,EAAaM,KAAK,QAAU,GArBpDC,GACdC,EAuBN,WACC,IAAIA,EAAa,GACjB,GAAmB,eAAf3D,EAAMM,MAAwC,WAAfN,EAAMM,KAAmB,CAC3D,MAAMsD,EAAc5D,EAAMsB,OAAS,kBAAkB,IAAOuC,iBAAiB7D,EAAMsB,WAAa,GAC9DqC,OAAXnD,IAAnBR,EAAMwD,SAAqC,GAAG,QAAgBxD,EAAMwD,SAASzC,SAAS,QAAiBf,EAAMwD,SAASlC,WAAWsC,IACnH,GAAG,QAAgBrE,EAAcuE,cAAc,QAAiBvE,EAAcuE,cAAcF,IAE/G,OAAOD,EA9BWI,GACbC,EAiCDhE,EAAMiE,aAAqB,4CAA4CjE,EAAMiE,sBAC1E,GAjCFC,OAA4B1D,IAAfR,EAAMe,KAAqB,2BAA2Bf,EAAMe,OAAO,8BAAoBf,EAAMsB,QAAU,QAAU,KAAK0B,EAAc,IAAM,aAAe,GAE5K,GAAIhD,EAAMW,SAAWX,EAAMe,KAAM,CAEhC,GADAd,EAAUiB,KAAK,IAAIR,EAAKjB,cAAckE,KAAcT,KAAegB,IAAaF,KAC5EhE,EAAMW,QACT,IAAK,IAAIS,EAAI,EAAGA,EAAIpB,EAAMW,QAAQU,OAAQD,IACzCV,EAAKX,qBAAqBC,EAAMW,QAAQS,GAAInB,EAAWgD,EAAW,MAAO,QAG3EhD,EAAUiB,KAAK,KAAKR,EAAKjB,gBAgD3B,SAASqD,EAAapC,GACrB,MAAMyD,EA2GN,WACC,IAEIC,EAAMC,EAFNC,EAAW,EACXC,GAAQ,EAEZ,MAAMC,EAAM,GACZ,IAAIC,EAAS,GACb,IAAK,IAAIrD,EAAI,EAAGA,EAAIpB,EAAMqB,SAAUD,EAInC,OAHAgD,EAAOpE,EAAM0E,OAAOtD,GACpBiD,EAAQjD,EAAIpB,EAAMqB,OAAO,EAAIrB,EAAM0E,OAAOtD,EAAE,GAAK,KAEzCgD,GACP,IAAK,IACU,MAAVC,EACCC,IAAa,EAChBG,GAAUL,GAEVI,EAAItD,KAAKuD,GACTF,GAAQ,EACRE,EAAS,IAGVA,GAAUL,EAEX,MACD,IAAK,IACe,KAAbE,GACLE,EAAItD,KAAKuD,GACTA,EAAS,IAETA,GAAUL,EAEX,MACD,QACCK,GAAUL,EAGTK,EAAOpD,OAAS,GAAGmD,EAAItD,KAAKuD,GAEhC,OAAOD,EAjJSG,GACjB,IAAK,IAAIvD,EAAI,EAAGA,EAAI+C,EAAS9C,OAAQD,IAAK,CACzC,MAAMwD,EAAIT,EAAS/C,GACnB,GAAIwD,SAAuC,KAANA,EACrC,GAAoB,MAAhBA,EAAEF,OAAO,GAAY,CACxB,MAAO9E,EAAKgD,GAgGN,EADiBiC,EA/FaD,GAiG7BE,OAAO,EAAGD,EAAOE,QAAQ,MAChCF,EAAOC,OAAOD,EAAOE,QAAQ,KAAO,IAhGpC,GAAY,UAARnF,GAA2B,OAARA,GAAwB,YAARA,GAA6B,OAARA,GAAwB,WAARA,GAA4B,YAARA,EAC/F,OAAQA,GACP,IAAK,KACL,IAAK,QACJK,EAAUiB,KAAK,OACfR,EAAKX,qBAAqB6C,EAAM3C,EAAWC,GAC3CD,EAAUiB,KAAK,QACf,MACD,IAAK,KACL,IAAK,UACJjB,EAAUiB,KAAK,OACfR,EAAKX,qBAAqB6C,EAAM3C,EAAWC,GAC3CD,EAAUiB,KAAK,QACf,MACD,IAAK,UACJjB,EAAUiB,KAAK,gBAAgB,IAAO8D,oBAAoBpC,2BAA8BA,YACxF,MACD,IAAK,SACJ3C,EAAUiB,KAAK,gBAAgB,IAAO+D,mBAAmBrC,2BAA8BA,gBAGnF,CACN,MAAO7B,EAAMO,EAAQ4D,KAAgBC,GAAUvC,EAAKwC,MAAM,KACpD5C,EAAO,GAAGzB,IAAOO,EAAS,GAAG,MAAgBA,IAAW,KAExD+D,EAAY,CACjB,KAAQ,OACR,KAAQ,CACP,KAAQ,WACR,KAAQ,GACR,KAAQ,wBAAc7C,IAEvB,KAAS0C,GAA4BnE,GAEtC,OAAQnB,GACP,IAAK,SACC0B,IAAQ+D,EAAU/C,KAAKE,MAAQ,IAAgB,MACpD6C,EAAU/C,KAAKE,KAAO,WAAa6C,EAAU/C,KAAKE,KAClD9B,EAAKX,qBAAqBsF,EAAWpF,EAAWC,GAChD,MACD,IAAK,QACCoB,IAAQ+D,EAAU/C,KAAKE,MAAQ,IAAgB,KACpD6C,EAAU/C,KAAKE,KAAO,UAAY6C,EAAU/C,KAAKE,KACjD9B,EAAKX,qBAAqBsF,EAAWpF,EAAWC,GAChD,MACD,IAAK,aACCoB,IAAQ+D,EAAU/C,KAAKE,MAAQ,IAAgB,MACpD6C,EAAU/C,KAAKE,KAAO,eAAiB6C,EAAU/C,KAAKE,KACtD9B,EAAKX,qBAAqBsF,EAAWpF,EAAWC,GAChD,MACD,IAAK,SACJ,MAAMoF,EAAa/F,EAAcgG,gBAAgBC,KAAK5C,GAClD0C,IACHD,EAAU/C,KAAKE,KAAO8C,EAAW,GAAGG,OACpCJ,EAAU/C,KAAKG,UAAY,CAAC,CAAC,IAAO,MAAO,MAAS6C,EAAW,GAAGG,OAAS,UAEvEnE,IAAQ+D,EAAU/C,KAAKE,MAAQ,IAAgB,MACpD6C,EAAU/C,KAAKE,KAAO,YAAc6C,EAAU/C,KAAKE,KACnD9B,EAAKX,qBAAqBsF,EAAWpF,EAAWC,GAChD,MACD,IAAK,YACCoB,IAAQ+D,EAAU/C,KAAKE,MAAQ,IAAgB,MACpD6C,EAAU/C,KAAKE,KAAO,aAAe6C,EAAU/C,KAAKE,KACpD9B,EAAKX,qBAAqBsF,EAAWpF,EAAWC,GAChD,MACD,IAAK,UAEJD,EAAUiB,KAAKH,GACf,MACD,IAAK,UACL,IAAK,QAIL,IAAK,QAEJd,EAAUiB,KAAKH,GACf,MACD,IAAK,WACAO,EAAOyD,QAAQ,MAAQ,EAC1BM,EAAU/C,KAAKE,KAAO,IAAMlB,EAAOoE,UAAU,EAAGpE,EAAOyD,QAAQ,MAE/DM,EAAU/C,KAAKE,KAAO,IAAMlB,EAE7BZ,EAAKX,qBAAqBsF,EAAWpF,EAAWC,UAKnDD,EAAUiB,KAAK0D,GAIjB,IAAyBC,EApPtBxE,GAAmB8B,KAuSzB5C,EAAc8C,aAAe,SAAUrC,GAEtC,IAAI2F,EACJ,GAAI3F,EAAM4F,QAAU5F,EAAM6F,MACzBF,EAAQG,OAAO9F,EAAM4F,QAAU,IAAM5F,EAAM6F,WACrC,GAAI7F,EAAM+F,QAAU/F,EAAM+F,OAAO1E,OAAQ,CAC/C,IAAK,IAAI2E,KAAQhG,EAAM+F,OACtBJ,EAAQG,OAAOE,EAAKJ,QAAU,IAAMI,EAAKH,MAAQ,MAElDF,EAAQA,EAAMD,UAAU,EAAGC,EAAMtE,OAAS,GAE3C,MAAqB,oBAAV4E,QAA4C,IAAnBjG,EAAMkG,SAKlC,wIAAwIP,+EAAmFA,iBAAqBA,WAEhPA,GAITpG,EAAcgG,gBAAkB,kBAChChG,EAAc8D,WAAa,wBAC3B9D,EAAc+D,OAAS,iBACvB/D,EAAcgE,OAAS,oBACvBhE,EAAc6D,OAAS,kBACvB7D,EAAcuE,UAAY,YAEX,O,iCC5df,qHAGA,MAAMqC,EAAW,IAAI,IAKrB,SAASC,EAAgBC,EAAOC,GAC/BA,EAAOC,cAAc,sBAAsBC,UALtB,gEAOrB,MAAMC,EAAkBC,EAAUL,GAElCC,EAAOC,cAAc,kBAAkBC,UAAYC,EAGpD,SAASC,EAAUL,GAClB,MAAMM,EAAc,GAWpB,GAVAA,EAAYzF,KAAK,kEAAkEmF,EAAM/E,kBAAkB,IAAOuC,iBAAiBwC,EAAM/E,YAAY,IAAOsF,gBAAgBP,EAAM/E,iBAClLqF,EAAYzF,KAAK,wCAAwC,IAAO2F,wBAAwBR,EAAMS,MAAOT,EAAMU,OAAQV,EAAMW,sBACzHL,EAAYzF,KAAK,+EAA+E,IAAO+F,iBAAiBZ,EAAMa,eAC9HP,EAAYzF,KAAK,wEAAwE,IAAOiG,cAAcd,EAAMe,gBACpHT,EAAYzF,KAAK,6EAA6E,IAAOmG,mBAAmBhB,EAAMiB,qBAC9HX,EAAYzF,KAAK,2EAA2E,IAAOqG,iBAAiBlB,EAAMmB,mBAC1Hb,EAAYzF,KAAK,sBAEjBiF,EAASpG,qBAAqB,CAACO,KAAM,UAAWK,QAAS0F,EAAM1F,SAAUgG,EAAa,GAElFN,EAAMoB,mBAAoB,CAC7B,MAAMC,EAAwB,CAACpH,KAAM,UAAWK,QAAS0F,EAAMoB,oBAC/DtB,EAASpG,qBAAqB2H,EAAuBf,EAAa,GAMnE,GAHAA,EAAYzF,KAAK,UACjByF,EAAYzF,KAAK,0EAA0E,IAAOyG,oBAAoBtB,EAAMuB,kBAExHvB,EAAMuB,QAAQC,aAAc,CAC/B,MAAMC,EAAmB,IAAOC,mCAAmC1B,EAAMuB,SACzEjB,EAAYzF,KAAK,6EAA6E4G,EAAiB,YAC3GA,EAAiB,IACpBnB,EAAYzF,KAAK,6HAA6H4G,EAAiB,YAYjK,OARIzB,EAAM2B,aACTrB,EAAYzF,KAAK,wDACjBiF,EAASpG,qBACR,6OACE4G,EAAa,GAChBA,EAAYzF,KAAK,WAGXyF,EAAYlD,KAAK,M,gFChDzB,MAAMwE,EAAsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAmGhCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;AC1F9C,MAAM,EAAsBH,SAASI,cAAc,YAEnD,EAAoB9B,UAAY,mpDAWhC0B,SAASC,KAAKC,YAAY,EAAoBC,SA6C9C,MAAM,UAA8B,YAAc,YAAS,OACzD,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8Db,gBACE,MAAO,0BAGT,wBACE,MAAO,CAKLvB,MAAO,CACLxG,KAAMiI,OACNnG,MAAO,EACPoG,SAAU,iBAMZC,KAAM,CACJnI,KAAMoI,QACNtG,OAAO,EACPuG,oBAAoB,GAMtBC,SAAU,CACRtI,KAAMoI,QACNtG,OAAO,EACPuG,oBAAoB,EACpBE,QAAQ,IAKd,QACEC,MAAMC,QAENvJ,KAAKwJ,iBAAiB,QAASC,GAAKzJ,KAAK0J,SAASD,IAGpD,SAASA,GACHzJ,KAAKiJ,OAITQ,EAAEE,iBACF3J,KAAKoJ,UAAYpJ,KAAKoJ,UAGxB,cAAc9B,GACZ,MAAM1E,EAAQmG,OAAOzB,GAAOsC,WAC5B5J,KAAK2B,MAAM,YAAciB,EAGzB5C,KAAK6J,sBAAwB,IAAUC,SACrC9J,KAAK6J,sBACL,IACA,IAAM7J,KAAK+J,aAAa,CAAC,WAAYnH,MAK3CoH,eAAeC,OAAO,EAAsBC,GAAI,G,kECxLhD,MAAM,UAAkC,IAEtC,wBACE,MAAO,CACLC,YAAa,CACXrJ,KAAMsJ,OACNxH,MAAO,IAETyH,eAAgB,CACdvJ,KAAMsJ,OACNxH,MAAO,IAET0H,aAAc,CACZxJ,KAAMoI,QACNtG,MAAO,IACE2H,OAAOC,WAAa,KAG/BC,WAAY,CACV3J,KAAMoI,QACNtG,OAAO,IAKb,oBACE0G,MAAMoB,oBAEN1K,KAAK2K,uBAA0BlB,IAC7B,IAAImB,EAAYnB,EAAEoB,OAAOD,UACzB5K,KAAK8K,oBAAoBF,IAE3B5K,KAAK+K,SAAU,EACf/K,KAAK8K,oBAAoB,eACzB,cAAsBtB,iBAAiB,qBAAqBxJ,KAAK2K,wBAEjE3K,KAAKgL,gBAAmBvB,IACtBzJ,KAAKyK,WAAahB,EAAEoB,OAAOJ,WAC3BzK,KAAK+K,SAAU,EACf/K,KAAK8K,oBAAoB,gBAE3B,cAAqBtB,iBAAiB,iBAAkBxJ,KAAKgL,iBAC7DhL,KAAKyK,WAAa,cAGpB,uBACEnB,MAAM2B,uBAEN,cAAsBC,oBAAoB,qBAAqBlL,KAAK2K,wBACpE,cAAqBO,oBAAoB,iBAAkBlL,KAAKgL,iBAGlE,QACE1B,MAAMC,QAENvJ,KAAKmL,mBAAqB,CACxB,CAAC,GACD,CAAC,GACD,CAAC,EAAE,GACH,CAAC,EAAE,GACH,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACX,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACb,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACb,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAGnBC,WAAW,KACIpL,KAAKqL,EAAEC,KAEfC,cAAe,CAAEC,EAAQC,KAC5B,MAAMC,EAAaF,EAAOG,KAAOH,EAAOI,SAClCC,EAAWL,EAAOM,WAAaN,EAAOM,WAAWD,SAAW7L,KAAK+L,aACvE,GAAIF,GAAYA,EAAShK,OAAQ,CAE/B4J,EADaI,EAASG,MAAMN,EAAYA,EAAaF,EAAOI,UAC7CC,EAAShK,WAEzBoK,KAAKjM,OACP,GAGL,uBAAuBkM,EAAWC,GAChC,GAAIA,GAAeD,EAAW,CAE5B,MAAME,EAAe,GACfC,EAAcjC,OAAOjJ,QAAQgL,GAAaG,OAAO,CAACC,GAAQC,EAAWlF,KAAWiF,EAAQjF,EAAO,GAC/FmF,EAAY,uBAAaJ,GAE/B,IAAK,MAAOG,EAAWlF,KAAU8C,OAAOjJ,QAAQgL,GAAc,CAC5D,MAAMO,EAAWR,EAAUM,GAC3B,GAAIE,EAASC,kBAAmB,CAC9B,MAAMC,QAA0B,YAAqBF,EAASG,qBACxDC,EAAmBF,EAAoBH,EACvCM,EAAK,EAAID,EACfV,EAAa1K,KAAK,CAAE8K,YAAWQ,IAAKJ,EAAmBE,mBAAkBC,QAI7E/M,KAAKiN,UAAYb,OAEjBpM,KAAKiN,UAAY,GAIrB,0BAA0BrC,GACxB,GAAIA,GAAa5K,KAAK+K,QAAS,CAC7B,MAAMmB,QAAkB,YAAmBtB,GACzCuB,EAAc,YAAoBvB,GAClCsC,EAAgB,GAChBC,EAAiB,GACnB,IAAIpB,EAAe,GAEnB/L,KAAKoN,iBAAiBlB,EAAWC,GAEjC,IAAK,MAAQK,EAAWlF,KAAW8C,OAAOjJ,QAAQgL,GAAc,CAC9D,MAAMO,EAAWR,EAAUM,GAE3B,GAAIE,EAASC,kBAAmB,CAC9B,IAAIU,EAEAC,EACAC,EACAC,EAHAC,EAAyB,QAgC7B,GA1BAf,EAASgB,iBAAiBC,QAASC,IACjC,GAAIA,EAAgB5L,WAAa4L,EAAgB5L,UAAUH,OAAQ,CACjE,MAAMgM,EAAiBD,EAAgB5L,UAAU8L,UAAWC,GAAUA,EAAMC,cAAczI,QAAQ,iBAAmB,GACjHsI,GAAkB,GAAKD,EAAgB1L,MAAQ0L,EAAgB1L,KAAKL,OAASyF,EAAQ,IACvF+F,EAAwBO,EAAgB1L,KAAKoF,EAAQ,GAAGuG,IAE1D,MAAMI,EAAmBL,EAAgB5L,UAAU8L,UAAWC,GAAUA,EAAMC,cAAczI,QAAQ,mBAAqB,GACrH0I,GAAoB,GAAKL,EAAgB1L,MAAQ0L,EAAgB1L,KAAKL,OAASyF,EAAQ,IACzFgG,EAAgBM,EAAgB1L,KAAKoF,EAAQ,GAAG2G,IAElD,MAAMC,EAA4BN,EAAgB5L,UAAU8L,UAAWC,GAAUA,EAAMC,cAAczI,QAAQ,eAAiB,GAC9H,GAAI2I,GAA6B,GAAKN,EAAgB1L,MAAQ0L,EAAgB1L,KAAKL,OAASyF,EAAQ,EAAG,CACrG,MACM6G,EAD0BP,EAAgB1L,KAAKoF,EAAQ,GAAG4G,GACPE,MAAM,UAC3DD,GAA4BA,EAAyBtM,SACvD0L,EAAoBc,SAASF,EAAyB,KAG1D,MAAMG,EAA4BV,EAAgB5L,UAAU8L,UAAWC,GAAUA,EAAMC,cAAczI,QAAQ,gBAAkB,GAC3H+I,GAA6B,GAAKV,EAAgB1L,MAAQ0L,EAAgB1L,KAAKL,OAASyF,EAAQ,IAClGkG,EAAoBI,EAAgB1L,KAAKoF,EAAQ,GAAGgH,YAM5BtN,IAA1BqM,EAAqC,CACvCI,EAAyB,WACzB,MAAMc,EAAiD,SAA/B7B,EAASC,kBAA+B,EAAI,GAC9DC,QAA0B,YAAqBF,EAASG,qBAC9DQ,EAAwBmB,KAAKC,MAAMnH,EAAQiH,GAAmB3B,EAC9DS,EAAwBA,EAAwB,EAAI,EAAIA,EAK1D,IAAIqB,QAAuB,YAAY,SAAU,CAAEvL,IAAK,wBAAyBP,MAAO,CAAErB,KAAMiL,EAAW1K,OAAQ4K,EAAS5K,UAG5H,MAAM6M,EAAgB,YAAuBjC,GAC7C,GAAIpF,GAASqH,EAAe,CAC1B,MAAMC,EAAehE,EAAUiE,YAAcjE,EAAUiE,WAAWrC,GAAa5B,EAAUiE,WAAWrC,GAAWsC,UAAY,GAC3H,GAAIF,EAAc,CAChB,IAAIG,QAA0B,YAAY,SAAU,CAAE5L,IAAK,uBAAwBP,MAAO,CAAE,gBAAiBgM,EAAc,aAAcpC,EAAW,eAAgBE,EAAS5K,UAC7K,GAAqB,gBAAjB8M,EAAgC,CAClC,IAAII,EAAuB,YAAkBxC,EAAUwB,cAAeY,EAAaZ,cAAe1G,EAAO,wBAAyBsD,GAEhImE,EADEC,EACkBD,EAAkBE,OAAOpI,GAASmI,EAAqBzJ,QAAQsB,EAAMtF,OAAS,GAE9E,GAGxBwN,EAAoBA,EAAkBG,IAAIrI,IAAS,IAAMA,EAAOsI,iBAAiB,KACjFT,EAAiB,IAAI,IAAIU,IAAIV,EAAeW,OAAON,KAErD,GAAqB,gBAAjBH,EAAgC,CAClC,IAAIU,QAA4B,YAAY,SAAU,CAAEnM,IAAK,wBAAyBP,MAAO,CAAErB,KAAM,SAAUO,OAAQ,SACvH4M,EAAiB,IAAI,IAAIU,IAAIV,EAAeW,OAAOC,MAKvD,MAAMC,EAAa7C,EAASgB,iBAAiB8B,KAAMC,GAAoC,gCAArBA,EAAWC,OAC7E,IAAIC,EACJ,GAAIJ,EACFI,EAAmBJ,EAAWrN,KAAKoF,EAAQ,GAAG2H,OAAQW,GAA8B,IAAfA,OAChE,CAGLD,EAAmB,GACnB,IAAK,IAAI/N,EAAI,EAAGA,EAAI2L,EAAmB3L,IACrC+N,EAAiBjO,KAAK,GAK1B,MAAMmO,EAAcvC,EAAgB,EAAI,EACpCA,IACFqC,EAAmB,CAAC,GAAGN,OAAOM,IAIhC,IAAIG,EAAoBC,KAAKC,MAAMD,KAAKE,UAAUrF,EAAUP,iBACxD6F,EAAsBH,KAAKC,MAAMD,KAAKE,UAAUrF,EAAUuF,mBAC9DvF,EAAUP,eAAemC,GAAa,GACtC5B,EAAUuF,iBAAiB3D,GAAa,GAGxC,MAAMoD,EAAaD,EAAiBT,IAAI,CAACU,EAAYQ,KACnD,IAAoB,IAAhBR,EAAmB,CACrB,IAAIS,EAAY3B,EACbO,OAAQpI,GACAA,EAAMS,QAAU8I,EAAQP,GAEhCzO,KAAK,CAACC,EAAGC,IACJD,EAAEE,KAAOD,EAAEC,MAAgB,EAC3BF,EAAEE,KAAOD,EAAEC,KAAe,EACvB,GAER2N,IAAIrI,IACH,MAAMyJ,EAAYF,EAAQP,IAAgB,EACpCU,EAAaD,EAAY,YAAuB9D,EAAW3F,EAAOqJ,GAAuB,YAAuB1D,EAAW3F,EAAOiJ,GAQxI,OAPIS,IACED,EACF1F,EAAUuF,iBAAiB3D,GAAW3F,EAAMtF,MAAQ,CAACA,KAAMsF,EAAMtF,KAAMO,OAAQ+E,EAAM/E,QAErF8I,EAAUP,eAAemC,GAAW3F,EAAMtF,MAAQ,CAACA,KAAMsF,EAAMtF,KAAMO,OAAQ+E,EAAM/E,SAGnF9B,KAAKyK,YAAc8F,GAAc1J,EAAMsI,gBAClC,CACLqB,GAAI,QACJjP,KAAMsF,EAAMtF,KACZsK,SAAU,CAAC,IAAIhF,EAAO4J,aAAa,EAAOD,GAAI,WAAYE,YAAalE,EAAWmE,YAAaP,EAAQP,IACvGY,aAAa,EACbC,YAAalE,EACbmE,YAAaP,EAAQP,EACrBS,YACAnB,gBAAiBtI,EAAMsI,gBACvByB,YAAarD,QAGf,IAGH0B,OAAQpI,QAAoB7F,IAAV6F,GACrB,MAAMgK,EAAW,CACfL,GAAI,QACJlJ,MAAO8I,EAAQP,EACfD,aACAkB,aAAc,YAAcV,EAAQP,GACpChE,SAAUwE,EACVI,YAAaJ,EAAUxO,OAAS,EAChC6O,YAAalE,EACboE,YAAarD,GAMf,OAJmBvN,KAAKqL,EAAEC,KAAK4B,cAAc6D,KAAKC,GAAoB,UAAZA,EAAKR,IAAkBQ,EAAK1J,QAAUuJ,EAASvJ,OAAS0J,EAAKN,cAAgBG,EAASH,cAE9IxD,EAAcxL,KAAKmP,GAEdA,EAEP,OAAO,OAER5B,OAAOgC,GAAmB,OAAVA,GAUnB,GARA9D,EAAeX,GAAa,CAC1B0E,QAAStG,EAAUP,gBAAkBO,EAAUP,eAAemC,GAAapC,OAAO+G,KAAKvG,EAAUP,eAAemC,IAAc,GAC9H4E,IAAK/D,EACLvM,KAAM2M,EACN4D,YAAa/D,EACbgE,gBAAiB1G,EAAUuF,kBAAoBvF,EAAUuF,iBAAiB3D,GAAapC,OAAO+G,KAAKvG,EAAUuF,iBAAiB3D,IAAc,IAG1IoD,EAAW/N,OAAQ,CACrB,MAAM0P,EAAW,CACff,GAAI,QACJhE,YACAlF,QACAuI,cACAhE,SAAU+D,EACVzF,YAAakD,EACboD,YAAab,EAAW/N,OAAS,EACjC2P,cAAe/D,EACfgE,oBAAqBjD,KAAKC,OAAsC,SAA/B/B,EAASC,kBAA+B,EAAI,IAAOrF,GACpFsJ,YAAarD,EACbA,oBACAC,qBAEFN,EAAcxL,KAAK6P,GACnBxF,EAAarK,KAAK6P,KASxB,GAHAxF,EAAa3K,KAAK,CAACC,EAAGC,IAAMD,EAAEwK,SAAShK,OAASP,EAAEuK,SAAShK,SAGtD7B,KAAKyK,WAAY,CACpB,IAAIiH,EAAkB,GACtB,GAAI3F,EAAalK,OAAQ,CACvB,IAEE0L,EACAC,EAHEmE,EAAkB,EACpBC,GAAgB,EAKlB,IAAK,IAAIC,KAAc9F,EAChB8F,EAAWjB,WAIdrD,EAAoBsE,EAAWtE,kBAC/BC,EAAoBqE,EAAWrE,oBAJ/BmE,GAAmBE,EAAWJ,oBAC9BG,KAMFC,EAAWhG,SAAS8B,QAAQ,CAACmE,EAAY1B,KACvC,MAAM2B,EAAW3B,EAAQyB,EAAWhC,YAC/B6B,EAAgBK,GAEVD,EAAWjG,SAASuE,KAC7BsB,EAAgBK,GAAUlG,SAAW6F,EAAgBK,GAAUlG,SAASwD,OAAOyC,EAAWjG,WAF1F6F,EAAgBK,GAAYD,IAQlCJ,EAAkBA,EAAgBzC,OAAOrN,QAAWZ,IAANY,GAG9C,MAAMiO,EAA2C,IAA7B6B,EAAgB,GAAGpK,MACvC,GAAIsK,EAAe,EAAG,CACpB,MAAMI,EAAuBhS,KAAKmL,mBAAmBwG,GAErD,IAAK,IAAI/P,EAAKiO,EAAc,EAAI,EAAIjO,EAAI8P,EAAgB7P,OAAQD,IAC9D8P,EAAgB9P,GAAGgO,WAAaoC,EAAqBpQ,GAAKiO,EAAc,EAAI,IAK5EtC,IACFmE,EAAgBnE,GAAqBsC,EAAc,EAAI,IAAIrC,kBAAoBA,EAC/EkE,EAAgBnE,GAAqBsC,EAAc,EAAI,IAAIoC,oBAAsBrH,EAAU4C,mBAAqB,GAGpHzB,EAAe2F,EAGjB1R,KAAK+K,SAAU,EACf,YAAcH,GACd5K,KAAKmK,YAAcgD,EACnBnN,KAAK+L,aAAeA,EACpB/L,KAAKkN,cAAgBA,EACrBlN,KAAKkS,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMC,UAAU,KAC/ErS,KAAKqL,EAAEC,KAAKgH,cAIhB,aAAazL,GACX,OAAO,oBAAUA,GAGnB,qBAAqB4C,GACnBA,EAAEE,iBACFF,EAAE8I,kBAEF,IADwB9I,EAAE+I,MAAMxB,KAAK7B,iBACbnP,KAAKyK,WAAY,CAEvC,GADkBhB,EAAE+I,MAAMxB,KAAKV,UAE7BtQ,KAAKyS,uBAAuBhJ,OACvB,CACL,MAAM+C,EAAY/C,EAAE+I,MAAMxB,KAAKN,YACzB7J,EAAQ4C,EAAE+I,MAAMxB,KAAKnF,SAAS,GAC9B0E,EAAavQ,KAAK0S,iBAAiB1S,KAAKmK,YAAaqC,EAAW3F,EAAMtF,MACtEoR,EAAuB3S,KAAK4S,yBAAyBpG,EAAWxM,KAAKmK,aACrE0I,EAAmB7S,KAAK8S,qBAAqBtG,EAAWxM,KAAKmK,aAEnE,IAAKoG,GAAcoC,EAAuBE,IAAkC,aAAbhM,EAAM2J,GAAmB,CACtF,IAAIuC,EAAkBhD,KAAKC,MAAMD,KAAKE,UAAUjQ,KAAKmK,cACrD,GAAIoG,EAAY,CACd,MAAMH,EAAQ2C,EAAgBvG,GAAW0E,QAAQ3L,QAAQsB,EAAMtF,MAC/DwR,EAAgBvG,GAAW0E,QAAQ8B,OAAO5C,EAAO,QAEjD2C,EAAgBvG,GAAW0E,QAAQxP,KAAKmF,EAAMtF,MAEhDvB,KAAKmK,YAAc4I,EACnB,YAAoBvG,EAAW3F,QACtB8L,GAAwBE,GACjC7S,KAAKiT,qBAAqB,qBAAW,SAAUxJ,MAMvD,uBAAuBA,GACrBA,EAAEE,iBACFF,EAAE8I,kBACF,MAAM/F,EAAY/C,EAAE+I,MAAMxB,KAAKN,YACzB7J,EAAQ4C,EAAE+I,MAAMxB,KAAKnF,SAAS,GAC9B0E,EAAavQ,KAAKkT,mBAAmBlT,KAAKmK,YAAaqC,EAAW3F,EAAMtF,MACxEoR,EAAuB3S,KAAKmT,2BAA2B3G,EAAWxM,KAAKmK,aACvE0I,EAAmB7S,KAAKoT,uBAAuB5G,EAAWxM,KAAKmK,aAErE,IAAKoG,GAAcoC,EAAuBE,IAAkC,aAAbhM,EAAM2J,GAAmB,CACtF,IAAIuC,EAAkBhD,KAAKC,MAAMD,KAAKE,UAAUjQ,KAAKmK,cACrD,GAAIoG,EAAY,CACd,MAAMH,EAAQ2C,EAAgBvG,GAAW8E,gBAAgB/L,QAAQsB,EAAMtF,MACvEwR,EAAgBvG,GAAW8E,gBAAgB0B,OAAO5C,EAAO,QAEzD2C,EAAgBvG,GAAW8E,gBAAgB5P,KAAKmF,EAAMtF,MAExDvB,KAAKmK,YAAc4I,EACnB,YAAsBvG,EAAW3F,QACxB8L,GAAwBE,GACjC7S,KAAKiT,qBAAqB,qBAAW,SAAUxJ,IAInD,qBAAqB4J,GACfA,IACFA,EAASC,UAAUC,IAAI,iBACvBF,EAASC,UAAUC,IAAI,eACvBnI,WAAW,KACTiI,EAASC,UAAUE,OAAO,eAC1BpI,WAAW,KACTiI,EAASC,UAAUE,OAAO,kBACzB,MACF,MAIP,iBAAiB/J,GACfA,EAAEE,iBACFF,EAAE8I,kBACF,MAAMkB,EAAU,qBAAW,iBAAkBhK,GACvCmH,IAAc,qBAAW,kBAAmBnH,GAC5CqH,EAAeF,EAAYnH,EAAE+I,MAAMxB,KAAKiB,oBAAsBxI,EAAE+I,MAAMxB,KAAKF,aAC3E4C,EAAW9C,EAAYnH,EAAE+I,MAAMxB,KAAKxD,kBAAoB/D,EAAE+I,MAAMxB,KAAKpB,WACrEtI,EAAQmC,EAAE+I,MAAMxB,KAAK1J,MAE3B,GAAImM,EAAS,EACOA,EAAQ5H,SAAS,GAAG8H,SACpB7C,EAAe4C,EAC3B9C,EACFnH,EAAE+I,MAAMxB,KAAKiB,oBAAsBnB,EAAe,EAElDrH,EAAE+I,MAAMxB,KAAKF,aAAeA,EAAe,EAGpCA,EAAe,IACpBF,EACFnH,EAAE+I,MAAMxB,KAAKiB,oBAAsBnB,EAAe,EAElDrH,EAAE+I,MAAMxB,KAAKF,aAAeA,EAAe,QAI3CA,EAAe4C,EACb9C,EACFnH,EAAE+I,MAAMxB,KAAKiB,oBAAsBnB,EAAe,EAElDrH,EAAE+I,MAAMxB,KAAKF,aAAeA,EAAe,EAGpCA,EAAe,IACpBF,EACFnH,EAAE+I,MAAMxB,KAAKiB,oBAAsBnB,EAAe,EAElDrH,EAAE+I,MAAMxB,KAAKF,aAAeA,EAAe,GAK7CF,GACF5Q,KAAK4T,sBAAsBnK,EAAE+I,MAAMxB,KAAKiB,oBAAqB,qBAAW,mBAAoBxI,IAC5F,YAAcnC,EAAOmC,EAAE+I,MAAMxB,KAAKiB,yBAAqBjR,GAAW,KAElEhB,KAAK4T,sBAAsBnK,EAAE+I,MAAMxB,KAAKF,aAAc,qBAAW,mBAAoBrH,IACrF,YAAcnC,EAAOmC,EAAE+I,MAAMxB,KAAKF,eAItC,sBAAsB+C,EAAOC,GAC3B,MAAMC,EAAaD,EAAGE,iBAAiB,mBACvC,IAAK,IAAIpS,EAAI,EAAGA,EAAImS,EAAWlS,OAAQD,IAEnCmS,EAAWnS,GAAG+R,QADZ/R,EAAIiS,EAQZ,iBAAiB1J,EAAa6G,EAAMvG,GAClC,MAAM+B,EAAYwE,EAAKN,YACjBuD,EAAYjD,EAAKzP,KACjB+O,EAAYU,EAAKV,UACjBnB,EAAkB6B,EAAK7B,gBAC7B,GAAIA,EACF,OAAO1E,EAAa,yCAA2C,+BAGjE,OADiB6F,EAAYtQ,KAAKkT,mBAAmB/I,EAAaqC,EAAWyH,GAAajU,KAAK0S,iBAAiBvI,EAAaqC,EAAWyH,EAAW9E,IAE1I1E,EAAa,wCAA0C,8BAEzDA,EAAa,yBAA2B,eAGjD,iBAAiBN,EAAaqC,EAAWyH,EAAW9E,GAClD,OAAOA,GAAmBhF,EAAYqC,IAAcrC,EAAYqC,GAAW0E,SAAW/G,EAAYqC,GAAW0E,QAAQrP,QAAUsI,EAAYqC,GAAW0E,QAAQ3L,QAAQ0O,IAAc,EAGtL,mBAAmB9J,EAAaqC,EAAWyH,GACzC,OAAO9J,EAAYqC,IAAcrC,EAAYqC,GAAW8E,iBAAmBnH,EAAYqC,GAAW8E,gBAAgBzP,QAAUsI,EAAYqC,GAAW8E,gBAAgB/L,QAAQ0O,IAAc,EAG3L,gBAAgB9J,EAAa6G,GAC3B,MAAMxE,EAAYwE,EAAKN,YACjBuD,EAAYjD,EAAKzP,KACjB+O,EAAYU,EAAKV,UACjBnB,EAAkB6B,EAAK7B,gBACvB+E,EAAc/J,EAAYqC,GAAW1L,KAC3C,GAAIqO,EACF,MAAiC,SAInC,OAFiBmB,EAAYtQ,KAAKkT,mBAAmB/I,EAAaqC,EAAWyH,GAAajU,KAAK0S,iBAAiBvI,EAAaqC,EAAWyH,EAAW9E,IAG1H,UAAhB+E,EAA0B,UAAY,WAEtB,UAAhBA,EAA0B,QAAU,UAI/C,cAAcL,GACZ,MAAMM,EAAO,GACb,IAAK,IAAIvS,EAAI,EAAGA,EAAIiS,EAAOjS,IACzBuS,EAAKzS,KAAK,MAEZ,OAAOyS,EAGT,SAAS7M,GACP,OAAc,IAAVA,EACK8M,EAAA,EAAOC,cAAc/M,GAAS,IAE9B8M,EAAA,EAAOC,cAAc/M,GAAS,SAIzC,yBAAyBkF,EAAWrC,GAClC,OAAIA,GAAeqC,GAAarC,EAAYqC,IAAcrC,EAAYqC,GAAW0E,QACxE/G,EAAYqC,GAAW0E,QAAQrP,OAEjC,EAGT,qBAAqB2K,EAAWrC,GAC9B,OAAIA,GAAeqC,GAAarC,EAAYqC,GACnCrC,EAAYqC,GAAW4E,IAEzB,EAGT,2BAA2B5E,EAAWrC,GACpC,OAAIA,GAAeqC,GAAarC,EAAYqC,IAAcrC,EAAYqC,GAAW0E,QACxE/G,EAAYqC,GAAW8E,gBAAgBzP,OAEzC,EAGT,uBAAuB2K,EAAWrC,GAChC,OAAIA,GAAeqC,GAAarC,EAAYqC,GACnCrC,EAAYqC,GAAW6E,YAEzB,EAGT,mBAAmBG,GACjB,MAAO,UAAY,0BAAgBA,GAAiB,IAGtD,eAAe8C,GACb,MAAMzN,EAAQyN,EAAYzI,SAAS,GACnC,OAAOhF,GAASA,EAAMW,MAAQX,EAAMW,KAAK+M,OAG3C,sBAAsBD,GAEpB,OADcA,EAAYzI,SAAS,GACtB7D,SAAS+I,KAAMyD,GAAMA,EAAEC,eAGtC,YAAYzD,GACV,GAAIA,GAAQA,EAAKnF,UAAYmF,EAAKnF,SAAShK,QAAUmP,EAAKnF,SAAS,GAAGvE,MACpE,OAAO8M,EAAA,EAAOC,cAAcrD,EAAKnF,SAAS,GAAGvE,OAIjD,oBAAoBwJ,EAAcV,GAChC,OAAOA,EAAQU,EAGjB,gBAAgBJ,GACd,OAAO,6BAAmBA,GAG5B,SAASrP,GACP,OAAQA,IAAMA,EAAEQ,OAGlB,gBAAgB+N,GACd,OAAQA,GAAcA,EAAa,GAAK5P,KAAKyK,WAG/C,OAAOpJ,EAAGC,GACR,OAAOD,IAAMC,EAGf,QAAQD,GACN,OAAOA,GAAKA,EAAEQ,QAAUR,EAAEQ,OAAS,EAGrC,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiTfmI,eAAeC,OAAO,+BAA+B","file":"6.bundle.js","sourcesContent":["import { isNonstandardSource, encodeForHash, ascSort, utils_makeAttChoose } from \"../js/utils.js\";\r\nimport {\r\n  CLSS_NON_STANDARD_SOURCE,\r\n  HASH_LIST_SEP,\r\n  ATB_DATA_SC,\r\n  ATB_DATA_SRC,\r\n  CLSS_SUBCLASS_FEATURE,\r\n\tSRC_MM,\r\n\tSRC_PHB,\r\n\tSRC_DMG\r\n} from \"../util/consts.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n// ENTRY RENDERING =====================================================================================================\r\n/*\r\n * // EXAMPLE USAGE //\r\n *\r\n * const entryRenderer = new EntryRenderer();\r\n *\r\n * const topLevelEntry = mydata[0];\r\n * // prepare an array to hold the string we collect while recursing\r\n * const textStack = [];\r\n *\r\n * // recurse through the entry tree\r\n * entryRenderer.renderEntries(topLevelEntry, textStack);\r\n *\r\n * // render the final product by joining together all the collected strings\r\n * $(\"#myElement\").html(toDisplay.join(\"\"));\r\n */\r\nfunction EntryRenderer() {\r\n\r\n\tthis.wrapperTag = \"div\";\r\n\tthis.baseUrl = \"\";\r\n\r\n\t/**\r\n\t * Set the tag used to group rendered elements\r\n\t * @param tag to use\r\n\t */\r\n\tthis.setWrapperTag = function (tag) {\r\n\t\tthis.wrapperTag = tag;\r\n\t};\r\n\r\n\t/**\r\n\t * Set the base url for rendered links.\r\n\t * Usage: `renderer.setBaseUrl(\"https://www.cool.site/\")` (note the \"http\" prefix and \"/\" suffix)\r\n\t * @param url to use\r\n\t */\r\n\tthis.setBaseUrl = function(url) {\r\n\t\tthis.baseUrl = url;\r\n\t};\r\n\r\n\t/**\r\n\t * Recursively walk down a tree of \"entry\" JSON items, adding to a stack of strings to be finally rendered to the\r\n\t * page. Note that this function does _not_ actually do the rendering, see the example code above for how to display\r\n\t * the result.\r\n\t *\r\n\t * @param entry An \"entry\" usually defined in JSON. A schema is available in tests/schema\r\n\t * @param textStack A reference to an array, which will hold all our strings as we recurse\r\n\t * @param depth The current recursion depth. Optional; default 0, or -1 for type \"section\" entries\r\n\t * @param prefix The (optional) prefix to be added to the textStack before whatever is added by the current call\r\n\t * @param suffix The (optional) suffix to be added to the textStack after whatever is added by the current call\r\n\t * @param forcePrefixSuffix force the prefix and suffix to be added (useful for the first call from external code)\r\n\t */\r\n\tthis.recursiveEntryRender = function(entry, textStack, depth, prefix, suffix, forcePrefixSuffix) {\r\n\t\tdepth = depth === undefined || depth === null ? entry.type === \"section\" ? -1 : 0 : depth;\r\n\t\tprefix = prefix === undefined || prefix === null ? null : prefix;\r\n\t\tsuffix = suffix === undefined || suffix === null ? null : suffix;\r\n\t\tforcePrefixSuffix = forcePrefixSuffix === undefined || forcePrefixSuffix === null ? false : forcePrefixSuffix;\r\n\r\n\t\tif (forcePrefixSuffix) renderPrefix();\r\n\t\tif (typeof entry === \"object\") {\r\n\t\t\t// the root entry (e.g. \"Rage\" in barbarian \"classFeatures\") is assumed to be of type \"entries\"\r\n\t\t\tconst type = entry.type === undefined || entry.type === \"section\" ? \"entries\" : entry.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\t// TODO add an \"insert box\" type\r\n\r\n\t\t\t\t// recursive\r\n\t\t\t\tcase \"entries\":\r\n\t\t\t\t\thandleEntries(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"options\":\r\n\t\t\t\t\thandleOptions(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"list\":\r\n\t\t\t\t\tif (entry.items) {\r\n\t\t\t\t\t\ttextStack.push(`<ul ${entry.style ? `class=\"${entry.style}\"` : ''}>`);\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.items.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.items[i], textStack, depth + 1, `<li ${isNonstandardSource(entry.items[i].source) ? `class=\"${CLSS_NON_STANDARD_SOURCE}\"` : \"\"}>`, \"</li>\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttextStack.push(\"</ul>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\trenderTable(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"invocation\":\r\n\t\t\t\t\thandleInvocation(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"patron\":\r\n\t\t\t\t\thandlePatron(this);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// block\r\n\t\t\t\tcase \"abilityDc\":\r\n\t\t\t\t\trenderPrefix();\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} save DC</span> = 8 + your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\trenderSuffix();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"abilityAttackMod\":\r\n\t\t\t\t\tif (prefix !== null) textStack.push(prefix);\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} attack modifier</span> = your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\tif (suffix !== null) textStack.push(suffix);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// inline\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.entries[i], textStack, depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonus\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonusSpeed\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value + \"ft.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"dice\":\r\n\t\t\t\t\ttextStack.push(EntryRenderer.getEntryDice(entry));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\trenderLink(this, entry);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"item\":\r\n\t\t\t\t\ttextStack.push(`<li><b>${entry.name}: </b>`);\r\n\t\t\t\t\tthis.recursiveEntryRender(entry.entry, textStack, depth);\r\n\t\t\t\t\ttextStack.push('</li>');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"print\":\r\n\t\t\t\t\ttextStack.push(renderString(entry.entry));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else if (typeof entry === \"string\") { // block\r\n\t\t\trenderPrefix();\r\n\t\t\trenderString(this);\r\n\t\t\trenderSuffix();\r\n\t\t} else { // block\r\n\t\t\t// for ints or any other types which do not require specific rendering\r\n\t\t\trenderPrefix();\r\n\t\t\ttextStack.push(entry);\r\n\t\t\trenderSuffix();\r\n\t\t}\r\n\t\tif (forcePrefixSuffix) renderSuffix();\r\n\r\n\t\tfunction renderPrefix() {\r\n\t\t\tif (prefix !== null) {\r\n\t\t\t\ttextStack.push(prefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction renderSuffix() {\r\n\t\t\tif (suffix !== null) {\r\n\t\t\t\ttextStack.push(suffix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderTable(self) {\r\n\t\t\t// TODO add handling for rowLabel property\r\n\r\n\t\t\ttextStack.push(\"<table class='table'>\");\r\n\r\n\t\t\tif (entry.caption !== undefined) {\r\n\t\t\t\ttextStack.push(`<caption>${entry.caption}</caption>`);\r\n\t\t\t}\r\n\t\t\ttextStack.push(\"<thead>\");\r\n\t\t\ttextStack.push(\"<tr class='table-row table-row--header'>\");\r\n\r\n\t\t\tif (entry.colLabels) {\r\n\t\t\t\tfor (let i = 0; i < entry.colLabels.length; ++i) {\r\n\t\t\t\t\ttextStack.push(`<th ${getTableThClassText(i)}>${entry.colLabels[i]}</th>`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\ttextStack.push(\"</thead>\");\r\n\t\t\ttextStack.push(\"<tbody>\");\r\n\r\n\t\t\tfor (let i = 0; i < entry.rows.length; ++i) {\r\n\t\t\t\ttextStack.push(\"<tr class='table-row'>\");\r\n\t\t\t\tfor (let j = 0; j < entry.rows[i].length; ++j) {\r\n\t\t\t\t\ttextStack.push(`<td ${makeTableTdClassText(j)}>`);\r\n\t\t\t\t\tself.recursiveEntryRender(entry.rows[i][j], textStack, depth + 1);\r\n\t\t\t\t\ttextStack.push(\"</td>\");\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tbody>\");\r\n\t\t\ttextStack.push(\"</table>\");\r\n\r\n\t\t\tfunction getTableThClassText(i) {\r\n\t\t\t\treturn entry.colStyles === undefined || i >= entry.colStyles.length ? \"class='table-cell'\" :  `class=\"table-cell ${entry.colStyles[i]}\"`;\r\n\t\t\t}\r\n\r\n\t\t\tfunction makeTableTdClassText(i) {\r\n\t\t\t\tif (entry.rowStyles !== undefined) {\r\n\t\t\t\t\treturn entry.rowStyles === undefined || i >= entry.rowStyles.length ? \"class='table-cell'\" : `class=\"table-cell ${entry.rowStyles[i]}\"`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getTableThClassText(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction handleEntries(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handleOptions(self) {\r\n\t\t\tif (entry.entries) {\r\n\t\t\t\tentry.entries = entry.entries.sort((a, b) => a.name && b.name ? ascSort(a.name, b.name) : a.name ? -1 : b.name ? 1 : 0);\r\n\t\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleInvocation(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handlePatron(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t}\r\n\r\n\t\tfunction handleEntriesOptionsInvocationPatron(self, incDepth) {\r\n\t\t\tconst inlineTitle = depth >= 2;\r\n\t\t\tconst nextDepth = incDepth ? depth+1 : depth;\r\n\t\t\tconst styleString = getStyleString();\r\n\t\t\tconst dataString = getDataString();\r\n\t\t\tconst preReqText = getPreReqText();\r\n\t\t\tconst headerSpan = entry.name !== undefined ? `<span class=\"stat-name\">${entry.name}${isNonstandardSource(entry.source) ? ' (UA)' : ''}${inlineTitle ? \".\" : \"\"}</span> ` : \"\";\r\n\r\n\t\t\tif (entry.entries || entry.name) {\r\n\t\t\t\ttextStack.push(`<${self.wrapperTag} ${dataString} ${styleString}>${headerSpan}${preReqText}`);\r\n\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\tself.recursiveEntryRender(entry.entries[i], textStack, nextDepth, \"<p>\", \"</p>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(`</${self.wrapperTag}>`);\r\n\t\t\t}\r\n\r\n\t\t\tfunction getStyleString() {\r\n\t\t\t\tconst styleClasses = [];\r\n\t\t\t\tif (isNonstandardSource(entry.source)) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n\t\t\t\tif (inlineTitle && entry.name !== undefined) styleClasses.push(EntryRenderer.HEAD_2);\r\n\t\t\t\telse styleClasses.push(depth === -1 ? EntryRenderer.HEAD_NEG_1 : depth === 0 ? EntryRenderer.HEAD_0 : EntryRenderer.HEAD_1);\r\n\t\t\t\tif ((entry.type === \"invocation\" || entry.type === \"patron\") && entry.subclass !== undefined) styleClasses.push(CLSS_SUBCLASS_FEATURE);\r\n\t\t\t\treturn styleClasses.length > 0 ? `class=\"${styleClasses.join(\" \")}\"` : \"\";\r\n\t\t\t}\r\n\r\n\t\t\tfunction getDataString() {\r\n\t\t\t\tlet dataString = \"\";\r\n\t\t\t\tif (entry.type === \"invocation\" || entry.type === \"patron\") {\r\n\t\t\t\t\tconst titleString = entry.source ? `title=\"Source: ${Parser.sourceJsonToFull(entry.source)}\"` : \"\";\r\n\t\t\t\t\tif (entry.subclass !== undefined) dataString = `${ATB_DATA_SC}=\"${entry.subclass.name}\" ${ATB_DATA_SRC}=\"${entry.subclass.source}\" ${titleString}`;\r\n\t\t\t\t\telse dataString = `${ATB_DATA_SC}=\"${EntryRenderer.DATA_NONE}\" ${ATB_DATA_SRC}=\"${EntryRenderer.DATA_NONE}\" ${titleString}`;\r\n\t\t\t\t}\r\n\t\t\t\treturn dataString;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getPreReqText() {\r\n\t\t\t\tif (entry.prerequisite) return `<span class=\"prerequisite\">Prerequisite: ${entry.prerequisite}</span>`;\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderLink(self, entry) {\r\n\t\t\tlet href;\r\n\t\t\tif (entry.href.type === \"internal\") {\r\n\t\t\t\t// baseURL is blank by default\r\n\t\t\t\thref = `${self.baseUrl}${entry.href.path}#`;\r\n\t\t\t\tif (entry.href.hash !== undefined) {\r\n\t\t\t\t\thref += entry.href.hash;\r\n\t\t\t\t\tif (entry.href.subhashes !== undefined) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.href.subhashes.length; i++) {\r\n\t\t\t\t\t\t\tconst subHash = entry.href.subhashes[i];\r\n\t\t\t\t\t\t\thref += `,${encodeForHash(subHash.key)}:${encodeForHash(subHash.value)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (entry.href.type === \"external\") {\r\n\t\t\t\thref = entry.href.url;\r\n\t\t\t}\r\n\t\t\ttextStack.push(`<a href='${href}'>${entry.text}</a>`);\r\n\t\t}\r\n\r\n\t\tfunction renderString(self) {\r\n\t\t\tconst tagSplit = splitByTags();\r\n\t\t\tfor (let i = 0; i < tagSplit.length; i++) {\r\n\t\t\t\tconst s = tagSplit[i];\r\n\t\t\t\tif (s === undefined || s === null || s === \"\") continue;\r\n\t\t\t\tif (s.charAt(0) === \"@\") {\r\n\t\t\t\t\tconst [tag, text] = splitFirstSpace(s);\r\n\r\n\t\t\t\t\tif (tag === \"@bold\" || tag === \"@b\" || tag === \"@italic\" || tag === \"@i\" || tag === \"@skill\" || tag === \"@action\") {\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@b\":\r\n\t\t\t\t\t\t\tcase \"@bold\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<b>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</b>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@i\":\r\n\t\t\t\t\t\t\tcase \"@italic\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<i>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</i>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@action\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.actionToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@skill\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.skillToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst [name, source, displayText, ...others] = text.split(\"|\");\r\n\t\t\t\t\t\tconst hash = `${name}${source ? `${HASH_LIST_SEP}${source}` : \"\"}`;\r\n\r\n\t\t\t\t\t\tconst fauxEntry = {\r\n\t\t\t\t\t\t\t\"type\": \"link\",\r\n\t\t\t\t\t\t\t\"href\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"internal\",\r\n\t\t\t\t\t\t\t\t\"path\": \"\",\r\n\t\t\t\t\t\t\t\t\"hash\": encodeForHash(hash)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"text\": (displayText ? displayText : name)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@spell\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/spells/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@item\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_DMG;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/items/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@condition\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/conditions/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@class\":\r\n\t\t\t\t\t\t\t\tconst classMatch = EntryRenderer.RE_INLINE_CLASS.exec(text);\r\n\t\t\t\t\t\t\t\tif (classMatch) {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = classMatch[1].trim(); // TODO pass this in\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.subhashes = [{\"key\": \"sub\", \"value\": classMatch[2].trim() + \"~phb\"}] // TODO pass this in\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/classes/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@creature\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_MM;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/bestiary/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@filter\":\r\n\t\t\t\t\t\t\t\t// todo... maybe\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@damage\":\r\n\t\t\t\t\t\t\tcase \"@dice\":\r\n\t\t\t\t\t\t\t\t// todo\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@book\":\r\n\t\t\t\t\t\t\t\t//todo\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@5etools\":\r\n\t\t\t\t\t\t\t\tif (source.indexOf(\".\") > -1) {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/\" + source.substring(0, source.indexOf(\".\"))\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/\" + source;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextStack.push(s);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitFirstSpace(string) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tstring.substr(0, string.indexOf(' ')),\r\n\t\t\t\t\tstring.substr(string.indexOf(' ') + 1)\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitByTags() {\r\n\t\t\t\tlet tagDepth = 0;\r\n\t\t\t\tlet inTag = false;\r\n\t\t\t\tlet char, char2;\r\n\t\t\t\tconst out = [];\r\n\t\t\t\tlet curStr = \"\";\r\n\t\t\t\tfor (let i = 0; i < entry.length; ++i) {\r\n\t\t\t\t\tchar = entry.charAt(i);\r\n\t\t\t\t\tchar2 = i < entry.length-1 ? entry.charAt(i+1) : null;\r\n\r\n\t\t\t\t\tswitch (char) {\r\n\t\t\t\t\t\tcase \"{\":\r\n\t\t\t\t\t\t\tif (char2 === \"@\") {\r\n\t\t\t\t\t\t\t\tif (tagDepth++ > 0) {\r\n\t\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\t\tinTag = false;\r\n\t\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"}\":\r\n\t\t\t\t\t\t\tif (--tagDepth === 0) {\r\n\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (curStr.length > 0) out.push(curStr);\r\n\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nEntryRenderer.getEntryDice = function (entry) {\r\n\t// TODO make droll integration optional\r\n\tlet toAdd;\r\n\tif (entry.number && entry.faces) {\r\n\t\ttoAdd = String(entry.number) + \"d\" + entry.faces;\r\n\t} else if (entry.toRoll && entry.toRoll.length) {\r\n\t\tfor (let roll of entry.toRoll) {\r\n\t\t\ttoAdd = String(roll.number) + \"d\" + roll.faces + \" + \"\r\n\t\t}\r\n\t\ttoAdd = toAdd.substring(0, toAdd.length - 3);\r\n\t}\r\n\tif (typeof droll !== \"undefined\" && entry.rollable === true) {\r\n\t\t// TODO output this somewhere nice\r\n\t\t// TODO make this less revolting\r\n\r\n\t\t// TODO output to small tooltip-stype bubble? Close on mouseout\r\n\t\treturn `<span class='roller unselectable' onclick=\"if (this.rolled) { this.innerHTML = this.innerHTML.split('=')[0].trim()+' = '+droll.roll('${toAdd}').total; } else { this.rolled = true; this.innerHTML += ' = '+droll.roll('${toAdd}').total; }\">${toAdd}</span>`;\r\n\t} else {\r\n\t\treturn toAdd;\r\n\t}\r\n};\r\n\r\nEntryRenderer.RE_INLINE_CLASS = /(.*?) \\((.*?)\\)/;\r\nEntryRenderer.HEAD_NEG_1 = \"statsBlockSectionHead\";\r\nEntryRenderer.HEAD_0 = \"statsBlockHead\";\r\nEntryRenderer.HEAD_1 = \"statsBlockSubHead\";\r\nEntryRenderer.HEAD_2 = \"statsInlineHead\";\r\nEntryRenderer.DATA_NONE = \"data-none\";\r\n\r\nexport default EntryRenderer;","import EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t</div>`;\r\n\r\nfunction renderSelection(spell, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n\tconst spellHtmlString = spellHtml(spell);\r\n\r\n\trootEl.querySelector(\".stats-wrapper\").innerHTML = spellHtmlString;\r\n}\r\n\r\nfunction spellHtml(spell) {\r\n\tconst renderStack = [];\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stats-source source${spell.source}\" title=\"${Parser.sourceJsonToFull(spell.source)}\">${Parser.sourceJsonToAbv(spell.source)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span>${Parser.spLevelSchoolMetaToFull(spell.level, spell.school, spell.meta)}</span></div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Casting Time: </span>${Parser.spTimeListToFull(spell.time)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Range: </span>${Parser.spRangeToFull(spell.range)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Components: </span>${Parser.spComponentsToFull(spell.components)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Duration: </span>${Parser.spDurationToFull(spell.duration)}</div>`);\r\n\trenderStack.push(`<div class='text'>`);\r\n\r\n\trenderer.recursiveEntryRender({type: \"entries\", entries: spell.entries}, renderStack, 1);\r\n\r\n\tif (spell.entriesHigherLevel) {\r\n\t\tconst higherLevelsEntryList = {type: \"entries\", entries: spell.entriesHigherLevel};\r\n\t\trenderer.recursiveEntryRender(higherLevelsEntryList, renderStack, 2);\r\n\t}\r\n\r\n\trenderStack.push(`</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Classes: </span>${Parser.spMainClassesToFull(spell.classes)}</div>`);\r\n\r\n\tif (spell.classes.fromSubclass) {\r\n\t\tconst currentAndLegacy = Parser.spSubclassesToCurrentAndLegacyFull(spell.classes);\r\n\t\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Subclasses: </span>${currentAndLegacy[0]}</div>`);\r\n\t\tif (currentAndLegacy[1]) {\r\n\t\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background margin-bottom_med\"><span class=\"stat-name\">Subclasses (legacy): </span>${currentAndLegacy[1]}</div>`);\r\n\t\t}\r\n\t}\r\n\r\n\tif (spell.scrollNote) {\r\n\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background\">`);\r\n\t\trenderer.recursiveEntryRender(\r\n\t\t\t`{@italic Note: Both the {@class ${\"Fighter\"} (${\"Eldritch Knight\"})} and the {@class ${\"Rogue\"} (${\"Arcane Trickster\"})} spell lists include all {@class ${\"Wizard\"}} spells. Spells of 5th level or higher may be cast with the aid of a spell scroll or similar.}`\r\n\t\t\t, renderStack, 2);\r\n\t\trenderStack.push(`</div>`);\r\n\t}\r\n\r\n\treturn renderStack.join('');\r\n}\r\n\r\nexport { renderSelection, spellHtml };","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-grid-tree-toggle\" theme-for=\"vaadin-grid-tree-toggle\">\n  <template>\n    <style>\n      :host {\n        --vaadin-grid-tree-toggle-level-offset: 2em;\n        align-items: center;\n        vertical-align: middle;\n        margin-left: calc(var(--lumo-space-s) * -1);\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host(:not([leaf])) {\n        cursor: default;\n      }\n\n      [part=\"toggle\"] {\n        display: inline-block;\n        font-size: 1.5em;\n        line-height: 1;\n        width: 1em;\n        height: 1em;\n        text-align: center;\n        color: var(--lumo-contrast-50pct);\n        /* Increase touch target area */\n        padding: calc(1em / 3);\n        margin: calc(1em / -3);\n      }\n\n      :host(:not([dir=\"rtl\"])) [part=\"toggle\"] {\n        margin-right: 0;\n      }\n\n      @media (hover: hover) {\n        :host(:hover) [part=\"toggle\"] {\n          color: var(--lumo-contrast-80pct);\n        }\n      }\n\n      [part=\"toggle\"]::before {\n        font-family: \"lumo-icons\";\n        display: inline-block;\n        height: 100%;\n      }\n\n      :host(:not([expanded])) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-right);\n      }\n\n      :host([expanded]) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-right);\n        transform: rotate(90deg);\n      }\n\n      /* Experimental support for hierarchy connectors, using an unsupported selector */\n      :host([theme~=\"connectors\"]) #level-spacer {\n        position: relative;\n        z-index: -1;\n        font-size: 1em;\n        height: 1.5em;\n      }\n\n      :host([theme~=\"connectors\"]) #level-spacer::before {\n        display: block;\n        content: \"\";\n        margin-top: calc(var(--lumo-space-m) * -1);\n        height: calc(var(--lumo-space-m) + 3em);\n        background-image: linear-gradient(to right, transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px), var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px));\n        background-size: var(--vaadin-grid-tree-toggle-level-offset) var(--vaadin-grid-tree-toggle-level-offset);\n        background-position: calc(var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px) 0;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-space-s) * -1);\n      }\n\n      :host([dir=\"rtl\"]) [part=\"toggle\"] {\n        margin-left: 0;\n      }\n\n      :host([dir=\"rtl\"][expanded]) [part=\"toggle\"]::before {\n        transform: rotate(-90deg);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"connectors\"]) #level-spacer::before {\n        background-image: linear-gradient(to left, transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px), var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px));\n        background-position: calc(100% - (var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px)) 0;\n      }\n\n      :host([dir=\"rtl\"]:not([expanded])) [part=\"toggle\"]::before,\n      :host([dir=\"rtl\"][expanded]) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-left);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: \"vaadin-grid-tree-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQkAA0AAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAECAAAABoAAAAcgHwa6EdERUYAAAPsAAAAHAAAAB4AJwAOT1MvMgAAAZQAAAA/AAAAYA8TBIJjbWFwAAAB8AAAAFUAAAFeGJvXWmdhc3AAAAPkAAAACAAAAAgAAAAQZ2x5ZgAAAlwAAABLAAAAhIrPOhFoZWFkAAABMAAAACsAAAA2DsJI02hoZWEAAAFcAAAAHQAAACQHAgPHaG10eAAAAdQAAAAZAAAAHAxVAgBsb2NhAAACSAAAABIAAAASAIAAVG1heHAAAAF8AAAAGAAAACAACgAFbmFtZQAAAqgAAAECAAACTwflzbdwb3N0AAADrAAAADYAAABZQ7Ajh3icY2BkYGAA4twv3Vfi+W2+MnCzMIDANSOmbGSa2YEZRHEwMIEoAAoiB6sAeJxjYGRgYD7w/wADAwsDCDA7MDAyoAI2AFEEAtIAAAB4nGNgZGBg4GBgZgDRDAxMDGgAAAGbABB4nGNgZp7JOIGBlYGBaSbTGQYGhn4IzfiawZiRkwEVMAqgCTA4MDA+38d84P8BBgdmIAapQZJVYGAEAGc/C54AeJxjYYAAxlAIzQTELAwMBxgZGB0ACy0BYwAAAHicY2BgYGaAYBkGRgYQiADyGMF8FgYbIM3FwMHABISMDArP9/3/+/8/WJXC8z0Q9v8nEp5gHVwMMMAIMo+RDYiZoQJMQIKJARUA7WBhGN4AACFKDtoAAAAAAAAAAAgACAAQABgAJgA0AEIAAHichYvBEYBADAKBVHBjBT4swl9KS2k05o0XHd/yW1hAfBFwCv9sIlJu3nZaNS3PXAaXXHI8Lge7DlzF7C1RgXc7xkK6+gvcD2URmQB4nK2RQWoCMRiFX3RUqtCli65yADModOMBLLgQSqHddRFnQghIAnEUvEA3vUUP0LP0Fj1G+yb8R5iEhO9/ef/7FwFwj28o9EthiVp4hBlehcfUP4Ur8o/wBAv8CU+xVFvhOR7UB7tUdUdlVRJ6HnHWTnhM/V24In8JT5j/KzzFSi2E53hUz7jCcrcIiDDwyKSW1JEct2HdIPH1DFytbUM0PofWdNk5E5oUqb/Q6HHBiVGZpfOXkyUMEj5IyBuNmYZQjBobfsuassvnkKLe1OuBBj0VQ8cRni2xjLWsHaM0jrjx3peYA0/vrdmUYqe9iy7bzrX6eNP7Jh1SijX+AaUVbB8AAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSruZMzlHaB0q4A76kLlwAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKxJigiD6mhFTNowGACmcA/8AAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n/**\n * `<vaadin-grid-tree-toggle>` is a helper element for the `<vaadin-grid>`\n * that provides toggle and level display functionality for the item tree.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">Package name</template>\n *   <template>\n *     <vaadin-grid-tree-toggle\n *         leaf=\"[[!item.hasChildren]]\"\n *         expanded=\"{{expanded}}\"\n *         level=\"[[level]]\">\n *       [[item.name]]\n *     </vaadin-grid-tree-toggle>\n *   </template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `toggle` | The tree toggle icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * ---|---|---\n * `expanded` | When present, the toggle is expanded | :host\n * `leaf` | When present, the toggle is not expandable, i. e., the current item is a leaf | :host\n *\n * The following custom CSS properties are available on\n * the `<vaadin-grid-tree-toggle>` element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-grid-tree-toggle-level-offset` | Visual offset step for each tree sublevel | `1em`\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n */\nclass GridTreeToggleElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        align-items: baseline;\n\n        /* CSS API for :host */\n        --vaadin-grid-tree-toggle-level-offset: 1em;\n\n        /*\n          ShadyCSS seems to polyfill :dir(rtl) only for :host, thus using\n          a host custom CSS property for ltr/rtl toggle icon choice.\n         */\n        ---collapsed-icon: \"\\\\e7be\\\\00a0\";\n      }\n\n      :host(:dir(rtl)) {\n        ---collapsed-icon: \"\\\\e7bd\\\\00a0\";\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:not([leaf])) {\n        cursor: pointer;\n      }\n\n      #level-spacer,\n      [part=\"toggle\"] {\n        flex: none;\n      }\n\n      #level-spacer {\n        display: inline-block;\n        width: calc(var(---level, '0') * var(--vaadin-grid-tree-toggle-level-offset));\n      }\n\n      [part=\"toggle\"]::before {\n        font-family: \"vaadin-grid-tree-icons\";\n        line-height: 1em; /* make icon font metrics not affect baseline */\n      }\n\n      :host(:not([expanded])) [part=\"toggle\"]::before {\n        content: var(---collapsed-icon);\n      }\n\n      :host([expanded]) [part=\"toggle\"]::before {\n        content: \"\\\\e7bc\\\\00a0\"; /* icon glyph + single non-breaking space */\n      }\n\n      :host([leaf]) [part=\"toggle\"] {\n        visibility: hidden;\n      }\n    </style>\n\n    <span id=\"level-spacer\"></span>\n    <span part=\"toggle\"></span>\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-toggle';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Current level of the tree represented with a horizontal offset\n       * of the toggle button.\n       */\n      level: {\n        type: Number,\n        value: 0,\n        observer: '_levelChanged'\n      },\n\n      /**\n       * Hides the toggle icon and disables toggling a tree sublevel.\n       */\n      leaf: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Sublevel toggle state.\n       */\n      expanded: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('click', e => this._onClick(e));\n  }\n\n  _onClick(e) {\n    if (this.leaf) {\n      return;\n    }\n\n    e.preventDefault();\n    this.expanded = !this.expanded;\n  }\n\n  _levelChanged(level) {\n    const value = Number(level).toString();\n    this.style['---level'] = value;\n    // Async is to make DOM updates applied before evaluating the style\n    // update, required for polyfilled RTL support in MSIE and Edge.\n    this._debouncerUpdateLevel = Debouncer.debounce(\n      this._debouncerUpdateLevel,\n      microTask,\n      () => this.updateStyles({'---level': value})\n    );\n  }\n}\n\ncustomElements.define(GridTreeToggleElement.is, GridTreeToggleElement);\n\nexport { GridTreeToggleElement };\n","import { PolymerElement,html } from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-grid\";\nimport \"@vaadin/vaadin-grid/vaadin-grid-tree-toggle\";\nimport { getCharacterChannel, getSelectedCharacter, getClassReferences, getClassLevelGroups, toggleSpellPrepared, saveCharacter, getAttributeModifier, isSpellPreparedFromObj, setSpellSlots, getSpellSlots, toggleCantripPrepared, getSubclassChoiceLevel, getSubclassChoice } from \"../../../util/charBuilder\";\nimport { filterModel } from \"../../../util/data\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { spellHtml } from \"../../../js/spells\";\nimport { findInPath, util_capitalize, util_capitalizeAll, getProfBonus } from \"../../../js/utils\";\nimport Parser from \"../../../util/Parser\";\nimport \"@vaadin/vaadin-checkbox\";\n\n// todo:\n// compute spell slots for multiclassing, warlock ++\n// add DC / Spell Hit Mod / Spells Prepared to top\n// Make grid non-heightByRows, fix resizing issues, use detail toggle for spells\n\nclass DndCharacterBuilderSpells extends PolymerElement {\n  \n  static get properties() {\n    return {\n      spellsKnown: {\n        type: Object,\n        value: {}\n      },\n      preparedSpells: {\n        type: Object,\n        value: {}\n      },\n      heightByRows: {\n        type: Boolean,\n        value: () => {\n          return window.innerWidth < 900;\n        }\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    this.refresh = true;\n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\",this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n      this.refresh = true;\n      this.updateFromCharacter(getSelectedCharacter());\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\",this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  ready() {\n    super.ready();\n\n    this.multiclassSlotsDef = [\n      [2],\n      [3],\n      [4,2],\n      [4,3],\n      [4,3,2],\n      [4,3,3],\n      [4,3,3,1],\n      [4,3,3,2],\n      [4,3,3,3,1],\n      [4,3,3,3,2],\n      [4,3,3,3,2,1],\n      [4,3,3,3,2,1],\n      [4,3,3,3,2,1,1],\n      [4,3,3,3,2,1,1],\n      [4,3,3,3,2,1,1,1],\n      [4,3,3,3,2,1,1,1],\n      [4,3,3,3,2,1,1,1,1],\n      [4,3,3,3,3,1,1,1,1],\n      [4,3,3,3,3,2,1,1,1],\n      [4,3,3,3,3,2,2,1,1]\n    ];\n\n    setTimeout(() => {\n      const grid = this.$.grid;\n\n      grid.dataProvider = ((params, callback) => {\n        const startIndex = params.page * params.pageSize;\n        const children = params.parentItem ? params.parentItem.children : this.spellDisplay;\n        if (children && children.length) {\n          const page = children.slice(startIndex, startIndex + params.pageSize);\n          callback(page, children.length);\n        }\n      }).bind(this);\n    }, 0);\n  }\n\n  async updateSpellStats(classRefs, classLevels) {\n    if (classLevels && classRefs) {\n      // DCs and Spell Modifier\n      const newSpellMods = [];\n      const overalLevel = Object.entries(classLevels).reduce((total, [className, level]) => total + level, 0);\n      const profBonus = getProfBonus(overalLevel);\n\n      for (const [className, level] of Object.entries(classLevels)) {\n        const classRef = classRefs[className];\n        if (classRef.casterProgression) {\n          const attributeModifier = await getAttributeModifier(classRef.spellcastingAbility);\n          const spellAttackBonus = attributeModifier + profBonus\n          const dc = 8 + spellAttackBonus;\n          newSpellMods.push({ className, mod: attributeModifier, spellAttackBonus, dc });\n        }\n      }\n\n      this.spellMods = newSpellMods;\n    } else {\n      this.spellMods = [];\n    }\n  }\n\n  async updateFromCharacter(character) {\n    if (character && this.refresh) {\n      const classRefs = await getClassReferences(character),\n        classLevels = getClassLevelGroups(character),\n        expandedItems = [],\n        spellsKnownObj = {};\n      let spellDisplay = [];\n\n      this.updateSpellStats(classRefs, classLevels);\n\n      for (const [ className, level ] of Object.entries(classLevels)) {\n        const classRef = classRefs[className];\n\n        if (classRef.casterProgression) {\n          let spellsKnownOrPrepared;\n          let spellsKnowPreparedType = 'known';\n          let cantripsKnown;\n          let warlockSpellLevel;\n          let warlockSpellSlots;\n\n          // Getting spells + cantrips known info from table, also getting warlock info from table\n          classRef.classTableGroups.forEach((classTableGroup) => {\n            if (classTableGroup.colLabels && classTableGroup.colLabels.length) {\n              const spellsColIndex = classTableGroup.colLabels.findIndex((label) => label.toLowerCase().indexOf(\"spells known\") > -1);\n              if (spellsColIndex > -1 && classTableGroup.rows && classTableGroup.rows.length > level - 1) {\n                spellsKnownOrPrepared = classTableGroup.rows[level - 1][spellsColIndex];\n              }\n              const cantripsColIndex = classTableGroup.colLabels.findIndex((label) => label.toLowerCase().indexOf(\"cantrips known\") > -1);\n              if (cantripsColIndex > -1 && classTableGroup.rows && classTableGroup.rows.length > level - 1) {\n                cantripsKnown = classTableGroup.rows[level - 1][cantripsColIndex];\n              }\n              const warlockSpellLevelColIndex = classTableGroup.colLabels.findIndex((label) => label.toLowerCase().indexOf(\"slot level\") > -1);\n              if (warlockSpellLevelColIndex > -1 && classTableGroup.rows && classTableGroup.rows.length > level - 1) {\n                const warlockSpellLevelString = classTableGroup.rows[level - 1][warlockSpellLevelColIndex];\n                const warlockSpellLevelMatches = warlockSpellLevelString.match(/(\\d+)/g);\n                if (warlockSpellLevelMatches && warlockSpellLevelMatches.length) {\n                  warlockSpellLevel = parseInt(warlockSpellLevelMatches[0]);\n                }\n              }\n              const warlockSpellSlotsColIndex = classTableGroup.colLabels.findIndex((label) => label.toLowerCase().indexOf(\"spell slots\") > -1);\n              if (warlockSpellSlotsColIndex > -1 && classTableGroup.rows && classTableGroup.rows.length > level - 1) {\n                warlockSpellSlots = classTableGroup.rows[level - 1][warlockSpellSlotsColIndex];\n              }\n            }\n          });\n\n          // otherwise compute spells prepared\n          if (spellsKnownOrPrepared === undefined) {\n            spellsKnowPreparedType = 'prepared';\n            const levelMultiplier = classRef.casterProgression === 'full' ? 1 : 0.5;\n            const attributeModifier = await getAttributeModifier(classRef.spellcastingAbility);\n            spellsKnownOrPrepared = Math.floor(level * levelMultiplier) + attributeModifier;\n            spellsKnownOrPrepared = spellsKnownOrPrepared < 1 ? 1 : spellsKnownOrPrepared;\n          }\n\n          /* SPELL LISTS */\n          // Getting class spell list\n          let classSpellList = await filterModel('spells', { key: 'classes.fromClassList', value: { name: className, source: classRef.source } } );\n\n          // Getting subclass spell list (always prepared)\n          const subclassLevel = getSubclassChoiceLevel(classRef);\n          if (level >= subclassLevel) {\n            const subclassName = character.subclasses && character.subclasses[className] ? character.subclasses[className].shortName : '';\n            if (subclassName) {\n              let subclassSpellList = await filterModel('spells', { key: 'classes.fromSubclass', value: { 'subclass.name': subclassName, 'class.name': className, 'class.source': classRef.source } } );\n              if (subclassName === 'Divine Soul') {\n                let divineAffinityChoice = getSubclassChoice(className.toLowerCase(), subclassName.toLowerCase(), level, 'Divine Magic Affinity', character);\n                if (divineAffinityChoice) {\n                  subclassSpellList = subclassSpellList.filter(spell => divineAffinityChoice.indexOf(spell.name) > -1);\n                } else {\n                  subclassSpellList = [];\n                }\n              }\n              subclassSpellList = subclassSpellList.map(spell => ({ ...spell, isSubclassSpell: true }));\n              classSpellList = [...new Set(classSpellList.concat(subclassSpellList))];\n            }\n            if (subclassName === 'Divine Soul') {\n              let divineSoulSpellList = await filterModel('spells', { key: 'classes.fromClassList', value: { name: 'cleric', source: 'phb' } } );\n              classSpellList = [...new Set(classSpellList.concat(divineSoulSpellList))];\n            }\n          }\n\n          // Getting spell slots per level array\n          const spellTable = classRef.classTableGroups.find((tableGroup) => tableGroup.title === \"Spell Slots per Spell Level\");\n          let spellSlotEntries;\n          if (spellTable) {\n            spellSlotEntries = spellTable.rows[level - 1].filter((spellSlots) => spellSlots !== 0);\n          } else {\n            // If no spell slots per level, then we're a warlock, get spell entries for\n            // warlocks with zero spell slots at each level (pact slots will be added later)\n            spellSlotEntries = [];\n            for (let i = 0; i < warlockSpellLevel; i++) {\n              spellSlotEntries.push(0);\n            }\n          }\n\n          // Adding cantrips entry\n          const hasCantrips = cantripsKnown ? 0 : 1;\n          if (cantripsKnown) {\n            spellSlotEntries = [0].concat(spellSlotEntries);\n          }\n\n          // Clearing prepared spells to filter out those that can no longer be prepared\n          let oldSpellsPrepared = JSON.parse(JSON.stringify(character.preparedSpells));\n          let oldCantripsPrepared = JSON.parse(JSON.stringify(character.preparedCantrips));\n          character.preparedSpells[className] = {};\n          character.preparedCantrips[className] = {};\n\n          // Generating hierarchical structure of classes > levels > spells > spellDef\n          const spellSlots = spellSlotEntries.map((spellSlots, index) => {\n            if (spellSlots !== -1) {\n              let spellList = classSpellList\n                .filter((spell) => {\n                  return spell.level === index + hasCantrips;\n                })\n                .sort((a, b) => {\n                  if (a.name < b.name) { return -1; }\n                  if (a.name > b.name) { return 1; }\n                  return 0;\n                })\n                .map(spell => {\n                  const isCantrip = index + hasCantrips === 0;\n                  const isPrepared = isCantrip ? isSpellPreparedFromObj(className, spell, oldCantripsPrepared) : isSpellPreparedFromObj(className, spell, oldSpellsPrepared);\n                  if (isPrepared) {\n                    if (isCantrip) {\n                      character.preparedCantrips[className][spell.name] = {name: spell.name, source: spell.source};\n                    } else {\n                      character.preparedSpells[className][spell.name] = {name: spell.name, source: spell.source};\n                    }\n                  }\n                  if (this.isEditMode || isPrepared || spell.isSubclassSpell) {\n                    return {\n                      id: 'spell',\n                      name: spell.name, \n                      children: [{...spell, hasChildren: false, id: 'spelldef', parentClass: className, parentLevel: index + hasCantrips} ],\n                      hasChildren: true,\n                      parentClass: className,\n                      parentLevel: index + hasCantrips,\n                      isCantrip,\n                      isSubclassSpell: spell.isSubclassSpell,\n                      isWarlock: !!warlockSpellLevel\n                    };\n                  } else {\n                    return undefined;\n                  }\n                })\n                .filter((spell) => spell !== undefined);\n              const levelObj = {\n                id: 'level',\n                level: index + hasCantrips,\n                spellSlots,\n                currentSlots: getSpellSlots(index + hasCantrips),\n                children: spellList,\n                hasChildren: spellList.length > 0,\n                parentClass: className,\n                isWarlock: !!warlockSpellLevel\n              };\n              const isExpanded = this.$.grid.expandedItems.some(item => item.id === 'level' && item.level === levelObj.level && item.parentClass === levelObj.parentClass);\n              if (isExpanded) {\n                expandedItems.push(levelObj);\n              }\n              return levelObj;\n            } else {\n              return null\n            }\n          }).filter(slots => slots !== null);\n\n          spellsKnownObj[className] = {\n            current: character.preparedSpells && character.preparedSpells[className] ? Object.keys(character.preparedSpells[className]) : [],\n            max: spellsKnownOrPrepared,\n            type: spellsKnowPreparedType,\n            maxCantrips: cantripsKnown,\n            currentCantrips: character.preparedCantrips && character.preparedCantrips[className] ? Object.keys(character.preparedCantrips[className]) : []\n          };\n\n          if (spellSlots.length) {\n            const classObj = {\n              id: 'class',\n              className,\n              level,\n              hasCantrips,\n              children: spellSlots,\n              spellsKnown: spellsKnownOrPrepared,\n              hasChildren: spellSlots.length > 0,\n              spellPrepType: spellsKnowPreparedType,\n              multiclassingLevels: Math.floor((classRef.casterProgression === 'full' ? 1 : 0.5) * level),\n              isWarlock: !!warlockSpellLevel,\n              warlockSpellLevel,\n              warlockSpellSlots\n            };\n            expandedItems.push(classObj);\n            spellDisplay.push(classObj);\n          }\n        }\n      }\n\n      // sorting most levels first\n      spellDisplay.sort((a, b) => a.children.length - b.children.length);\n\n      // Changing structure for non-edit mode & multiclassing\n      if (!this.isEditMode) {\n        let newSpellDisplay = [];\n        if (spellDisplay.length) {\n          let multiclassLevel = 0,\n            isMulticlass = -1,\n            warlockSpellLevel,\n            warlockSpellSlots;\n\n          // Combine all class spell levels into single references\n          for (let spellClass of spellDisplay) {\n            if (!spellClass.isWarlock) {\n              multiclassLevel += spellClass.multiclassingLevels;\n              isMulticlass ++;\n            } else {\n              warlockSpellLevel = spellClass.warlockSpellLevel;\n              warlockSpellSlots = spellClass.warlockSpellSlots;\n            }\n\n            spellClass.children.forEach((spellLevel, index) => {\n              const adjIndex = index + spellClass.hasCantrips;\n              if (!newSpellDisplay[adjIndex]) {\n                newSpellDisplay[adjIndex] = spellLevel;\n              } else if (spellLevel.children[index]) {\n                newSpellDisplay[adjIndex].children = newSpellDisplay[adjIndex].children.concat(spellLevel.children);\n              }\n            });\n          }\n\n          // remove index 0 if no cantrips\n          newSpellDisplay = newSpellDisplay.filter(i => i !== undefined);\n\n          // Changing spell slots for multiclass rules\n          const hasCantrips = newSpellDisplay[0].level === 0;\n          if (isMulticlass > 0) {\n            const multiclassSlotsArray = this.multiclassSlotsDef[multiclassLevel];\n\n            for (let i = (hasCantrips ? 1 : 0); i < newSpellDisplay.length; i++) {\n              newSpellDisplay[i].spellSlots = multiclassSlotsArray[i - (hasCantrips ? 1 : 0)];\n            }\n          }\n\n          // Adding warlock slots\n          if (warlockSpellLevel) {\n            newSpellDisplay[warlockSpellLevel - (hasCantrips ? 0 : 1)].warlockSpellSlots = warlockSpellSlots;\n            newSpellDisplay[warlockSpellLevel - (hasCantrips ? 0 : 1)].currentWarlockSlots = character.warlockSpellSlots || 0;\n          }\n        }\n        spellDisplay = newSpellDisplay;\n      }\n\n      this.refresh = false;\n      saveCharacter(character);\n      this.spellsKnown = spellsKnownObj;\n      this.spellDisplay = spellDisplay;\n      this.expandedItems = expandedItems;\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n      this.$.grid.clearCache();\n    }\n  }\n\n  _renderSpell(spell) {\n    return spellHtml(spell);\n  }\n\n  _toggleSpellPrepared(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const isSubclassSpell = e.model.item.isSubclassSpell;\n    if (!isSubclassSpell && this.isEditMode) {\n      const isCantrip = e.model.item.isCantrip;\n      if (isCantrip) {\n        this._toggleCantripPrepared(e);\n      } else {\n        const className = e.model.item.parentClass;\n        const spell = e.model.item.children[0];\n        const isPrepared = this._isPreparedSpell(this.spellsKnown, className, spell.name);\n        const currentPreparedCount = this._currentSpellsKnownCount(className, this.spellsKnown);\n        const maxPreparedCount = this._maxSpellsKnownCount(className, this.spellsKnown);\n\n        if ((isPrepared || currentPreparedCount < maxPreparedCount) && spell.id === 'spelldef') {\n          let spellsKnownCopy = JSON.parse(JSON.stringify(this.spellsKnown));\n          if (isPrepared) {\n            const index = spellsKnownCopy[className].current.indexOf(spell.name);\n            spellsKnownCopy[className].current.splice(index, 1);\n          } else {\n            spellsKnownCopy[className].current.push(spell.name);\n          }\n          this.spellsKnown = spellsKnownCopy;\n          toggleSpellPrepared(className, spell);\n        } else if (currentPreparedCount >= maxPreparedCount) {\n          this._flashPreparedButton(findInPath('button', e));\n        }\n      }\n    }\n  }\n\n  _toggleCantripPrepared(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const className = e.model.item.parentClass;\n    const spell = e.model.item.children[0];\n    const isPrepared = this._isPreparedCantrip(this.spellsKnown, className, spell.name);\n    const currentPreparedCount = this._currentCantripsKnownCount(className, this.spellsKnown);\n    const maxPreparedCount = this._maxCantripsKnownCount(className, this.spellsKnown);\n\n    if ((isPrepared || currentPreparedCount < maxPreparedCount) && spell.id === 'spelldef') {\n      let spellsKnownCopy = JSON.parse(JSON.stringify(this.spellsKnown));\n      if (isPrepared) {\n        const index = spellsKnownCopy[className].currentCantrips.indexOf(spell.name);\n        spellsKnownCopy[className].currentCantrips.splice(index, 1);\n      } else {\n        spellsKnownCopy[className].currentCantrips.push(spell.name);\n      }\n      this.spellsKnown = spellsKnownCopy;\n      toggleCantripPrepared(className, spell);\n    } else if (currentPreparedCount >= maxPreparedCount) {\n      this._flashPreparedButton(findInPath('button', e));\n    }\n  }\n\n  _flashPreparedButton(buttonEl) {\n    if (buttonEl) {\n      buttonEl.classList.add('transition-bg');\n      buttonEl.classList.add('flash-error');\n      setTimeout(() => {\n        buttonEl.classList.remove('flash-error');\n        setTimeout(() => {\n          buttonEl.classList.remove('transition-bg');\n        }, 200);\n      }, 200);\n    }\n  }\n\n  _toggleSpellSlot(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const isInput = findInPath('.checkbox-wrap', e);\n    const isWarlock = !!findInPath('[warlock-spell]', e);\n    const currentSlots = isWarlock ? e.model.item.currentWarlockSlots : e.model.item.currentSlots;\n    const maxSlots = isWarlock ? e.model.item.warlockSpellSlots : e.model.item.spellSlots;\n    const level = e.model.item.level;\n\n    if (isInput) {\n      const isChecked = isInput.children[0].checked;\n      if (!isChecked && currentSlots < maxSlots) {\n        if (isWarlock) {\n          e.model.item.currentWarlockSlots = currentSlots + 1\n        } else {\n          e.model.item.currentSlots = currentSlots + 1;\n        }\n  \n      } else if (currentSlots > 0) {\n        if (isWarlock) {\n          e.model.item.currentWarlockSlots = currentSlots - 1;\n        } else {\n          e.model.item.currentSlots = currentSlots - 1;\n        }\n      }\n    } else {\n      if (currentSlots < maxSlots) {\n        if (isWarlock) {\n          e.model.item.currentWarlockSlots = currentSlots + 1;\n        } else {\n          e.model.item.currentSlots = currentSlots + 1;\n        }\n\n      } else if (currentSlots > 0) {\n        if (isWarlock) {\n          e.model.item.currentWarlockSlots = currentSlots - 1;\n        } else {\n          e.model.item.currentSlots = currentSlots - 1;\n        }\n      }\n    }\n    \n    if (isWarlock) {\n      this._setSpellSlotsChecked(e.model.item.currentWarlockSlots, findInPath('.slot-checkboxes', e));\n      setSpellSlots(level, e.model.item.currentWarlockSlots, undefined, true);\n    } else {\n      this._setSpellSlotsChecked(e.model.item.currentSlots, findInPath('.slot-checkboxes', e));\n      setSpellSlots(level, e.model.item.currentSlots);\n    }\n  }\n\n  _setSpellSlotsChecked(count, el) {\n    const checkboxes = el.querySelectorAll('vaadin-checkbox');\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (i < count) {\n        checkboxes[i].checked = true;\n      } else {\n        checkboxes[i].checked = false\n      }\n    }\n  }\n\n  _isPreparedClass(spellsKnown, item, isEditMode) {\n    const className = item.parentClass;\n    const spellName = item.name;\n    const isCantrip = item.isCantrip;\n    const isSubclassSpell = item.isSubclassSpell;\n    if (isSubclassSpell) {\n      return isEditMode ? 'spell-button always-prepared edit-mode' : 'spell-button always-prepared';\n    }\n    let isPrepared = isCantrip ? this._isPreparedCantrip(spellsKnown, className, spellName) : this._isPreparedSpell(spellsKnown, className, spellName, isSubclassSpell);\n    if (isPrepared) {\n      return isEditMode ? 'spell-prepared spell-button edit-mode' : 'spell-prepared spell-button';\n    }\n    return isEditMode ? 'spell-button edit-mode' : 'spell-button';\n  }\n\n  _isPreparedSpell(spellsKnown, className, spellName, isSubclassSpell){\n    return isSubclassSpell || spellsKnown[className] && spellsKnown[className].current && spellsKnown[className].current.length && spellsKnown[className].current.indexOf(spellName) > -1;\n  }\n\n  _isPreparedCantrip(spellsKnown, className, spellName){\n    return spellsKnown[className] && spellsKnown[className].currentCantrips && spellsKnown[className].currentCantrips.length && spellsKnown[className].currentCantrips.indexOf(spellName) > -1;\n  }\n\n  _isPreparedText(spellsKnown, item) {\n    const className = item.parentClass;\n    const spellName = item.name;\n    const isCantrip = item.isCantrip;\n    const isSubclassSpell = item.isSubclassSpell;\n    const prepareType = spellsKnown[className].type;\n    if (isSubclassSpell) {\n      return prepareType === 'known' ? 'Always' : 'Always';\n    }\n    let isPrepared = isCantrip ? this._isPreparedCantrip(spellsKnown, className, spellName) : this._isPreparedSpell(spellsKnown, className, spellName, isSubclassSpell);\n    \n    if (isPrepared) {\n      return prepareType === 'known' ? 'Learned' : 'Prepared';\n    } else {\n      return prepareType === 'known' ? 'Learn' : 'Prepare';\n    }\n  }\n\n  _countToArray(count) {\n    const data = [];\n    for (var i = 0; i < count; i++) {\n      data.push(null);\n    }\n    return data;\n  }\n\n  _toLevel(level) {\n    if (level === 0) {\n      return Parser.spLevelToFull(level) + 's';\n    } else {\n      return Parser.spLevelToFull(level) + ' Level';\n    }\n  }\n  \n  _currentSpellsKnownCount(className, spellsKnown) {\n    if (spellsKnown && className && spellsKnown[className] && spellsKnown[className].current) {\n      return spellsKnown[className].current.length;\n    }\n    return 0;\n  }\n\n  _maxSpellsKnownCount(className, spellsKnown) {\n    if (spellsKnown && className && spellsKnown[className]) {\n      return spellsKnown[className].max;\n    }\n    return 0;\n  }\n  \n  _currentCantripsKnownCount(className, spellsKnown) {\n    if (spellsKnown && className && spellsKnown[className] && spellsKnown[className].current) {\n      return spellsKnown[className].currentCantrips.length;\n    }\n    return 0;\n  }\n\n  _maxCantripsKnownCount(className, spellsKnown) {\n    if (spellsKnown && className && spellsKnown[className]) {\n      return spellsKnown[className].maxCantrips;\n    }\n    return 0;\n  }\n\n  _spellsKnownString(spellPrepType) {\n    return 'Spells ' + util_capitalize(spellPrepType) + ':'\n  }\n\n  _isRitualSpell(spellParent) {\n    const spell = spellParent.children[0];\n    return spell && spell.meta && spell.meta.ritual;\n  }\n\n  _isConcentrationSpell(spellParent) {\n    const spell = spellParent.children[0];\n    return spell.duration.some((d) => d.concentration);\n  }\n\n  _spellLevel(item) {\n    if (item && item.children && item.children.length && item.children[0].level) {\n      return Parser.spLevelToFull(item.children[0].level);\n    }\n  }\n\n  _isSpellSlotChecked(currentSlots, index) {\n    return index < currentSlots;\n  }\n\n  _spellClassText(parentClass) {\n    return util_capitalizeAll(parentClass);\n  }\n\n  _isEmpty(a) {\n    return !a || !a.length;\n  }\n\n  _hideCheckboxes(spellSlots) {\n    return !spellSlots || spellSlots > 0 && this.isEditMode;\n  }\n\n  _equal(a, b) {\n    return a === b;\n  }\n\n  _hasTwo(a) {\n    return a && a.length && a.length > 1;\n  }\n\n  static get template() {\n    return html`\n      <style include='my-styles'>\n        :host {}\n        :host {\n          display: block;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        h2 {\n          font-size: 24px;\n          font-weight: bold;\n          margin: 34px 14px 24px;\n        }\n\n        vaadin-grid-tree-toggle { \n          width: 100%;\n          cursor: pointer;\n        }\n\n        .class-wrap {\n          width: 100%;\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          align-items: center;\n          padding-top: 4px;\n          /* padding-top: 34px;\n          padding-bottom: 8px; */\n          -youbkit-touch-callout: none;\n          -youbkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n        .class-wrap h3 {\n          font-size: 22px;\n          font-weight: bold;\n        }\n\n        .spells-prepared-text {\n          margin-right: 6px;\n          margin-left: auto;\n        }\n        .prepared-count {\n          color: var(--mdc-theme-secondary);\n          font-weight: bold;\n        }\n        .cantrips-prepared {\n          margin-right: 0;\n        }\n\n        .level-outer-wrap {\n          border-bottom: 1px solid var(--_lumo-grid-secondary-border-color);\n          padding-bottom: 8px;\n          display: flex;\n          height: 32px;\n        }\n\n        .level-wrap {\n          width: 100%;\n          -youbkit-touch-callout: none;\n          -youbkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        .slot-checkboxes {\n          cursor: pointer;\n          display: flex;\n          padding: 4px;\n        }\n\n        .slot-checkboxes span {\n          -youbkit-touch-callout: none;\n          -youbkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        vaadin-checkbox {\n          pointer-events: none;\n        }\n\n        .spell-wrap {\n          width: calc(100% - 100px);\n          margin-left: 24px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        .spell-inner-wrap {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          -youbkit-touch-callout: none;\n          -youbkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        .spell-level {\n          color: var(--mdc-theme-text-disabled-on-background);\n          margin-left: 8px;\n          margin-right: 4px;\n          font-size: 12px;\n        }\n\n        .rit-ind,\n        .conc-ind {\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          width: 13px;\n          height: 13px;\n          border-radius: 50%;\n          color: var(--mdc-theme-on-secondary);\n          background-color: var(--mdc-theme-secondary);\n          font-size: 10px;\n          position: relative;\n          bottom: 1px;\n          margin-left: 4px;\n        }\n\n        .rit-ind::before {\n          content: 'R';\n        }\n\n        .conc-ind::before {\n          content: 'C';\n        }\n\n        .spell-def-wrap {\n          font-size: 14px;\n          width: calc(100% - 20px);\n          margin: 0 auto;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          white-space: pre-line;\n        }\n\n        .spell-def-wrap .margin-bottom_med {\n          margin-bottom: 0px !important;\n        }\n\n        .spell-def-wrap .text {\n          margin-top: 16px;\n        }\n\n        .spell-def-wrap p {\n          margin-bottom: 16px;\n        }\n\n        .stats-wrapper {\n          margin: 0 14px;\n        }\n\n        .spell-button,\n        .class-icon {\n          background-color: var(--mdc-theme-text-disabled-on-background);\n          color: var(--mdc-theme-on-secondary);\n          border: none;\n          border-radius: 4px;\n          outline: none;\n          width: 60px;\n          display: inline-block;\n          justify-content: center;\n          white-space: normal;\n          font-size: 12px;\n          padding: 1px 4px;\n        }\n        .spell-button.edit-mode {\n          cursor: pointer;\n        }\n        .spell-button.always-prepared {\n          background-color: var(--mdc-theme-secondary-lighter);\n          cursor: not-allowed;\n        }\n        .spell-button.spell-prepared {\n          background-color: var(--mdc-theme-secondary);\n        }\n        .spell-button.flash-error {\n          background-color: var(--mdc-theme-error);\n          transition: background-color 0.2s ease-out;\n        }\n        .spell-button.transition-bg {\n          transition: background-color 0.2s ease-in;\n        }\n        .class-icon {\n          width: auto;\n        }\n\n        .mods {\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-around;\n          margin: 16px 0;\n        }\n        .mod-row {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        .mod-val:not(:first-child)::before {\n          content: '|';\n          margin-right: 4px;\n        }\n        .mod-label {\n          font-weight: bold;\n        }\n      </style>\n\n      <div class=\"mods\">\n        <div class=\"mod-row\">\n          <span>\n            <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n              <span class=\"mod-val\">+[[item.mod]]</span>\n            </template>\n          </span>\n          <span class=\"mod-label\">Spell Mod</span>\n        </div>\n        <div class=\"mod-row\">\n          <span>\n            <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n              <span class=\"mod-val\">+[[item.spellAttackBonus]]</span>\n            </template>\n          </span>\n          <span class=\"mod-label\">Spell Bonus</span>\n        </div>\n        <div class=\"mod-row\">\n          <span>\n            <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n              <span class=\"mod-val\">[[item.dc]]</span>\n            </template>\n          </span>\n          <span class=\"mod-label\">Spell DC</span>\n        </div>\n      </div>\n\n      <vaadin-grid id=\"grid\" theme=\"no-border no-row-borders\" expanded-items=\"[[expandedItems]]\" height-by-rows$=\"[[heightByRows]]\">\n        <vaadin-grid-column flex-grow=\"1\">\n          <template>\n              <template is=\"dom-if\" if=\"[[_equal(item.id, 'class')]]\">\n                <div class=\"class-wrap\">\n                  <h3>[[item.className]]</h3>\n                  <div class='spells-prepared-text'>\n                    <span>[[_spellsKnownString(item.spellPrepType)]]</span>\n                    <span class='prepared-count'>[[_currentSpellsKnownCount(item.className, spellsKnown)]] / [[_maxSpellsKnownCount(item.className, spellsKnown)]]</span>\n                  </div>\n                </div>\n              </template>\n  \n              <template is=\"dom-if\" if=\"[[_equal(item.id, 'level')]]\">\n                <div class=\"level-outer-wrap\">\n                  <vaadin-grid-tree-toggle leaf=\"[[!item.hasChildren]]\" expanded=\"{{expanded}}\">\n                    <h4 class=\"level-wrap\">[[_toLevel(item.level)]]</h4>\n                    <div class=\"cantrips-prepared spells-prepared-text\" hidden$=\"[[!_equal(item.level, 0)]]\">\n                      <span>Cantrips Known:</span>\n                      <span class='prepared-count'>[[_currentCantripsKnownCount(item.parentClass, spellsKnown)]] / [[_maxCantripsKnownCount(item.parentClass, spellsKnown)]]</span>\n                    </div>\n                  </vaadin-grid-tree-toggle>\n\n                  <div class=\"slot-checkboxes\" hidden$=\"[[_hideCheckboxes(item.warlockSpellSlots, isEditMode)]]\" on-click=\"_toggleSpellSlot\" warlock-spell>\n                    <template is='dom-repeat' items='[[_countToArray(item.warlockSpellSlots)]]' as=\"thing\">\n                      <span class=\"checkbox-wrap\"><vaadin-checkbox checked=\"[[_isSpellSlotChecked(item.currentWarlockSlots, index)]]\"></vaadin-checkbox></span>\n                    </template>\n                    <span>Pact</span>\n                  </div>\n\n                  <div class=\"slot-checkboxes\" hidden$=\"[[_hideCheckboxes(item.spellSlots, isEditMode)]]\" on-click=\"_toggleSpellSlot\">\n                    <template is='dom-repeat' items='[[_countToArray(item.spellSlots)]]' as=\"thing\">\n                      <span class=\"checkbox-wrap\"><vaadin-checkbox checked=\"[[_isSpellSlotChecked(item.currentSlots, index)]]\"></vaadin-checkbox></span>\n                    </template>\n                    <span>Slots</span>\n                  </div>\n                </div>\n              </template>\n\n              <template is=\"dom-if\" if=\"[[_equal(item.id, 'spell')]]\">\n                <div class=\"spell-outer-wrap\">\n                  <vaadin-grid-tree-toggle leaf=\"[[!item.hasChildren]]\" expanded=\"{{expanded}}\" class=\"spell-wrap\">\n                    <span class=\"spell-inner-wrap\">[[item.name]]<span class=\"spell-level\" hidden>[[_spellLevel(item)]]</span><span class=\"rit-ind\" title=\"Ritual\" hidden$=\"[[!_isRitualSpell(item)]]\"></span><span class=\"conc-ind\" title=\"Concentration\" hidden$=\"[[!_isConcentrationSpell(item)]]\"></span></span>\n                  </vaadin-grid-tree-toggle>\n                  <button class$=\"[[_isPreparedClass(spellsKnown, item, isEditMode)]]\" hidden$=\"[[!isEditMode]]\" on-click=\"_toggleSpellPrepared\">[[_isPreparedText(spellsKnown, item)]]</button>\n                  <span class=\"class-icon\" hidden$=\"[[isEditMode]]\">[[_spellClassText(item.parentClass)]]</span>\n                </div>\n              </template>\n\n              <template is=\"dom-if\" if=\"[[_equal(item.id, 'spelldef')]]\">\n                <div class=\"spell-def-wrap\">\n                  <div class= \"stats-wrapper\" inner-h-t-m-l=\"[[_renderSpell(item)]]\"></div>\n                </div>\n              </template>\n          </template>\n        </vaadin-grid-column>\n      </vaadin-grid>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-spells\",DndCharacterBuilderSpells);\n"],"sourceRoot":""}