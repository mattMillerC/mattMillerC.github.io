{"version":3,"sources":["webpack:///./util/editMode.js","webpack:///./components/dnd-switch.js","webpack:///./components/views/character lazy ^\\.\\/dnd\\-character\\-builder\\-.*$ namespace object","webpack:///./components/dnd-tabs.js","webpack:///./components/views/dnd-character-builder-view.js"],"names":["editModeChannelEl","document","createElement","isEditModeBool","getEditModeChannel","dispatchEditModeChange","isEditMode","dispatchEvent","CustomEvent","bubbles","composed","detail","addEventListener","e","DndSwitch","initialValue","type","Boolean","value","observer","checked","reflectToAttribute","label","String","secondaryLabel","this","switchEl","super","ready","shadowRoot","querySelector","connectedCallback","switchEventHandler","disconnectedCallback","removeEventListener","customElements","define","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","all","slice","keys","Object","module","exports","tabs","Array","initialSelectedIndex","Number","length","setTimeout","tabBar","$","handleTabChange","index","activateTab","loading","characterName","initialSelectedTab","indexForTabs","icon","viewId","tabChangeHandler","newTabIndex","newViewId","undefined","updateView","loadingHandler","setStateFromCharacter","characterChangeHandler","character","fixedTabsScrollHandler","tabWrap","getBoundingClientRect","top","classList","add","remove","window","nameFieldFocusHandler","name","inputElement","select","isLoaded","tabTarget","newIndex","el","requestAnimationFrame","scrollHeight","scrollY","appendChild","scrollTo","classLevel","background","race","editBtn","toggle","contains","innerHTML"],"mappings":"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","file":"11.bundle.js","sourcesContent":["const editModeChannelEl = document.createElement('div');\nlet isEditModeBool = false;\n\neditModeChannelEl.addEventListener('editModeChange', (e) => {\n  if (e.detail) {\n    isEditModeBool = !!e.detail.isEditMode;\n  }\n});\n\nexport function getEditModeChannel() {\n  return editModeChannelEl;\n}\n\nexport function dispatchEditModeChange(isEditMode) {\n  editModeChannelEl.dispatchEvent(new CustomEvent('editModeChange', {bubbles: true, composed: true, detail: { isEditMode }}));\n}\n\nexport function isEditMode() {\n  return isEditModeBool;\n}\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { MDCSwitch } from \"@material/switch\";\n\nclass DndSwitch extends PolymerElement {\n  \n  static get properties() {\n    return {\n      initialValue: {\n        type: Boolean,\n        value: false,\n        observer: 'initValueChange'\n      },\n      checked: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      label: {\n        type: String,\n        value: ''\n      },\n      secondaryLabel: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  initValueChange() {\n    if (this.switchEl) {\n      this.switchEl.checked = this.initialValue;\n      this.checked = this.initialValue;\n    }\n  }\n\n  ready() {\n    super.ready(); \n\n    this.switchEl = new MDCSwitch(this.shadowRoot.querySelector(\".mdc-switch\"));\n\n    this.switchEl.checked = this.initialValue;\n    this.checked = this.initialValue;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.switchEventHandler = () => {\n      this.checked = this.switchEl.checked;\n      this.dispatchEvent(new CustomEvent(\"switch-change\", {\n        detail: {\n          checked: this.switchEl.checked\n        },\n        bubbles: true,\n        composed: true\n      }));\n    };\n    this.shadowRoot.querySelector(\".mdc-switch__native-control\").addEventListener(\"change\", this.switchEventHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.shadowRoot.querySelector(\".mdc-switch__native-control\").removeEventListener(\"change\", this.switchEventHandler);\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        :host {\n          display: inline-block;\n        }\n        :host([checked]) label.secondary {\n          color: var(--mdc-theme-primary);\n        }\n        :host([checked]) label:not(.secondary) {\n          color: var(--lumo-secondary-text-color);\n        }\n        label {\n          color: var(--mdc-theme-primary);\n          font-weight: 500;\n          font-size: var(--lumo-font-size-s);\n          margin-right: 16px;\n          transition: color 0.2s;\n        }\n        label.secondary {\n          color: var(--lumo-secondary-text-color);\n          margin-right: 0;\n          margin-left: 16px;\n        }\n      </style>\n      \n      <label for=\"swich\">[[label]]</label>\n      <div class=\"mdc-switch mdc-list-item__meta\">\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__thumb-underlay\">\n          <div class=\"mdc-switch__thumb\">\n            <input type=\"checkbox\" id=\"swich\" class=\"mdc-switch__native-control\" role=\"switch\" />\n          </div>\n        </div>\n      </div>\n      <label class=\"secondary\">[[secondaryLabel]]</label>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-switch\", DndSwitch);","var map = {\n\t\"./dnd-character-builder-attributes\": [\n\t\t120,\n\t\t7\n\t],\n\t\"./dnd-character-builder-attributes.js\": [\n\t\t120,\n\t\t7\n\t],\n\t\"./dnd-character-builder-background-race\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./dnd-character-builder-background-race.js\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./dnd-character-builder-class\": [\n\t\t122,\n\t\t3,\n\t\t4,\n\t\t5\n\t],\n\t\"./dnd-character-builder-class.js\": [\n\t\t122,\n\t\t3,\n\t\t4,\n\t\t5\n\t],\n\t\"./dnd-character-builder-equipment\": [\n\t\t118,\n\t\t8\n\t],\n\t\"./dnd-character-builder-equipment.js\": [\n\t\t118,\n\t\t8\n\t],\n\t\"./dnd-character-builder-spells\": [\n\t\t121,\n\t\t3,\n\t\t6\n\t],\n\t\"./dnd-character-builder-spells.js\": [\n\t\t121,\n\t\t3,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 137;\nmodule.exports = webpackAsyncContext;","import {PolymerElement, html} from '@polymer/polymer';\nimport {MDCTabBar} from '@material/tab-bar';\nimport {} from '@polymer/polymer/lib/elements/dom-repeat.js';\nimport {} from '@polymer/polymer/lib/elements/dom-if.js';\n\nclass DndTabs extends PolymerElement {\n  static get properties() {\n    return {\n      tabs: {\n        type: Array,\n        observer: 'tabsChanged'\n      },\n      initialSelectedIndex: {\n        type: Number,\n        value: 0\n      }\n    }\n  }\n\n  tabsChanged() {\n    if (this.tabs.length) {\n      // Allow tabs to be rendered\n      setTimeout(() => {\n        this.tabBar = new MDCTabBar(this.$.tabs);\n        this.$.tabs.addEventListener(\"MDCTabBar:activated\", (e) => {\n          this.handleTabChange(e.detail.index);\n        });\n        this.tabBar.activateTab(this.initialSelectedIndex);\n      }, 0);\n    }\n  }\n\n  handleTabChange(index) {\n    this.dispatchEvent(new CustomEvent(\"tabChange\",  {\n      bubbles: true,\n      composed: true,\n      detail: {\n        index\n      }\n    }));\n  }\n  \n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-bar {\n          max-width: 100vw;\n        }\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n      </style>\n\n      <div class=\"mdc-tab-bar\" role=\"tablist\" id=\"tabs\">\n        <div class=\"mdc-tab-scroller\">\n          <div class=\"mdc-tab-scroller__scroll-area\">\n            <div class=\"mdc-tab-scroller__scroll-content\">\n              \n              <template is=\"dom-repeat\" items=\"[[tabs]]\">\n                \n                <button class=\"mdc-tab\" role=\"tab\" aria-selected=\"false\" tabindex=\"[[index]]\">\n                  <span class=\"mdc-tab__content\">\n                      <span class=\"mdc-tab__icon material-icons\" aria-hidden=\"true\">[[item.icon]]</span>\n                    <span class=\"mdc-tab__text-label\">[[item.label]]</span>\n                  </span>\n                  <span class=\"mdc-tab-indicator\">\n                    <span class=\"mdc-tab-indicator__content mdc-tab-indicator__content--underline\"></span>\n                  </span>\n                  <span class=\"mdc-tab__ripple\"></span>\n                </button>\n\n              </template>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n  \n}\ncustomElements.define('dnd-tabs', DndTabs);","import {PolymerElement, html} from '@polymer/polymer';\nimport \"../styles/material-styles.js\";\nimport \"../styles/my-styles.js\";\nimport \"../dnd-tabs.js\";\nimport \"../dnd-character-select\";\nimport \"../dnd-spinner\";\nimport \"../dnd-switch\";\nimport { jqEmpty } from \"../../js/utils.js\";\nimport { getCharacterChannel, getSelectedCharacter, updateName, getClassString, getFeatureString, addCharacter, removeSelectedCharacter } from '../../util/charBuilder.js';\nimport registerSwipe from '../../util/swipe.js';\nimport { dispatchEditModeChange } from '../../util/editMode.js';\n\nclass DndCharacterBuilderView extends PolymerElement {\n  static get properties() {\n    return {\n      loading: {\n        type: Boolean,\n        value: true\n      },\n      characterName: {\n        type: String,\n        value: ''\n      },\n      initialSelectedTab: {\n        type: Number,\n        value: 0\n      },\n      indexForTabs: {\n        type: Number,\n        value: 0\n      }\n    }\n  }\n\n  static get observers() {\n    return ['_setName(characterName)']\n  }\n\n  _setName(characterName) {\n    if (characterName) {\n      updateName(characterName);\n    }\n  }\n\n  constructor() {\n    super();\n\n    this.tabs = [\n      { label: \"Class Levels\", icon: \"class\", viewId: \"class\" },\n      { label: \"Race & Background\", icon: \"face\", viewId: \"background-race\" },\n      { label: \"Attributes & Proficiencies\", icon: \"favorite\", viewId: \"attributes\" },\n      { label: \"Spells\", icon: \"flash_on\", viewId: \"spells\" },\n      { label: \"Equipment\", icon: \"local_grocery_store\", viewId: \"equipment\" },\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.tabChangeHandler = (e) => {\n      let newTabIndex = e.detail.index,\n        newViewId = this.tabs[newTabIndex].viewId;\n\n      this.indexForTabs = newTabIndex;\n      if (newViewId !== undefined) {\n        this.loading = true;\n        import(`./character/dnd-character-builder-${newViewId}`)\n          .then(() => {\n            this.updateView(document.createElement(`dnd-character-builder-${newViewId}`));\n          });\n      }\n    };\n    this.addEventListener(\"tabChange\", this.tabChangeHandler);\n\n    this.loadingHandler = () => {\n      setTimeout(() => {\n        this.loading = false;\n      }, 0);\n    };\n    this.addEventListener(\"loadingChange\", this.loadingHandler);\n\n    this.setStateFromCharacter(getSelectedCharacter());\n    this.characterChangeHandler = (e) => {\n      this.setStateFromCharacter(e.detail.character);\n    };\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.fixedTabsScrollHandler = () => {\n      const heightDiff = this.$.tabWrap.getBoundingClientRect().top;\n\n      if (heightDiff <= 104) {\n        this.$.tabs.classList.add('fixed');\n      } else {\n        this.$.tabs.classList.remove('fixed');\n      }\n    };\n    window.addEventListener('scroll', this.fixedTabsScrollHandler);\n    this.$.tabs.classList.remove('fixed');\n\n    this.nameFieldFocusHandler = (e) => {\n      if (this.$.name.value === \"New Character\") {\n        this.$.name.inputElement.select();\n      }\n    }\n    this.$.name.addEventListener(\"focus\", this.nameFieldFocusHandler)\n\n    if (!this.isLoaded) {\n      this.isLoaded = true;\n      registerSwipe(this.$.tabTarget, \"right\", () => {\n        if (this.indexForTabs > 0) {\n          const newIndex = this.indexForTabs - 1;\n          this.$.tabs.tabBar.activateTab(newIndex);\n        }\n      });\n      registerSwipe(this.$.tabTarget, \"left\", () => {\n        if (this.indexForTabs < this.tabs.length - 1) {\n          const newIndex = this.indexForTabs + 1;\n          this.$.tabs.tabBar.activateTab(newIndex);\n        }\n      });\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.removeEventListener(\"tabChange\", this.tabChangeHandler);\n    this.removeEventListener(\"loadingChange\", this.loadingHandler);\n    window.removeEventListener('scroll', this.fixedTabsScrollHandler);\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    this.$.name.removeEventListener(\"focus\", this.nameFieldFocusHandler)\n  }\n\n  updateView(el) {\n    window.requestAnimationFrame(() => {\n      const scrollHeight = window.scrollY;\n      jqEmpty(this.$.tabTarget);\n      this.$.tabTarget.appendChild(el);\n      this.$.tabs.classList.remove('fixed');\n      window.scrollTo(0, scrollHeight);\n    });\n  }\n\n  setStateFromCharacter(character) {\n    this.characterName = character.name;\n    this.classLevel = getClassString(character);\n    this.background = getFeatureString(\"backgrounds\", character, true);\n    this.race = getFeatureString(\"races\", character, true);\n  }\n\n  newCharacter() {\n    addCharacter();\n  }\n\n  removeCharacter() {\n    removeSelectedCharacter();\n  }\n\n  toggleEditMode() {\n    this.$.editBtn.classList.toggle('edit-mode');\n    const isEditMode = this.$.editBtn.classList.contains('edit-mode');\n    dispatchEditModeChange(isEditMode);\n    this.$.editBtn.innerHTML = isEditMode ? 'check' : 'edit';\n  }\n  \n  static get template() {\n    return html`\n      <style include=\"material-styles\"></style>\n      <style>\n        :host {\n          display: block;\n        }\n        .head-wrap {\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 16px;\n        }\n\n        .char-change {\n          display: flex;\n        }\n        .char-change vaadin-text-field {\n          font-size: 24px;\n          margin: 0 8px 12px 0;\n          max-width: calc(100% - 140px);\n        }\n        .char-change .mdc-icon-button {\n          margin-left: 8px;\n        }\n        .char-detail-edit {\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: space-between;\n        }\n        .char-detail {\n          font-size: 20px;\n          line-height: 1.5;\n          margin-left: 8px;\n        }\n        #editBtn {\n          background: var(--mdc-theme-surface);\n          color: var(--mdc-theme-on-surface);\n          border-radius: 8px;\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n        }\n        .tab-wrap {\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n        }\n        @media(max-width: 420px) {\n          #tabs.fixed {\n            position: fixed;\n            top: 56px;\n            z-index: 2;\n            border-bottom: 1px solid var(--mdc-theme-text-divider-on-background);\n          }\n          #tabs.fixed + .tab-wrap {\n            margin-top: 64px;\n          }\n          .character-builder--tabs-wrapper {\n            margin: 0 -16px -90px;\n          }\n          .tab-wrap {\n            min-height: calc(100vh - 270px);\n          }\n        }\n      </style>\n\n      <div class=\"head-wrap\">\n        <div class=\"char-change\">\n          <vaadin-text-field id=\"name\" class=\"name\" value=\"{{characterName}}\"></vaadin-text-field>\n          <dnd-character-select mini></dnd-character-select>\n          <button class=\"mdc-icon-button material-icons\" on-click=\"newCharacter\">person_add</button>\n          <button class=\"mdc-icon-button material-icons\" on-click=\"removeCharacter\">delete</button>\n        </div>\n\n        <div class=\"char-detail-edit\">\n          <div class=\"char-detail\">\n            <div class=\"class\">[[classLevel]]</div>\n            <div class=\"race-background\">[[race]] - [[background]]</div>\n          </div>\n          <button class=\"mdc-icon-button material-icons\" id=\"editBtn\" on-click=\"toggleEditMode\">edit</button>\n        </div>\n      </div>\n\n      <div class=\"character-builder--tabs-wrapper\">\n        <dnd-tabs id=\"tabs\" tabs=\"[[tabs]]\" initial-selected-index=\"[[initialSelectedTab]]\"></dnd-tabs>\n\n        <div class=\"tab-wrap\" id=\"tabWrap\">\n          <div id=\"tabTarget\" hidden$=\"[[loading]]\"></div>\n          <dnd-spinner loading$=\"[[loading]]\"></dnd-spinner>\n        </div>\n      </div>\n    `;\n  }\n}\ncustomElements.define('dnd-character-builder-view', DndCharacterBuilderView);\n"],"sourceRoot":""}