{"version":3,"sources":["webpack:///./util/entryrender.js","webpack:///./util/data.js","webpack:///./util/renderTable.js","webpack:///./util/ability.js","webpack:///./js/classes.js","webpack:///./util/renderList.js"],"names":["EntryRenderer","this","wrapperTag","baseUrl","setWrapperTag","tag","setBaseUrl","url","recursiveEntryRender","entry","textStack","depth","prefix","suffix","forcePrefixSuffix","type","renderPrefix","undefined","handleEntriesOptionsInvocationPatron","self","entries","sort","a","b","name","handleOptions","items","push","style","i","length","source","caption","colLabels","getTableThClassText","rows","j","makeTableTdClassText","colStyles","rowStyles","renderTable","handleInvocation","handlePatron","attributes","renderSuffix","value","getEntryDice","href","path","hash","subhashes","subHash","key","text","renderLink","tagSplit","char","char2","tagDepth","inTag","out","curStr","charAt","splitByTags","s","string","substr","indexOf","actionToExplanation","skillToExplanation","displayText","others","split","fauxEntry","classMatch","RE_INLINE_CLASS","exec","trim","substring","renderString","incDepth","inlineTitle","nextDepth","styleString","styleClasses","HEAD_2","HEAD_NEG_1","HEAD_0","HEAD_1","subclass","join","getStyleString","dataString","titleString","sourceJsonToFull","DATA_NONE","getDataString","preReqText","prerequisite","headerSpan","toAdd","number","faces","String","toRoll","roll","droll","rollable","cache","async","loadModel","modelId","hasOwnProperty","promises","loadJSON","Promise","all","then","data","itemData","basicItemData","variantData","propertyList","typeList","itemList","basicItemList","basicitems","itemPropertyList","itemProperty","itemTypeList","itemType","abbreviation","JSON","parse","stringify","toLowerCase","variantList","concat","tier","inherits","rarity","page","requires","armor","curBasicItem","category","curBasicItemName","curVariant","curRequires","hasRequired","requiredProperty","excludes","curExcludes","excludedProperty","curInherits","tmpBasicItem","inheritedProperty","namePrefix","nameSuffix","k","tmpText","dmgType","replace","dmgTypeToFull","genericBonus","unshift","pushObject","targetObject","objectToBePushed","copiedObject","item","noDisplay","property","properties","resist","stealth","strength","scfType","window","mergeItemsData","loadAllItemData","monsterData","legendaryGroupData","legendaryGroupList","legendaryGroup","lairActions","regionalEffects","monster","thisGroup","lairaction","regionaleffect","parseLegendaryMonsters","loadAllMonsterData","modelData","index","srcURL","Object","values","allData","srcData","console","error","loadModelFromIndex","Array","isArray","loadModelFromSingleJSON","fetch","response","ok","Error","json","rootEl","columns","filters","curItem","columnsHtmlString","col","id","asiFilter","metric","ability","_fAbility","cssClass","sourceFilter","addIfAbsent","sourceJsonToAbv","prereqText","prof","skillProficiencies","typeFilter","header","displayFn","orderFilter","order","sizeFilter","sizeAbvToFull","size","levelFilter","level","spLevelToFull","timeFilter","_fTimeType","time","map","t","unit","spTimeListToFull","schoolFilter","spSchoolAbvToFull","school","rangeFilter","_fRangeType","range","spRangeToFull","classFilter","_fClasses","classes","fromClassList","c","forEach","spClassesToFull","subclassFilter","_fSubclasses","fromSubclass","sc","metaFilter","_fMeta","searchStack","e1","_pTypes","monTypeToFullObj","tags","asText","uppercaseFirst","crFilter","tagFilter","miscFilter","_fMisc","legendary","cr","adjCR","deselFn","deselectFilter","wondrous","technology","age","weaponCategory","itemTypeToAbv","typeText","_fTypes","rarityFilter","tierFilter","attunementFilter","categoryFilter","tierTags","attunement","reqAttune","startsWith","tt","_fTier","_fAttunement","linkData","tempString","rowEl","querySelector","append","list","valueNames","listClass","keys","filter","filterBox","render","handleFilterChange","f","getValues","elm","getAttribute","ft","toDisplay","addEventListener","EVNT_VALCHANGE","deselectProperty","deselectValue","val","selectionHash","resolveHash","deselNoHash","parts","parse_abilityLong","abilityObj","abbArr","abilityItem","mod","parseInt","attAbvToFull","choose","options","from","amount","abbChoices","option","abbChoicesText","parse_abilityShort","count","countStr","parse_abilityCollection","CLSS_ACTIVE","renderer","renderStr","renderStack","onDataLoad","subclasses","classTableDefault","innerHTML","container","appendChild","listWrapper","htmlString","svg","itemElements","e","tar","target","closest","renderList","onClassChange","curClass","classList","remove","hd","add","proficiency","p","Parser","sProfs","startingProficiencies","weapons","w","tools","skills","numString","skillOptions","result","skill","numberToString","getSkillProfString","sEquip","startingEquipment","fromBackground","additionalFromBackground","defList","default","goldAlt","goldAlternative","tData","classTableGroups","groupHeaders","colHeaders","levelTrs","spellsFlag","tGroup","hasTitle","title","subclassData","lbl","tr","stack","combinedLabels","classFeatures","mobileClone","cloneNode","setAttribute","colHeaderEls","querySelectorAll","colHeaderEl","textContent","subclassIndex","tblLvlFeatures","featureNames","lvlFeatureList","feature","featureId","featureLinkPart","featureLinkClasses","featureLink","preventDefault","getElementById","scrollIntoView","offset","scrollBy","gainSubclassFeature","subClass","l","subclassFeatures","subFeature","m","childEntry","shortName","toggleUAFeatures","subclassPillWrapper","allSourcesToggle","makeGenericTogglePill","subClasses","nonStandardSource","pillText","pill","handleSubclassClick","contains","display","toggle","HASH_ALL_SOURCES","click","pillActiveClass","pillId","hashKey","defaultActive","isUA","active","isPillActive","outStack","hashPart","newHash","handleToggleFeaturesClicks","subclassName","subclassSource","routeSelection","encodedSubClass","subclassLink","includes","subClassStack","hasSubclassHash","nonStandardPills","nonStandardPill","onSubChange","sub","curHash","hideClassFeatures","showAllSources","slice","hideOtherSources","updateClassTableLinks","$toShow","$toHide","$subClassSpanList","classSpan","$this","thisSc","shown","otherSrcSubFeats","shownInTable","v","selectedSCFeatures","selectedSCFeature","otherSrcSubFeat","asInTable","handleTableGroups","subClassEls","subClassEl","cfToggle","toToggleCf","el","srcToggle","toToggleSrc","tableDataTag","show","listEls","scs","hashParts","outParts","part","els","prevFeature"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import { isNonstandardSource, encodeForHash, ascSort, utils_makeAttChoose } from \"../js/utils.js\";\r\nimport {\r\n  CLSS_NON_STANDARD_SOURCE,\r\n  HASH_LIST_SEP,\r\n  ATB_DATA_SC,\r\n  ATB_DATA_SRC,\r\n  CLSS_SUBCLASS_FEATURE,\r\n\tSRC_MM,\r\n\tSRC_PHB,\r\n\tSRC_DMG\r\n} from \"../util/consts.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n// ENTRY RENDERING =====================================================================================================\r\n/*\r\n * // EXAMPLE USAGE //\r\n *\r\n * const entryRenderer = new EntryRenderer();\r\n *\r\n * const topLevelEntry = mydata[0];\r\n * // prepare an array to hold the string we collect while recursing\r\n * const textStack = [];\r\n *\r\n * // recurse through the entry tree\r\n * entryRenderer.renderEntries(topLevelEntry, textStack);\r\n *\r\n * // render the final product by joining together all the collected strings\r\n * $(\"#myElement\").html(toDisplay.join(\"\"));\r\n */\r\nfunction EntryRenderer() {\r\n\r\n\tthis.wrapperTag = \"div\";\r\n\tthis.baseUrl = \"\";\r\n\r\n\t/**\r\n\t * Set the tag used to group rendered elements\r\n\t * @param tag to use\r\n\t */\r\n\tthis.setWrapperTag = function (tag) {\r\n\t\tthis.wrapperTag = tag;\r\n\t};\r\n\r\n\t/**\r\n\t * Set the base url for rendered links.\r\n\t * Usage: `renderer.setBaseUrl(\"https://www.cool.site/\")` (note the \"http\" prefix and \"/\" suffix)\r\n\t * @param url to use\r\n\t */\r\n\tthis.setBaseUrl = function(url) {\r\n\t\tthis.baseUrl = url;\r\n\t};\r\n\r\n\t/**\r\n\t * Recursively walk down a tree of \"entry\" JSON items, adding to a stack of strings to be finally rendered to the\r\n\t * page. Note that this function does _not_ actually do the rendering, see the example code above for how to display\r\n\t * the result.\r\n\t *\r\n\t * @param entry An \"entry\" usually defined in JSON. A schema is available in tests/schema\r\n\t * @param textStack A reference to an array, which will hold all our strings as we recurse\r\n\t * @param depth The current recursion depth. Optional; default 0, or -1 for type \"section\" entries\r\n\t * @param prefix The (optional) prefix to be added to the textStack before whatever is added by the current call\r\n\t * @param suffix The (optional) suffix to be added to the textStack after whatever is added by the current call\r\n\t * @param forcePrefixSuffix force the prefix and suffix to be added (useful for the first call from external code)\r\n\t */\r\n\tthis.recursiveEntryRender = function(entry, textStack, depth, prefix, suffix, forcePrefixSuffix) {\r\n\t\tdepth = depth === undefined || depth === null ? entry.type === \"section\" ? -1 : 0 : depth;\r\n\t\tprefix = prefix === undefined || prefix === null ? null : prefix;\r\n\t\tsuffix = suffix === undefined || suffix === null ? null : suffix;\r\n\t\tforcePrefixSuffix = forcePrefixSuffix === undefined || forcePrefixSuffix === null ? false : forcePrefixSuffix;\r\n\r\n\t\tif (forcePrefixSuffix) renderPrefix();\r\n\t\tif (typeof entry === \"object\") {\r\n\t\t\t// the root entry (e.g. \"Rage\" in barbarian \"classFeatures\") is assumed to be of type \"entries\"\r\n\t\t\tconst type = entry.type === undefined || entry.type === \"section\" ? \"entries\" : entry.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\t// TODO add an \"insert box\" type\r\n\r\n\t\t\t\t// recursive\r\n\t\t\t\tcase \"entries\":\r\n\t\t\t\t\thandleEntries(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"options\":\r\n\t\t\t\t\thandleOptions(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"list\":\r\n\t\t\t\t\tif (entry.items) {\r\n\t\t\t\t\t\ttextStack.push(`<ul ${entry.style ? `class=\"${entry.style}\"` : ''}>`);\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.items.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.items[i], textStack, depth + 1, `<li ${isNonstandardSource(entry.items[i].source) ? `class=\"${CLSS_NON_STANDARD_SOURCE}\"` : \"\"}>`, \"</li>\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttextStack.push(\"</ul>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\trenderTable(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"invocation\":\r\n\t\t\t\t\thandleInvocation(this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"patron\":\r\n\t\t\t\t\thandlePatron(this);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// block\r\n\t\t\t\tcase \"abilityDc\":\r\n\t\t\t\t\trenderPrefix();\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} save DC</span> = 8 + your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\trenderSuffix();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"abilityAttackMod\":\r\n\t\t\t\t\tif (prefix !== null) textStack.push(prefix);\r\n\t\t\t\t\ttextStack.push(`<span class='spell-ability'><span>${entry.name} attack modifier</span> = your proficiency bonus + your ${utils_makeAttChoose(entry.attributes)}</span>`);\r\n\t\t\t\t\tif (suffix !== null) textStack.push(suffix);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// inline\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\t\tthis.recursiveEntryRender(entry.entries[i], textStack, depth);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonus\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bonusSpeed\":\r\n\t\t\t\t\ttextStack.push((entry.value < 0 ? \"\" : \"+\") + entry.value + \"ft.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"dice\":\r\n\t\t\t\t\ttextStack.push(EntryRenderer.getEntryDice(entry));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\trenderLink(this, entry);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"item\":\r\n\t\t\t\t\ttextStack.push(`<li><b>${entry.name}: </b>`);\r\n\t\t\t\t\tthis.recursiveEntryRender(entry.entry, textStack, depth);\r\n\t\t\t\t\ttextStack.push('</li>');\r\n\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (typeof entry === \"string\") { // block\r\n\t\t\trenderPrefix();\r\n\t\t\trenderString(this);\r\n\t\t\trenderSuffix();\r\n\t\t} else { // block\r\n\t\t\t// for ints or any other types which do not require specific rendering\r\n\t\t\trenderPrefix();\r\n\t\t\ttextStack.push(entry);\r\n\t\t\trenderSuffix();\r\n\t\t}\r\n\t\tif (forcePrefixSuffix) renderSuffix();\r\n\r\n\t\tfunction renderPrefix() {\r\n\t\t\tif (prefix !== null) {\r\n\t\t\t\ttextStack.push(prefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction renderSuffix() {\r\n\t\t\tif (suffix !== null) {\r\n\t\t\t\ttextStack.push(suffix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderTable(self) {\r\n\t\t\t// TODO add handling for rowLabel property\r\n\r\n\t\t\ttextStack.push(\"<table class='table'>\");\r\n\r\n\t\t\tif (entry.caption !== undefined) {\r\n\t\t\t\ttextStack.push(`<caption>${entry.caption}</caption>`);\r\n\t\t\t}\r\n\t\t\ttextStack.push(\"<thead>\");\r\n\t\t\ttextStack.push(\"<tr class='table-row table-row--header'>\");\r\n\r\n\t\t\tif (entry.colLabels) {\r\n\t\t\t\tfor (let i = 0; i < entry.colLabels.length; ++i) {\r\n\t\t\t\t\ttextStack.push(`<th ${getTableThClassText(i)}>${entry.colLabels[i]}</th>`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\ttextStack.push(\"</thead>\");\r\n\t\t\ttextStack.push(\"<tbody>\");\r\n\r\n\t\t\tfor (let i = 0; i < entry.rows.length; ++i) {\r\n\t\t\t\ttextStack.push(\"<tr class='table-row'>\");\r\n\t\t\t\tfor (let j = 0; j < entry.rows[i].length; ++j) {\r\n\t\t\t\t\ttextStack.push(`<td ${makeTableTdClassText(j)}>`);\r\n\t\t\t\t\tself.recursiveEntryRender(entry.rows[i][j], textStack, depth + 1);\r\n\t\t\t\t\ttextStack.push(\"</td>\");\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(\"</tr>\");\r\n\t\t\t}\r\n\r\n\t\t\ttextStack.push(\"</tbody>\");\r\n\t\t\ttextStack.push(\"</table>\");\r\n\r\n\t\t\tfunction getTableThClassText(i) {\r\n\t\t\t\treturn entry.colStyles === undefined || i >= entry.colStyles.length ? \"class='table-cell'\" :  `class=\"table-cell ${entry.colStyles[i]}\"`;\r\n\t\t\t}\r\n\r\n\t\t\tfunction makeTableTdClassText(i) {\r\n\t\t\t\tif (entry.rowStyles !== undefined) {\r\n\t\t\t\t\treturn entry.rowStyles === undefined || i >= entry.rowStyles.length ? \"class='table-cell'\" : `class=\"table-cell ${entry.rowStyles[i]}\"`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getTableThClassText(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction handleEntries(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handleOptions(self) {\r\n\t\t\tif (entry.entries) {\r\n\t\t\t\tentry.entries = entry.entries.sort((a, b) => a.name && b.name ? ascSort(a.name, b.name) : a.name ? -1 : b.name ? 1 : 0);\r\n\t\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleInvocation(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, true);\r\n\t\t}\r\n\r\n\t\tfunction handlePatron(self) {\r\n\t\t\thandleEntriesOptionsInvocationPatron(self, false);\r\n\t\t}\r\n\r\n\t\tfunction handleEntriesOptionsInvocationPatron(self, incDepth) {\r\n\t\t\tconst inlineTitle = depth >= 2;\r\n\t\t\tconst nextDepth = incDepth ? depth+1 : depth;\r\n\t\t\tconst styleString = getStyleString();\r\n\t\t\tconst dataString = getDataString();\r\n\t\t\tconst preReqText = getPreReqText();\r\n\t\t\tconst headerSpan = entry.name !== undefined ? `<span class=\"stat-name\">${entry.name}${isNonstandardSource(entry.source) ? ' (UA)' : ''}${inlineTitle ? \".\" : \"\"}</span> ` : \"\";\r\n\r\n\t\t\tif (entry.entries || entry.name) {\r\n\t\t\t\ttextStack.push(`<${self.wrapperTag} ${dataString} ${styleString}>${headerSpan}${preReqText}`);\r\n\t\t\t\tif (entry.entries) {\r\n\t\t\t\t\tfor (let i = 0; i < entry.entries.length; i++) {\r\n\t\t\t\t\t\tself.recursiveEntryRender(entry.entries[i], textStack, nextDepth, \"<p>\", \"</p>\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttextStack.push(`</${self.wrapperTag}>`);\r\n\t\t\t}\r\n\r\n\t\t\tfunction getStyleString() {\r\n\t\t\t\tconst styleClasses = [];\r\n\t\t\t\tif (isNonstandardSource(entry.source)) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n\t\t\t\tif (inlineTitle && entry.name !== undefined) styleClasses.push(EntryRenderer.HEAD_2);\r\n\t\t\t\telse styleClasses.push(depth === -1 ? EntryRenderer.HEAD_NEG_1 : depth === 0 ? EntryRenderer.HEAD_0 : EntryRenderer.HEAD_1);\r\n\t\t\t\tif ((entry.type === \"invocation\" || entry.type === \"patron\") && entry.subclass !== undefined) styleClasses.push(CLSS_SUBCLASS_FEATURE);\r\n\t\t\t\treturn styleClasses.length > 0 ? `class=\"${styleClasses.join(\" \")}\"` : \"\";\r\n\t\t\t}\r\n\r\n\t\t\tfunction getDataString() {\r\n\t\t\t\tlet dataString = \"\";\r\n\t\t\t\tif (entry.type === \"invocation\" || entry.type === \"patron\") {\r\n\t\t\t\t\tconst titleString = entry.source ? `title=\"Source: ${Parser.sourceJsonToFull(entry.source)}\"` : \"\";\r\n\t\t\t\t\tif (entry.subclass !== undefined) dataString = `${ATB_DATA_SC}=\"${entry.subclass.name}\" ${ATB_DATA_SRC}=\"${entry.subclass.source}\" ${titleString}`;\r\n\t\t\t\t\telse dataString = `${ATB_DATA_SC}=\"${EntryRenderer.DATA_NONE}\" ${ATB_DATA_SRC}=\"${EntryRenderer.DATA_NONE}\" ${titleString}`;\r\n\t\t\t\t}\r\n\t\t\t\treturn dataString;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getPreReqText() {\r\n\t\t\t\tif (entry.prerequisite) return `<span class=\"prerequisite\">Prerequisite: ${entry.prerequisite}</span>`;\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderLink(self, entry) {\r\n\t\t\tlet href;\r\n\t\t\tif (entry.href.type === \"internal\") {\r\n\t\t\t\t// baseURL is blank by default\r\n\t\t\t\thref = `${self.baseUrl}${entry.href.path}#`;\r\n\t\t\t\tif (entry.href.hash !== undefined) {\r\n\t\t\t\t\thref += entry.href.hash;\r\n\t\t\t\t\tif (entry.href.subhashes !== undefined) {\r\n\t\t\t\t\t\tfor (let i = 0; i < entry.href.subhashes.length; i++) {\r\n\t\t\t\t\t\t\tconst subHash = entry.href.subhashes[i];\r\n\t\t\t\t\t\t\thref += `,${encodeForHash(subHash.key)}:${encodeForHash(subHash.value)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (entry.href.type === \"external\") {\r\n\t\t\t\thref = entry.href.url;\r\n\t\t\t}\r\n\t\t\ttextStack.push(`<a href='${href}'>${entry.text}</a>`);\r\n\t\t}\r\n\r\n\t\tfunction renderString(self) {\r\n\t\t\tconst tagSplit = splitByTags();\r\n\t\t\tfor (let i = 0; i < tagSplit.length; i++) {\r\n\t\t\t\tconst s = tagSplit[i];\r\n\t\t\t\tif (s === undefined || s === null || s === \"\") continue;\r\n\t\t\t\tif (s.charAt(0) === \"@\") {\r\n\t\t\t\t\tconst [tag, text] = splitFirstSpace(s);\r\n\r\n\t\t\t\t\tif (tag === \"@bold\" || tag === \"@b\" || tag === \"@italic\" || tag === \"@i\" || tag === \"@skill\" || tag === \"@action\") {\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@b\":\r\n\t\t\t\t\t\t\tcase \"@bold\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<b>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</b>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@i\":\r\n\t\t\t\t\t\t\tcase \"@italic\":\r\n\t\t\t\t\t\t\t\ttextStack.push(`<i>`);\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(text, textStack, depth);\r\n\t\t\t\t\t\t\t\ttextStack.push(`</i>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@action\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.actionToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@skill\": // Convert this to a tag once the rules data are more navigable\r\n\t\t\t\t\t\t\t\ttextStack.push(`<span title=\"${Parser.skillToExplanation(text)}\" class=\"explanation\">${text}</span>`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst [name, source, displayText, ...others] = text.split(\"|\");\r\n\t\t\t\t\t\tconst hash = `${name}${source ? `${HASH_LIST_SEP}${source}` : \"\"}`;\r\n\r\n\t\t\t\t\t\tconst fauxEntry = {\r\n\t\t\t\t\t\t\t\"type\": \"link\",\r\n\t\t\t\t\t\t\t\"href\": {\r\n\t\t\t\t\t\t\t\t\"type\": \"internal\",\r\n\t\t\t\t\t\t\t\t\"path\": \"\",\r\n\t\t\t\t\t\t\t\t\"hash\": encodeForHash(hash)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"text\": (displayText ? displayText : name)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tswitch (tag) {\r\n\t\t\t\t\t\t\tcase \"@spell\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/spells/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@item\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_DMG;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/items/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@condition\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/conditions/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@class\":\r\n\t\t\t\t\t\t\t\tconst classMatch = EntryRenderer.RE_INLINE_CLASS.exec(text);\r\n\t\t\t\t\t\t\t\tif (classMatch) {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = classMatch[1].trim(); // TODO pass this in\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.subhashes = [{\"key\": \"sub\", \"value\": classMatch[2].trim() + \"~phb\"}] // TODO pass this in\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_PHB;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/classes/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@creature\":\r\n\t\t\t\t\t\t\t\tif (!source) fauxEntry.href.hash += HASH_LIST_SEP + SRC_MM;\r\n\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/bestiary/\" + fauxEntry.href.hash;\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@filter\":\r\n\t\t\t\t\t\t\t\t// todo... maybe\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@damage\":\r\n\t\t\t\t\t\t\tcase \"@dice\":\r\n\t\t\t\t\t\t\t\t// todo\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@book\":\r\n\t\t\t\t\t\t\t\t//todo\r\n\t\t\t\t\t\t\t\ttextStack.push(name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"@5etools\":\r\n\t\t\t\t\t\t\t\tif (source.indexOf(\".\") > -1) {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/\" + source.substring(0, source.indexOf(\".\"))\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tfauxEntry.href.hash = \"/\" + source;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tself.recursiveEntryRender(fauxEntry, textStack, depth);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextStack.push(s);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitFirstSpace(string) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tstring.substr(0, string.indexOf(' ')),\r\n\t\t\t\t\tstring.substr(string.indexOf(' ') + 1)\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\t\tfunction splitByTags() {\r\n\t\t\t\tlet tagDepth = 0;\r\n\t\t\t\tlet inTag = false;\r\n\t\t\t\tlet char, char2;\r\n\t\t\t\tconst out = [];\r\n\t\t\t\tlet curStr = \"\";\r\n\t\t\t\tfor (let i = 0; i < entry.length; ++i) {\r\n\t\t\t\t\tchar = entry.charAt(i);\r\n\t\t\t\t\tchar2 = i < entry.length-1 ? entry.charAt(i+1) : null;\r\n\r\n\t\t\t\t\tswitch (char) {\r\n\t\t\t\t\t\tcase \"{\":\r\n\t\t\t\t\t\t\tif (char2 === \"@\") {\r\n\t\t\t\t\t\t\t\tif (tagDepth++ > 0) {\r\n\t\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\t\tinTag = false;\r\n\t\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"}\":\r\n\t\t\t\t\t\t\tif (--tagDepth === 0) {\r\n\t\t\t\t\t\t\t\tout.push(curStr);\r\n\t\t\t\t\t\t\t\tcurStr = \"\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tcurStr += char;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (curStr.length > 0) out.push(curStr);\r\n\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nEntryRenderer.getEntryDice = function (entry) {\r\n\t// TODO make droll integration optional\r\n\tlet toAdd;\r\n\tif (entry.number && entry.faces) {\r\n\t\ttoAdd = String(entry.number) + \"d\" + entry.faces;\r\n\t} else if (entry.toRoll && entry.toRoll.length) {\r\n\t\tfor (let roll of entry.toRoll) {\r\n\t\t\ttoAdd = String(roll.number) + \"d\" + roll.faces + \" + \"\r\n\t\t}\r\n\t\ttoAdd = toAdd.substring(0, toAdd.length - 3);\r\n\t}\r\n\tif (typeof droll !== \"undefined\" && entry.rollable === true) {\r\n\t\t// TODO output this somewhere nice\r\n\t\t// TODO make this less revolting\r\n\r\n\t\t// TODO output to small tooltip-stype bubble? Close on mouseout\r\n\t\treturn `<span class='roller unselectable' onclick=\"if (this.rolled) { this.innerHTML = this.innerHTML.split('=')[0].trim()+' = '+droll.roll('${toAdd}').total; } else { this.rolled = true; this.innerHTML += ' = '+droll.roll('${toAdd}').total; }\">${toAdd}</span>`;\r\n\t} else {\r\n\t\treturn toAdd;\r\n\t}\r\n};\r\n\r\nEntryRenderer.RE_INLINE_CLASS = /(.*?) \\((.*?)\\)/;\r\nEntryRenderer.HEAD_NEG_1 = \"statsBlockSectionHead\";\r\nEntryRenderer.HEAD_0 = \"statsBlockHead\";\r\nEntryRenderer.HEAD_1 = \"statsBlockSubHead\";\r\nEntryRenderer.HEAD_2 = \"statsInlineHead\";\r\nEntryRenderer.DATA_NONE = \"data-none\";\r\n\r\nexport default EntryRenderer;","import {cloneDeep} from \"../js/utils.js\";\nimport Parser from \"./Parser.js\";\n\nlet cache = {};\n\n/**\n * Returns model data object, serving the cached version if already requested.\n * @param {String} modelId Model ID for the data being requested.\n */\nexport default async function loadModel(modelId) {\n\tif (modelId) {\n\t\t// Checks model cache for data\n\t\tif (!cache.hasOwnProperty(modelId)) {\n\t\t\t// Catch for items.json to load additional data\n\t\t\tswitch (modelId) {\n\t\t\t\tcase \"items\":\n\t\t\t\t\tcache[modelId] = await loadAllItemData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bestiary\":\n\t\t\t\t\tcache[modelId] = await loadAllMonsterData();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spells\":\n\t\t\t\tcase \"classes\":\n\t\t\t\t\tcache[modelId] = await loadModelFromIndex(modelId);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcache[modelId] = await loadModelFromSingleJSON(modelId);\n\t\t\t}\n\t\t}\n\t\treturn cache[modelId];\n\t} else {\n\t\tconsole.error(\"Missing modelID\");\n\t\treturn [];\n\t}\n}\n\n/**\n * Loads JSON from the given URL.\n * @param {String} url Makes request to specified URL, returns JSON\n */\nfunction loadJSON(url) {\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    });\n};\n\nasync function loadModelFromSingleJSON(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}.json`);\n\tif (Array.isArray(modelData)) {\n\t\treturn modelData;\n\t} else {\n\t\tconsole.error(\"Array data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nasync function loadModelFromIndex(modelId) {\n\tconst modelData = await loadJSON(`/data/${modelId}/index.json`);\n\tif (modelData.index) {\n\t\tlet promises = [];\n\n\t\tfor (let srcURL of Object.values(modelData.index)) {\n\t\t\tpromises.push(loadJSON(`/data/${modelId}/${srcURL}`));\n\t\t}\n\t\treturn Promise.all(promises).then(data => {\n\t\t\tlet allData = [];\n\n\t\t\tfor (let srcData of data) {\n\t\t\t\tallData = allData.concat(srcData);\n\t\t\t}\n\n\t\t\treturn allData;\n\t\t});\n\t} else {\n\t\tconsole.error(\"Model index data not found from model JSON\");\n\t\treturn [];\n\t}\n}\n\nfunction loadAllMonsterData() {\n\tconst promises = [];\n\n\tpromises.push(loadJSON(`/data/bestiary.json`));\n\tpromises.push(loadJSON(`/data/legendarygroups.json`));\n\n\treturn Promise.all(promises).then(data => {\n\t\treturn parseLegendaryMonsters(data[0], data[1]);\n\t});\n}\n\nfunction parseLegendaryMonsters(monsterData, legendaryGroupData) {\n  const legendaryGroupList = {};\n\n  for (let legendaryGroup of legendaryGroupData) {\n    legendaryGroupList[legendaryGroup.name] = {\n      lairActions: legendaryGroup.lairActions,\n      regionalEffects: legendaryGroup.regionalEffects\n    };\n  }\n\n  for (let monster of monsterData) {\n    if (monster.legendaryGroup) {\n      const legendaryGroup = monster.legendaryGroup;\n      if (legendaryGroup) {\n        const thisGroup = legendaryGroupList[legendaryGroup];\n        if (thisGroup.lairActions) monster.lairaction = cloneDeep(thisGroup.lairActions);\n        if (thisGroup.regionalEffects) monster.regionaleffect = cloneDeep(thisGroup.regionalEffects);\n      }\n    }\n  }\n  return monsterData;\n}\n\n/**\n * Loads and merges all Item data.\n */\nfunction loadAllItemData() {\n\tconst promises = [];\n\n  promises.push(loadJSON(\"/data/items.json\"));\n  promises.push(loadJSON(\"/data/basicitems.json\"));\n\tpromises.push(loadJSON(\"/data/magicvariants.json\"));\n\n  return Promise.all(promises).then((data) => {\n\t\treturn mergeItemsData(data[0], data[1], data[2]);\n  });\n}\n\nfunction mergeItemsData(itemData, basicItemData, variantData) {\n  const propertyList = {};\n  const typeList = {};\n  let itemList = itemData;\n\n\tlet basicItemList = basicItemData.basicitems;\n\tconst itemPropertyList = basicItemData.itemProperty;\n\tconst itemTypeList = basicItemData.itemType;\n\t// Convert the property and type list JSONs into look-ups, i.e. use the abbreviation as a JSON property name\n\tfor (let i = 0; i < itemPropertyList.length; i++) propertyList[itemPropertyList[i].abbreviation] = itemPropertyList[i].name ? JSON.parse(JSON.stringify(itemPropertyList[i])) : {\"name\": itemPropertyList[i].entries[0].name.toLowerCase(), \"entries\": itemPropertyList[i].entries};\n\tfor (let i = 0; i < itemTypeList.length; i++) typeList[itemTypeList[i].abbreviation] = itemTypeList[i].name ? JSON.parse(JSON.stringify(itemTypeList[i])): {\"name\": itemTypeList[i].entries[0].name.toLowerCase(), \"entries\": itemTypeList[i].entries};\n\n\tlet variantList = variantData;\n\titemList = itemList.concat(basicItemList);\n\tfor (let i = 0; i < variantList.length; i++) {\n\t\tvariantList[i].tier = variantList[i].inherits.tier;\n\t\tvariantList[i].rarity = variantList[i].inherits.rarity;\n\t\tvariantList[i].source = variantList[i].inherits.source;\n\t\tvariantList[i].page = variantList[i].inherits.page;\n\t\tif(!variantList[i].entries && variantList[i].inherits.entries) variantList[i].entries=JSON.parse(JSON.stringify(variantList[i].inherits.entries));\n\t\tif(variantList[i].requires.armor) variantList[i].armor = variantList[i].requires.armor\n\t}\n\titemList = itemList.concat(variantList);\n\tfor (let i = 0; i < basicItemList.length; i++) {\n\t\tconst curBasicItem = basicItemList[i];\n\t\tbasicItemList[i].category = \"Basic\";\n\t\tif(curBasicItem.entries === undefined) curBasicItem.entries=[];\n\t\tconst curBasicItemName = curBasicItem.name.toLowerCase();\n\t\tfor (let j = 0; j < variantList.length; j++) {\n\t\t\tconst curVariant = variantList[j];\n\t\t\tconst curRequires = curVariant.requires;\n\t\t\tlet hasRequired = curBasicItemName.indexOf(\" (\") === -1;\n\t\t\tfor (const requiredProperty in curRequires) if (curRequires.hasOwnProperty(requiredProperty) && curBasicItem[requiredProperty] !== curRequires[requiredProperty]) hasRequired=false;\n\t\t\tif (curVariant.excludes) {\n\t\t\t\tconst curExcludes = curVariant.excludes;\n\t\t\t\tfor (const excludedProperty in curExcludes) if (curExcludes.hasOwnProperty(excludedProperty) && curBasicItem[excludedProperty] === curExcludes[excludedProperty]) hasRequired=false;\n\t\t\t}\n\t\t\tif (hasRequired) {\n\t\t\t\tconst curInherits = curVariant.inherits;\n\t\t\t\tconst tmpBasicItem = JSON.parse(JSON.stringify(curBasicItem));\n\t\t\t\tdelete tmpBasicItem.value; // Magic items do not inherit the value of the non-magical item\n\t\t\t\ttmpBasicItem.category = \"Specific Variant\";\n\t\t\t\tfor (const inheritedProperty in curInherits) {\n\t\t\t\t\tif (curInherits.hasOwnProperty(inheritedProperty)) {\n\t\t\t\t\t\tif (inheritedProperty === \"namePrefix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name = curInherits.namePrefix+tmpBasicItem.name;\n\t\t\t\t\t\t} else if (inheritedProperty === \"nameSuffix\") {\n\t\t\t\t\t\t\ttmpBasicItem.name += curInherits.nameSuffix;\n\t\t\t\t\t\t} else if (inheritedProperty === \"entries\") {\n\t\t\t\t\t\t\tfor (let k = curInherits.entries.length-1; k > -1; k--) {\n\t\t\t\t\t\t\t\tlet tmpText = curInherits.entries[k];\n\t\t\t\t\t\t\t\tif (typeof tmpText === \"string\") {\n\t\t\t\t\t\t\t\t\tif (tmpBasicItem.dmgType) tmpText = tmpText.replace(\"{@dmgType}\", Parser.dmgTypeToFull(tmpBasicItem.dmgType));\n\t\t\t\t\t\t\t\t\tif (curInherits.genericBonus) tmpText = tmpText.replace(\"{@genericBonus}\", curInherits.genericBonus);\n\t\t\t\t\t\t\t\t\tif (tmpText.indexOf(\"{@lowerName}\") !== -1) tmpText = tmpText.split(\"{@lowerName}\").join(curBasicItemName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmpBasicItem.entries.unshift(tmpText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\ttmpBasicItem[inheritedProperty] = curInherits[inheritedProperty];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titemList.push(tmpBasicItem);\n\t\t\t}\n\t\t}\n\t}\n\t\n\n  let pushObject = (targetObject, objectToBePushed) => {\n    const copiedObject = JSON.parse(JSON.stringify(targetObject));\n    copiedObject.push(objectToBePushed);\n    return copiedObject;\n  };\n\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < itemList.length; i++) {\n\t\tconst item = itemList[i];\n\t\tif (item.noDisplay) continue;\n\t\tif (itemList[i].type === \"GV\") itemList[i].category = \"Generic Variant\";\n\t\tif (itemList[i].category === undefined) itemList[i].category = \"Other\";\n\t\tif (item.entries === undefined) itemList[i].entries=[];\n\t\tif (item.type && typeList[item.type]) for (let j = 0; j < typeList[item.type].entries.length; j++) itemList[i].entries = pushObject(itemList[i].entries,typeList[item.type].entries[j]);\n\t\tif (item.property) {\n\t\t\tconst properties = item.property.split(\",\");\n\t\t\tfor (let j = 0; j < properties.length; j++) if (propertyList[properties[j]].entries) for (let k = 0; k < propertyList[properties[j]].entries.length; k++) itemList[i].entries = pushObject(itemList[i].entries,propertyList[properties[j]].entries[k]);\n\t\t}\n\t\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\n\t\tif (item.armor) {\n\t\t\tif (item.resist) itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\n\t\t\tif (item.armor && item.stealth) itemList[i].entries = pushObject(itemList[i].entries,\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\n\t\t\tif (item.type === \"HA\" && item.strength) itemList[i].entries = pushObject(itemList[i].entries,\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\n\t\t} else if (item.resist) {\n\t\t\tif (item.type === \"P\") itemList[i].entries = pushObject(itemList[i].entries,\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\n\t\t\tif (item.type === \"RG\") itemList[i].entries = pushObject(itemList[i].entries,\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\n\t\t}\n\t\tif (item.type === \"SCF\") {\n\t\t\tif (item.scfType === \"arcane\") itemList[i].entries = pushObject(itemList[i].entries,\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\n\t\t\tif (item.scfType === \"druid\") itemList[i].entries = pushObject(itemList[i].entries,\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\n\t\t\tif (item.scfType === \"holy\") {\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A holy symbol is a representation of a god or pantheon.\");\n\t\t\t\titemList[i].entries = pushObject(itemList[i].entries,\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\n\t\t\t}\n\t\t}\n\t}\n\twindow.itemPropertyList = propertyList;\n  return itemList;\n}","import {\n  getSourceFilter,\n  getAsiFilter,\n  initFilterBox,\n  utils_makePrerequisite,\n  search,\n  debounce,\n  ascSort,\n  parseHTML,\n  getHiddenModeList,\n  parse_psionicTypeToFull,\n  parse_psionicOrderToFull,\n  parse_backgroundSkills,\n  getTblTimeStr,\n  getRangeType,\n  getFltrSpellLevelStr,\n  getClassFilterStr,\n  getMetaFilterObj,\n  getTimeDisplay,\n  getRuleSearchStackNames,\n  uppercaseFirst,\n  getFromPath,\n  decodeForHash,\n  encodeForHash\n} from \"../js/utils.js\";\nimport { parse_abilityShort, parse_abilityCollection } from \"../util/ability.js\";\nimport {\n  FLTR_ID,\n  STR_NONE,\n  STR_EMPTY,\n  SZ_FINE,\n  SZ_DIMINUTIVE,\n  SZ_TINY,\n  SZ_SMALL,\n  SZ_MEDIUM,\n  SZ_LARGE,\n  SZ_HUGE,\n  SZ_GARGANTUAN,\n  SZ_COLOSSAL,\n  SZ_VARIES\n} from \"./consts.js\";\nimport Parser from \"./Parser.js\";\nimport { Filter, FilterBox } from \"./Filter.js\";\nimport { readRouteSelection } from \"./routing.js\";\n\nfunction renderTable(data, rootEl, columns) {\n  const filters = {};\n\n  // Generates html and filter settings for each item by each column\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst curItem = data[i];\n    const name = curItem.name;\n    let columnsHtmlString = '';\n  \n\t\tfor (let col of columns) {\n\t\t\tswitch (col.id) {\n        case \"ability\":\n          if (!filters[col.id]) {\n            let asiFilter = getAsiFilter();\n            asiFilter.metric = \"_fAbility\";\n            filters[col.id] = asiFilter;\n          }\n          const ability = parse_abilityShort(curItem.ability) || STR_NONE;\n          curItem._fAbility = parse_abilityCollection(curItem.ability);\n          columnsHtmlString += `<td class='table-cell ability ${\n            ability === STR_NONE ? \"list-entry-none \" : \"\"\n          } ${col.cssClass}'>${ability}</td>`;\n          break;\n\n        case \"name\":\n          columnsHtmlString += `<td class='table-cell table-cell--border name ${col.cssClass}'>${name}</td>`;\n          break;\n\n        case \"source\":\n          if (!filters[col.id]) {\n            let sourceFilter = getSourceFilter();\n            sourceFilter.metric = \"source\";\n            filters[col.id] = sourceFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.source);\n\n          columnsHtmlString += `<td class='table-cell source source${curItem.source} ${\n            col.cssClass\n          }' title='${Parser.sourceJsonToFull(curItem.source)}'>${Parser.sourceJsonToAbv(curItem.source)}</td>`;\n          break;\n\n        case \"prerequisite\":\n          let prereqText = utils_makePrerequisite(curItem.prerequisite, true);\n          if (!prereqText) {\n            prereqText = STR_NONE;\n          }\n          columnsHtmlString += `<td class='table-cell prerequisite ${\n            prereqText === STR_NONE ? \"list-entry-none \" : \"\"\n          } ${col.cssClass}'>${prereqText}</td>`;\n          break;\n\n        case \"proficiencies\":\n          const prof = curItem.skillProficiencies && curItem.skillProficiencies.length > 0\n            ? parse_backgroundSkills(curItem.skillProficiencies) : \"--\";\n          columnsHtmlString += `<td class=\"table-cell proficiencies ${col.cssClass}\">${prof}</td>`;\n          break;\n\n        case \"psy-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({ header: \"Type\", items: [\"D\", \"T\"], displayFn: parse_psionicTypeToFull });\n            typeFilter.metric = \"type\";\n            filters[col.id] = typeFilter;\n          }\n          columnsHtmlString += `<td class='psy-type table-cell ${col.cssClass}'>${parse_psionicTypeToFull(\n            curItem.type\n          )}</td>`;\n          break;\n\n        case \"psy-order\":\n          if (!filters[col.id]) {\n            let orderFilter = new Filter({\n              header: \"Order\",\n              items: [\"Avatar\", \"Awakened\", \"Immortal\", \"Nomad\", \"Wu Jen\", \"None\"]\n            });\n            orderFilter.metric = \"order\";\n            filters[col.id] = orderFilter;\n          }\n          curItem.order = parse_psionicOrderToFull(curItem.order);\n          columnsHtmlString += `<td class='psy-order table-cell  ${col.cssClass} ${\n            curItem.order === STR_NONE ? \"list-entry-none\" : STR_EMPTY\n          }'>${curItem.order}</td>`;\n          break;\n\n        case \"psy-mode-list\":\n          columnsHtmlString += `<td class='psy-mode-list ${col.cssClass}'>${getHiddenModeList(curItem)}</td>`;\n          break;\n\n        case \"size\":\n          if (!filters[col.id]) {\n            let sizeFilter = new Filter({ header: \"Size\", displayFn: Parser.sizeAbvToFull });\n            sizeFilter.metric = \"size\";\n            filters[col.id] = sizeFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.size);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} size'>${Parser.sizeAbvToFull(curItem.size)}</td>`;\n          break;\n\n        case \"reward-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({\n              header: \"Type\",\n              items: [\"Blessing\", \"Boon\", \"Charm\", \"Demonic Boon\"]\n            });\n            typeFilter.metric = \"type\";\n            filters[col.id] = typeFilter;\n          }\n          columnsHtmlString += `<td class='table-cell type ${col.cssClass}'>${curItem.type}</td>`;\n          break;\n\n        case \"level\":\n          if (!filters[col.id]) {\n            let levelFilter = new Filter({header: \"Level\", displayFn: getFltrSpellLevelStr});\n            levelFilter.metric = \"level\";\n            filters[col.id] = levelFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.level);\n          columnsHtmlString += `<td class='table-cell level ${col.cssClass}'>${Parser.spLevelToFull(curItem.level)}</td>`;\n          break;\n\n        case \"time\":\n          if (!filters[col.id]) {\n            let timeFilter = new Filter({\n              header: \"Cast Time\",\n              items: [\"action\", \"bonus action\", \"reaction\", \"round\", \"minute\", \"hour\"],\n              displayFn: getTimeDisplay\n            });\n            timeFilter.metric = \"_fTimeType\";\n            filters[col.id] = timeFilter;\n          }\n          curItem._fTimeType = curItem.time.map(t => t.unit);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} time' title='${Parser.spTimeListToFull(curItem.time)}'>${getTblTimeStr(curItem.time[0])}</td>`;\n          break;\n\n        case \"school\":\n          if (!filters[col.id]) {\n            let schoolFilter = new Filter({ header: \"School\", displayFn: Parser.spSchoolAbvToFull });\n            schoolFilter.metric = \"school\";\n            filters[col.id] = schoolFilter;\n          }\n          filters[col.id].addIfAbsent(curItem.school);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} school school_${curItem.school}' title=\"${Parser.spSchoolAbvToFull(curItem.school)}\">${Parser.spSchoolAbvToFull(curItem.school)}</td>`;\n          break;\n\n        case \"range\":\n          if (!filters[col.id]) {\n            let rangeFilter = new Filter({\n              header: \"Range\",\n              items: [\"Self\", \"Touch\", \"Point\", \"Area\", \"Special\"]\n            });\n            rangeFilter.metric = \"_fRangeType\";\n            filters[col.id] = rangeFilter;\n          }\n          curItem._fRangeType = getRangeType(curItem.range);\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} range'>${Parser.spRangeToFull(curItem.range)}</td>`;\n          break;\n\n        case \"classes\":\n          if (!filters[col.id]) {\n            let classFilter = new Filter({ header: \"Class\" });\n            classFilter.metric = \"_fClasses\";\n            filters[col.id] = classFilter;\n          }\n          curItem._fClasses = curItem.classes.fromClassList ? curItem.classes.fromClassList.map(c => getClassFilterStr(c)) : [];\n\t\t      curItem._fClasses.forEach(c => filters[col.id].addIfAbsent(c));\n          columnsHtmlString += `<td class='table-cell ${col.cssClass} classes'>${Parser.spClassesToFull(curItem.classes)}</td>`;\n          break;\n\n        case \"subclasses\":\n          if (!filters[col.id]) {\n            let subclassFilter = new Filter({ header: \"Subclass\" });\n            subclassFilter.metric = \"_fSubclasses\";\n            filters[col.id] = subclassFilter;\n          }\n          curItem._fSubclasses = curItem.classes.fromSubclass ? curItem.classes.fromSubclass.map(c => getClassFilterStr(c.subclass)) : [];\n\t\t      curItem._fSubclasses.forEach(sc => filters[col.id].addIfAbsent(sc));\n          columnsHtmlString += `<td class='table-cell subclasses ${col.cssClass}'>${curItem._fSubclasses.join(\", \")}</td>`;\n          break;\n\n        case \"spell-meta\":\n          if (!filters[col.id]) {\n            let metaFilter = new Filter({\n              header: \"Tag\",\n              items: [\"Concentration\", \"Verbal\", \"Somatic\", \"Material\", \"Ritual\", \"Technomagic\"]\n            });\n            metaFilter.metric = \"_fMeta\";\n            filters[col.id] = metaFilter;\n          }\n          curItem._fMeta = getMetaFilterObj(curItem);\n          columnsHtmlString += `<td class='table-cell spell-meta ${col.cssClass}'>${curItem._fMeta}</td>`;\n          break;\n        \n        case \"rules-search\":\n          const searchStack = [];\n          for (const e1 of curItem.entries) {\n            getRuleSearchStackNames(searchStack, e1);\n          }\n          columnsHtmlString += `<td class='table-cell rules-search ${col.cssClass}'>${searchStack.join(\",\")}</td>`;\n          break;\n        \n        case \"monster-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({\n              header: \"Type\",\n              items: [\"aberration\", \"beast\", \"celestial\", \"construct\", \"dragon\", \"elemental\", \"fey\", \"fiend\", \"giant\", \"humanoid\", \"monstrosity\", \"ooze\", \"plant\", \"undead\"],\n              displayFn: uppercaseFirst\n            });\n            typeFilter.metric = \"_pTypes.type\";\n            filters[col.id] = typeFilter;\n          }\n          curItem._pTypes = Parser.monTypeToFullObj(curItem.type);\n          curItem._pTypes.tags.forEach(t => filters[col.id].addIfAbsent(t));\n          columnsHtmlString += `<td class='table-cell type ${col.cssClass}'>${curItem._pTypes.asText.uppercaseFirst()}</td>`;\n          break;\n        \n\n        // adds additional filters for monster table\n        case \"cr\":\n          if (!filters[col.id]) {\n            let crFilter = new Filter({ header: \"CR\" });\n            crFilter.metric = \"cr\";\n            filters[col.id] = crFilter;\n            filters.sizeFilter = new Filter({\n              header: \"Size\",\n              items: [SZ_FINE, SZ_DIMINUTIVE, SZ_TINY, SZ_SMALL, SZ_MEDIUM, SZ_LARGE, SZ_HUGE, SZ_GARGANTUAN, SZ_COLOSSAL, SZ_VARIES],\n              displayFn: Parser.sizeAbvToFull\n            });\n            filters.sizeFilter.metric = \"size\";\n            filters.tagFilter = new Filter({ header: \"Tag\", displayFn: uppercaseFirst });\n            filters.tagFilter.metric = \"_pTypes.tags\";\n            filters.miscFilter = new Filter({header: \"Miscellaneous\", items: [\"Legendary\"], displayFn: uppercaseFirst});\n            filters.miscFilter.metric = \"_fMisc\";\n          }\n          curItem._fMisc = curItem.legendary || curItem.legendaryGroup ? [\"Legendary\"] : [];\n          curItem.cr = curItem.cr === undefined ? \"Unknown\" : curItem.cr;\n          let adjCR = curItem.cr === \"Unknown\" ? \"--\" : curItem.cr;\n          filters[col.id].addIfAbsent(curItem.cr);\n          columnsHtmlString += `<td class='table-cell cr ${col.cssClass}'>${adjCR}</td>`;\n          break;\n\n        case \"item-type\":\n          if (!filters[col.id]) {\n            let typeFilter = new Filter({header: \"Type\", deselFn: deselectFilter(\"type\", \"$\")});;\n            typeFilter.metric = \"_fTypes\";\n            filters[col.id] = typeFilter;\n          }\n          const type = [];\n          if (curItem.wondrous) type.push(\"Wondrous Item\");\n          if (curItem.technology) type.push(curItem.technology);\n          if (curItem.age) type.push(curItem.age);\n          if (curItem.weaponCategory) type.push(curItem.weaponCategory + \" Weapon\");\n          if (curItem.type) type.push(Parser.itemTypeToAbv(curItem.type));\n          curItem.typeText = type.join(\", \"); // for loadhash to use\n          curItem._fTypes = type;\n          type.forEach(t => filters[col.id].addIfAbsent(t));\n          columnsHtmlString += `<td class='table-cell item-type ${col.cssClass}'>${type.join(\", \")}</td>`;\n          break;\n\n        // adds additional filters for item table\n        case \"item-rarity\":\n           if (!filters[col.id]) {\n            let rarityFilter = new Filter({header: \"Rarity\", items: [\"None\", \"Common\", \"Uncommon\", \"Rare\", \"Very Rare\", \"Legendary\", \"Artifact\", \"Unknown\"]});\n            rarityFilter.metric = \"rarity\";\n            filters[col.id] = rarityFilter;\n            filters.tierFilter = new Filter({header: \"Tier\", items: [\"None\", \"Minor\", \"Major\"]});\n            filters.tierFilter.metric = \"_fTier\";\n            filters.attunementFilter = new Filter({header: \"Attunement\", items: [\"Yes\", \"By...\", \"Optional\", \"No\"]});\n            filters.attunementFilter.metric = \"_fAttunement\";\n            filters.categoryFilter = new Filter({header: \"Category\", items: [\"Basic\", \"Generic Variant\", \"Specific Variant\", \"Other\"], deselFn: deselectFilter(\"category\", \"Specific Variant\")});\n            filters.categoryFilter.metric = \"category\";\n          }\n          const tierTags = [];\n          tierTags.push(curItem.tier ? curItem.tier : \"None\");\n          let attunement = \"No\";\n          if (curItem.reqAttune !== undefined) {\n            if (curItem.reqAttune === \"YES\") {\n              attunement = \"Yes\";\n              curItem.reqAttune = \"(Requires Attunement)\";\n            } else if (curItem.reqAttune === \"OPTIONAL\") {\n              attunement = \"Optional\";\n              curItem.reqAttune = \"(Attunement Optional)\";\n            } else if (curItem.reqAttune.toLowerCase().startsWith(\"by\")) {\n              attunement = \"By...\";\n              curItem.reqAttune = \"(Requires Attunement \" + curItem.reqAttune + \")\";\n            } else {\n              attunement = \"Yes\"; // throw any weird ones in the \"Yes\" category (e.g. \"outdoors at night\")\n              curItem.reqAttune = \"(Requires Attunement \" + curItem.reqAttune + \")\";\n            }\n          }\n          tierTags.forEach(tt => filters.tierFilter.addIfAbsent(tt));\n          curItem._fTier = tierTags;\n          curItem._fAttunement = attunement;\n          columnsHtmlString += `<td class='table-cell item-rarity ${col.cssClass}'>${curItem.rarity}</td>`;\n          break;\n      } // End Column Switch\n    } // End Column Loop\n    let linkData = [curItem.name];\n    if (curItem.source) {\n      linkData.push(curItem.source);\n    }\n    let dataLink = encodeForHash(linkData);\n\t\tlet tempString = `\n\t\t\t<tr class='table-row history-link' data-link='${dataLink}' data-title='${name}' ${FLTR_ID}='${i}' id='${i}'>\n\t\t\t\t${columnsHtmlString}\n\t\t\t</tr>`;\n\n\t\tconst rowEl = parseHTML(tempString, true);\n\t\trootEl.querySelector(\".list\").append(rowEl);\n  } // End Item (row) Loop\n  \n  // Initialize search\n\tconst list = search({\n\t\tvalueNames: columns.map(col => col.id),\n\t\tlistClass: \"list\"\n  }, rootEl);\n\n  // Initialize filters for table sorting\n  if (Object.keys(filters).length > 0) {\n    Object.values(filters).forEach(filter => {\n      filter.items.sort(ascSort);\n    });\n    const filterBox = initFilterBox(\n      rootEl,\n      ...Object.values(filters)\n    );\n\n    filterBox.render();\n    // Debounce this as it runs waayyy too often....TODO\n    let handleFilterChange = debounce(() => {\n      list.filter(function(item) {\n        const f = filterBox.getValues();\n        let filterId = item.elm.getAttribute(FLTR_ID);\n        if (filterId) {\n          const ft = data[item.elm.getAttribute(FLTR_ID)];\n\n          for (let filter of Object.values(filters)) {\n            let toDisplay = filter.toDisplay(f, getFromPath(ft, filter.metric));\n            if (!toDisplay) {\n              return false;\n            }\n          }\n        }\n        return true;\n      });\n    }, 200);\n\n    filterBox.addEventListener(FilterBox.EVNT_VALCHANGE, handleFilterChange);\n    handleFilterChange();\n  }\n  \n  function deselectFilter(deselectProperty, deselectValue) {\n    return function(val) {\n      let selectionHash = readRouteSelection();\n      if (selectionHash.length) {\n        const itemProperty = resolveHash(data, selectionHash)[deselectProperty];\n        if (itemProperty === deselectValue) {\n          return deselNoHash();\n        } else {\n          return val === deselectValue && itemProperty !== val;\n        }\n      } else {\n        return deselNoHash();\n      }\n\n      function deselNoHash() {\n        return val === deselectValue;\n      }\n    };\n  }\n}\n\n/**\n * Breaks the hash apart and finds the matching item in \n * data, compairing \"name\" and sometimes \"source\"\n * @param {Array} data - List of items to search\n * @param {String} hash - hash used to ID the selected item\n * @returns The found item based on hash or undefined.\n */\nfunction resolveHash(data, hash) {\n  let parts = decodeForHash(hash),\n    name = parts[0],\n    source = parts[1];\n\n  for (let item of data) {\n    if (\n      item.name.toLowerCase() === name.toLowerCase() &&\n      (!source || !item.source || item.source.toLowerCase() === source.toLowerCase())\n    ) {\n      return item;\n    }\n  }\n  console.error('Hash link was not found in loaded data', hash, data);\n  return undefined;\n}\n\nexport {renderTable, resolveHash};","import Parser from \"../util/Parser.js\";\nimport { utils_joinPhraseArray, util_capitalize } from \"../js/utils.js\";\n\nexport {\n\tparse_abilityLong,\n\tparse_abilityShort,\n\tparse_abilityCollection\n};\n\nfunction parse_abilityLong(abilityObj) {\n\tconst TO_MAX_OF_TWENTY = \", to a maximum of 20.\";\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tfor (let [key, value] of Object.entries(abilityItem)) {\n\t\t\t\tif (key !== \"choose\" && key !== \"hidden\") {\n\t\t\t\t\tlet mod = parseInt(value) > 0 ? \"+\" + value : value || \"+1\",\n\t\t\t\t\t\tability = key;\n\t\t\t\t\t\tabbArr.push(\"Increase your \" + Parser.attAbvToFull(ability) + \" score by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abilityItem.choose) {\t\n\t\t\t\tlet options = abilityItem.choose.from,\n\t\t\t\t\tmod = abilityItem.choose.amount;\n\t\t\t\t\n\t\t\t\t\tmod = parseInt(mod) > 0 ? \"+\" + mod : mod || \"+1\";\n\n\t\t\t\tif (options.length === 6) {\n\t\t\t\t\tif (abilityItem.choose.entry) { // only used in \"Resilient\"\n\t\t\t\t\t\tabbArr.push(abilityItem.choose.entry);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tabbArr.push(\"Increase one ability score of your choice by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst abbChoices = [];\n\t\t\t\t\tfor (let option of options) {\n\t\t\t\t\t\tabbChoices.push(util_capitalize(option));\n\t\t\t\t\t}\n\t\t\t\t\tconst abbChoicesText = utils_joinPhraseArray(abbChoices, \", \", \" or \");\n\t\t\t\t\tabbArr.push(\"Increase your \" + abbChoicesText + \" by \" + mod + TO_MAX_OF_TWENTY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn abbArr.join(\" \");\n}\n\nfunction parse_abilityShort(abilityObj) {\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tfor (let [key, value] of Object.entries(abilityItem)) {\n\t\t\t\tif (key !== \"choose\" && key !== \"hidden\") {\n\t\t\t\t\tlet mod = parseInt(value) > 0 ? \"+\" + value : value || \"+1\",\n\t\t\t\t\t\tability = key;\n\t\t\t\t\tabbArr.push(util_capitalize(ability) + \" \" + mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abilityItem.choose) {\t\n\t\t\t\tlet options = abilityItem.choose.from,\n\t\t\t\t\tmod = abilityItem.choose.amount,\n\t\t\t\t\tcount = abilityItem.choose.count,\n\t\t\t\t\tcountStr = count !== undefined && count !== 1 ? `${count} from ` : \"\";\n\t\t\t\t\n\t\t\t\t\tmod = parseInt(mod) > 0 ? \"+\" + mod : mod || \"+1\";\n\n\t\t\t\tif (options.length === 6) {\n\t\t\t\t\tabbArr.push(\"Choose \" + countStr + \"any \" + mod);\n\t\t\t\t} else if (options.length + abbArr.length === 6) {\n\t\t\t\t\tabbArr.push(\"Any other \" + mod);\n\t\t\t\t} else {\n\t\t\t\t\tconst abbChoices = [];\n\t\t\t\t\tfor (let option of options) {\n\t\t\t\t\t\tabbChoices.push(util_capitalize(option));\n\t\t\t\t\t}\n\t\t\t\t\tconst abbChoicesText = utils_joinPhraseArray(abbChoices, \", \", \" or \");\n\t\t\t\t\tabbArr.push(\"Choose \" + countStr + abbChoicesText + \" \" + mod);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\treturn abbArr.join(\"; \");\n}\n\nfunction parse_abilityCollection(abilityObj) {\n\tconst abbArr = [];\n\tif (abilityObj) {\n\t\t// Theres only ever one of these right now\n\t\tfor (const abilityItem of abilityObj) {\n\t\t\tif (abilityItem.choose) {\n\t\t\t\tconst options = abilityItem.choose.from;\n\t\t\t\t\n\t\t\t\tfor (let option of options) {\n\t\t\t\t\tabbArr.push(option);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let [ability, mod] of Object.entries(abilityItem)) {\n\t\t\t\t\tabbArr.push(ability);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn abbArr;\n}","const HASH_SUBCLASS = \"sub:\";\r\nconst HASH_FEATURE = \"f:\";\r\nconst HASH_HIDE_FEATURES = \"hideclassfs:\";\r\nconst HASH_ALL_SOURCES = \"allsrc:\";\r\n\r\nconst CLSS_FEATURE_LINK = \"feature-link\";\r\nconst CLSS_ACTIVE = \"mdc-chip--selected\";\r\nconst CLSS_SUBCLASS_PILL = \"mdc-chip\";\r\nconst CLSS_CLASS_FEATURES_ACTIVE = \"cf-active\";\r\nconst CLSS_OTHER_SOURCES_ACTIVE = \"os-active\";\r\nconst CLSS_SUBCLASS_PREFIX = \"subclass-prefix\";\r\nconst CLSS_CLASS_FEATURE = \"class-feature\";\r\nconst CLSS_GAIN_SUBCLASS_FEATURE = \"gain-subclass-feature\";\r\nconst ID_CLASS_FEATURES_TOGGLE = \"cf-toggle\";\r\nconst ID_OTHER_SOURCES_TOGGLE = \"os-toggle\";\r\n\r\nconst STR_PROF_NONE = \"none\";\r\n\r\nconst ATB_DATA_FEATURE_LINK = \"data-flink\";\r\nconst ATB_DATA_FEATURE_ID = \"data-flink-id\";\r\nconst ATB_DATA_SC_LIST = \"data-subclass-list\";\r\n\r\nimport {\r\n  jqHeight,\r\n  jqOffset,\r\n  parseHTML,\r\n  throttle,\r\n  ascSort,\r\n  encodeForHash,\r\n  jqAfter,\r\n  jqEmpty,\r\n  isNonstandardSource,\r\n  joinConjunct,\r\n  hasBeenReprinted\r\n} from \"../js/utils.js\";\r\nimport {\r\n  HASH_LIST_SEP,\r\n  HASH_PART_SEP,\r\n  CLSS_SUBCLASS_FEATURE,\r\n  ATB_DATA_SC,\r\n  ATB_DATA_SRC,\r\n  CLSS_NON_STANDARD_SOURCE,\r\n  ATB_DATA_PART_SEP,\r\n  ATB_DATA_LIST_SEP,\r\n  HASH_START\r\n} from \"../util/consts.js\";\r\nimport EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { setRouteSelection, readRouteSelection } from \"../util/routing.js\";\r\nimport renderGrid from \"../util/renderGrid.js\";\r\nimport renderList from \"../util/renderList.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\nexport { onDataLoad, onClassChange, onSubChange };\r\n\r\nfunction renderStr(string) {\r\n  let renderStack = []\r\n  renderer.recursiveEntryRender(string, renderStack, 0);\r\n  return renderStack.join(\" \");\r\n}\r\n\r\nfunction onDataLoad(classes, rootEl) {\r\n\t// alphabetically sort subclasses\r\n\tfor (const c of classes) {\r\n    if (c.subclasses) {\r\n      c.subclasses = c.subclasses.sort((a, b) => ascSort(a.name, b.name));\r\n    }\r\n\t}\r\n\r\n  // store classTable template from inital dom\r\n  window.classTableDefault = rootEl.querySelector(\"#classtable\").innerHTML;\r\n  \r\n  renderList(rootEl, classes);\r\n}\r\n\r\nfunction onClassChange(curClass, rootEl) {\r\n  rootEl.querySelector(\"#classtable\").innerHTML = window.classTableDefault;\r\n  rootEl.querySelector(\"#subclasses\").classList.remove(\"fixed\");\r\n  rootEl.querySelector(\"#subclasses\").classList.remove(\"closed\");\r\n  rootEl.querySelector(\".mobile-clone-spells\") && rootEl.querySelector(\".mobile-clone-spells\").remove();\r\n\r\n  // SUMMARY SIDEBAR =================================================================================================\r\n  // hit dice and HP\r\n  if (curClass.hd) {\r\n    rootEl.querySelector(\"#hp\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#hp div#hitdice span\").innerHTML = EntryRenderer.getEntryDice(curClass.hd);\r\n    rootEl.querySelector(\"#hp div#hp1stlevel span\").innerHTML = curClass.hd.faces + \" + your Constitution modifier\";\r\n    rootEl.querySelector(\"#hp div#hphigherlevels span\").innerHTML =\r\n      `${EntryRenderer.getEntryDice(curClass.hd)} (or ${curClass.hd.faces / 2 + 1}) + your Constitution modifier per ${\r\n        curClass.name\r\n      } level after 1st`;\r\n  } else {\r\n    rootEl.querySelector(\"#hp\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // save proficiency\r\n  if (curClass.proficiency) {\r\n    rootEl.querySelector(\"#prof\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#prof div#saves span\").innerHTML = curClass.proficiency.map(p => Parser.attAbvToFull(p)).join(\", \");\r\n  } else {\r\n    rootEl.querySelector(\"#prof\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // starting proficiencies\r\n  const sProfs = curClass.startingProficiencies;\r\n  if (sProfs) {\r\n    rootEl.querySelector(\"#armor\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#weapons\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#tools\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"#skills\").classList.remove(\"hidden\");\r\n    rootEl.querySelector(\"div#armor span\").innerHTML =\r\n      sProfs.armor === undefined\r\n        ? STR_PROF_NONE\r\n        : sProfs.armor.map(a => (a === \"light\" || a === \"medium\" || a === \"heavy\" ? a + \" armor\" : a)).join(\", \");\r\n    rootEl.querySelector(\"div#weapons span\").innerHTML =\r\n      sProfs.weapons === undefined\r\n        ? STR_PROF_NONE\r\n        : sProfs.weapons.map(w => (w === \"simple\" || w === \"martial\" ? w + \" weapons\" : w)).join(\", \");\r\n    rootEl.querySelector(\"div#tools span\").innerHTML =\r\n      sProfs.tools === undefined ? STR_PROF_NONE : sProfs.tools.join(\", \");\r\n    rootEl.querySelector(\"div#skills span\").innerHTML =\r\n      sProfs.skills === undefined ? STR_PROF_NONE : getSkillProfString(sProfs.skills);\r\n  } else {\r\n    rootEl.querySelector(\"#armor\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#weapons\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#tools\").classList.add(\"hidden\");\r\n    rootEl.querySelector(\"#skills\").classList.add(\"hidden\");\r\n  }\r\n\r\n  function getSkillProfString(skills) {\r\n    let numString, skillOptions, result = '';\r\n    // Different data structure for v2 classes\r\n    if (Array.isArray(skills)) {\r\n      for (let skill of skills) {\r\n        if (skill.choose) {\r\n          numString = Parser.numberToString(skill.choose.count);\r\n          skillOptions = skill.choose.from;\r\n          result += skillOptions.length === 18\r\n            ? `Choose any ${numString}.`\r\n            : `Choose ${numString} from ${joinConjunct(skillOptions, \", \", \", and \")}.`;\r\n        }\r\n      }\r\n    } else {\r\n      numString = Parser.numberToString(skills.choose);\r\n      skillOptions = skills.from;\r\n      result += skillOptions.length === 18\r\n        ? `Choose any ${numString}.`\r\n        : `Choose ${numString} from ${joinConjunct(skillOptions, \", \", \", and \")}.`;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // starting equipment\r\n  const sEquip = curClass.startingEquipment;\r\n  if (sEquip) {\r\n    rootEl.querySelector(\"#equipment\").classList.remove(\"hidden\");\r\n    const fromBackground = sEquip.additionalFromBackground\r\n      ? \"<p>You start with the following items, plus anything provided by your background.</p>\"\r\n      : \"\";\r\n    const defList = sEquip.default.length === 0 ? \"\" : `<ul><li>${sEquip.default.map(i => renderStr(i)).join(\"</li><li>\")}</ul>`;\r\n    const goldAlt =\r\n      sEquip.goldAlternative === undefined\r\n        ? \"\"\r\n        : `<p>Alternatively, you may start with ${renderStr(sEquip.goldAlternative)} gp to buy your own equipment.</p>`;\r\n    rootEl.querySelector(\"#equipment div\").innerHTML = `${fromBackground}${defList}${goldAlt}`;\r\n  } else {\r\n    rootEl.querySelector(\"#equipment\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // FEATURE TABLE ===================================================================================================\r\n  const tData = curClass.classTableGroups;\r\n  const groupHeaders = rootEl.querySelector(\"#groupHeaders\");\r\n  const colHeaders = rootEl.querySelector(\"#colHeaders\");\r\n  const levelTrs = [];\r\n  let spellsFlag = false;\r\n  if (tData) {\r\n    for (let i = 0; i < tData.length; i++) {\r\n      const tGroup = tData[i];\r\n\r\n      const hasTitle = tGroup.title !== undefined;\r\n      let subclassData = \"\";\r\n      if (tGroup.subclasses !== undefined) {\r\n        subclassData = `${ATB_DATA_SC_LIST}=\"${tGroup.subclasses\r\n          .map(s => s.name+ATB_DATA_PART_SEP+s.source)\r\n          .join(ATB_DATA_LIST_SEP)}\"`;\r\n      }\r\n      groupHeaders.append(parseHTML(\r\n        `<th ${hasTitle ? `class=\"colGroupTitle table-cell\"` : \"\"} colspan=\"${tGroup.colLabels.length}\" ${subclassData}>${\r\n          hasTitle ? tGroup.title : \"\"\r\n        }</th>`, true, true));\r\n\r\n      for (let j = 0; j < tGroup.colLabels.length; j++) {\r\n        let lbl = tGroup.colLabels[j];\r\n        if (lbl.indexOf(\"@\") > -1) {\r\n          let renderStack = []\r\n          renderer.recursiveEntryRender(lbl, renderStack, 0);\r\n          lbl = renderStack.join(\" \");\r\n        }\r\n        colHeaders.append(parseHTML(`<th class=\"centred-col table-cell\" ${subclassData}>${lbl}</th>`, true, true));\r\n      }\r\n\r\n      for (let j = 0; j < 20; j++) {\r\n        const tr = rootEl.querySelector(`#level${j + 1}`);\r\n        levelTrs[j] = tr;\r\n        for (let k = 0; k < tGroup.rows[j].length; k++) {\r\n          let entry = tGroup.rows[j][k];\r\n          if (entry === 0) entry = \"\\u2014\";\r\n          const stack = [];\r\n          renderer.recursiveEntryRender(entry, stack, \"\", \"\");\r\n          tr.append(parseHTML(`<td class=\"centred-col\" ${subclassData}>${stack.join(\"\")}</td>`, true, true));\r\n        }\r\n      }\r\n      let combinedLabels = tGroup.colLabels.join(' ');\r\n      if (\r\n        !spellsFlag &&\r\n        (combinedLabels.indexOf(\"Spells Known\") > -1 ||\r\n          combinedLabels.indexOf(\"Cantrips Known\") > -1 ||\r\n          combinedLabels.indexOf(\"1st\") > -1 ||\r\n          combinedLabels.indexOf(\"Ki Points\") > -1 ||\r\n          combinedLabels.indexOf(\"Rages\") > -1 ||\r\n          combinedLabels.indexOf(\"Talents Known\") > -1)\r\n      ) {\r\n        spellsFlag = true;\r\n      }\r\n    }\r\n  // uses different data structure for Fighter, since no classTableGroups\r\n  } else if (curClass.classFeatures.length) {\r\n    // for each level, find and index the feature cell\r\n    for (let i = 0; i < 20; i++) {\r\n      const tr = rootEl.querySelector(`#level${i + 1}`);\r\n      levelTrs[i] = tr;\r\n    }\r\n  }\r\n\r\n  rootEl.querySelector(\"#classtable\").classList.remove(\"mobile-clone-features\");\r\n  \r\n  // Add second feature table for mobile\r\n  if (spellsFlag) {\r\n    rootEl.querySelector(\"#classtable\").classList.add(\"mobile-clone-features\");\r\n\t\tlet mobileClone = parseHTML('<div class=\"mobile-clone-spells\"></div>');\r\n\t\tmobileClone.append(rootEl.querySelector(\"#classtable\").cloneNode(true));\r\n    mobileClone.querySelector(\"#classtable\").classList.remove(\"mobile-clone-features\");\r\n    mobileClone.querySelector(\"#groupHeaders th:not(.colGroupTitle)\").remove();\r\n    mobileClone.querySelector(\"#groupHeaders .colGroupTitle\") &&\r\n      mobileClone.querySelector(\"#groupHeaders .colGroupTitle\").setAttribute(\"colspan\", \"12\");\r\n\t\tlet colHeaderEls = mobileClone.querySelectorAll(\"#colHeaders th\");\r\n\t\tfor (let colHeaderEl of colHeaderEls) {\r\n      if (colHeaderEl.textContent.toLowerCase().indexOf(\"sneak attack\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Sneak Attack\">Snk Atk</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"sorcery points\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Sorcery Points\">SP</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"spells known\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Spells Known\">S</span>';\r\n      } else if (colHeaderEl.textContent.toLowerCase().indexOf(\"cantrips known\") > -1) {\r\n        colHeaderEl.innerHTML = '<span title=\"Cantrips Known\">C</span>';\r\n      }\r\n\t\t}\r\n    jqAfter(rootEl.querySelector(\"#classtable\"), mobileClone);\r\n  }\r\n\r\n  // FEATURE DESCRIPTIONS ============================================================================================\r\n  const renderStack = [];\r\n  let subclassIndex = 0; // the subclass array is not 20 elements\r\n  for (let i = 0; i < 20; i++) {\r\n    // track class table feature names\r\n    const tblLvlFeatures = levelTrs[i].querySelector(\".features\");\r\n    const featureNames = [];\r\n\r\n    // add class features to render stack\r\n    const lvlFeatureList = curClass.classFeatures[i];\r\n    for (let j = 0; j < lvlFeatureList.length; j++) {\r\n      const feature = lvlFeatureList[j];\r\n      const featureId = HASH_FEATURE + encodeForHash(feature.name) + \"_\" + i;\r\n\r\n      const featureLinkPart = HASH_FEATURE + encodeForHash(feature.name) + i;\r\n      const featureLinkClasses = [CLSS_FEATURE_LINK];\r\n      if (isNonstandardSource(feature.source)) featureLinkClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n      const featureLink = parseHTML(\r\n        `<a href=\"#${encodeForHash(curClass.name, curClass.source)}${HASH_PART_SEP}${featureLinkPart}\"\r\n          class=\"${featureLinkClasses.join(\" \")}\"\r\n          ${ATB_DATA_FEATURE_LINK}=\"${featureLinkPart}\"\r\n          ${ATB_DATA_FEATURE_ID}=\"${featureId}\">${feature.name}</a>`\r\n      );\r\n      featureLink.addEventListener(\"click\", function(e) {\r\n        e.preventDefault();\r\n        rootEl.getElementById(featureId).scrollIntoView(true);\r\n        let offset = -84 - jqHeight(rootEl.querySelector(\"#subclasses\"));\r\n        window.scrollBy(0, offset);\r\n      });\r\n      featureNames.push(featureLink);\r\n\r\n      const styleClasses = [CLSS_CLASS_FEATURE];\r\n      if (feature.gainSubclassFeature) styleClasses.push(CLSS_GAIN_SUBCLASS_FEATURE);\r\n\r\n      renderer.recursiveEntryRender(\r\n        feature,\r\n        renderStack,\r\n        0,\r\n        `<div id=\"${featureId}\" class=\"${styleClasses.join(\" \")}\">`,\r\n        `</div>`,\r\n        true\r\n      );\r\n\r\n      // add subclass features to render stack if appropriate\r\n      if (feature.gainSubclassFeature) {\r\n        for (let k = 0; k < curClass.subclasses.length; k++) {\r\n          const subClass = curClass.subclasses[k];\r\n          for (let l = 0; l < subClass.subclassFeatures[subclassIndex].length; l++) {\r\n            const subFeature = subClass.subclassFeatures[subclassIndex][l];\r\n\r\n            // if this is not the subclass intro, add the subclass to the feature name\r\n            // this will only be shown if there are multiple subclasses displayed\r\n            if (subFeature.name === undefined) {\r\n              for (let m = 0; m < subFeature.entries.length; m++) {\r\n                const childEntry = subFeature.entries[m];\r\n                if (\r\n                  childEntry.name !== undefined &&\r\n                  !childEntry.name.startsWith(`<span class=\"${CLSS_SUBCLASS_PREFIX}\">`)\r\n                ) {\r\n                  childEntry.name = `<span class=\"${CLSS_SUBCLASS_PREFIX}\">${subClass.name}: </span>${childEntry.name}`;\r\n                }\r\n              }\r\n            }\r\n\r\n            const styleClasses = [CLSS_SUBCLASS_FEATURE];\r\n            const hideSource =\r\n              isNonstandardSource(subClass.source) || hasBeenReprinted(subClass.shortName, subClass.source);\r\n            if (hideSource) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n            renderer.recursiveEntryRender(\r\n              subFeature,\r\n              renderStack,\r\n              0,\r\n              `<div class=\"${styleClasses.join(\" \")}\" ${ATB_DATA_SC}=\"${subClass.name}\" ${ATB_DATA_SRC}=\"${\r\n                subClass.source\r\n              }\">`,\r\n              `</div>`,\r\n              true\r\n            );\r\n          }\r\n        }\r\n        subclassIndex++;\r\n      }\r\n    }\r\n\r\n    // render class table feature names\r\n    if (featureNames.length === 0) tblLvlFeatures.innerHTML = \"\\u2014\";\r\n    else {\r\n      for (let j = 0; j < featureNames.length; j++) {\r\n        tblLvlFeatures.append(featureNames[j]);\r\n        if (j < featureNames.length - 1) tblLvlFeatures.append(\", \");\r\n      }\r\n    }\r\n  }\r\n  rootEl.querySelector(\"#stats\").innerHTML = renderStack.join(\"\");\r\n\r\n  // show UA/other features by default\r\n  toggleUAFeatures(true);\r\n\r\n  // CLASS FEATURE/UA/SUBCLASS PILL BUTTONS ==========================================================================\r\n  let subclassPillWrapper = rootEl.querySelector(\"div#subclasses\");\r\n  // remove any from previous class\r\n  jqEmpty(subclassPillWrapper);\r\n  subclassPillWrapper.append(parseHTML(`<div class='title'>Subclasses</div>`));\r\n  subclassPillWrapper.append(parseHTML(`<div class='subclass-wrapper'></div>`));\r\n  subclassPillWrapper = subclassPillWrapper.querySelector('.subclass-wrapper');\r\n\r\n  // show/hide UA/other sources\r\n  const allSourcesToggle = makeGenericTogglePill(\r\n    \"Show UA\",\r\n    CLSS_OTHER_SOURCES_ACTIVE,\r\n    ID_OTHER_SOURCES_TOGGLE,\r\n    HASH_ALL_SOURCES,\r\n    false,\r\n    true\r\n  );\r\n\r\n  // show/hide class features pill\r\n  makeGenericTogglePill(\r\n    \"Class Features\",\r\n    CLSS_CLASS_FEATURES_ACTIVE,\r\n    ID_CLASS_FEATURES_TOGGLE,\r\n    HASH_HIDE_FEATURES,\r\n    true\r\n  );\r\n\r\n  // subclass pills\r\n  if (curClass.subclasses) {\r\n    const subClasses = curClass.subclasses\r\n      .map(sc => ({ name: sc.name, source: sc.source, shortName: sc.shortName }))\r\n      .sort(function(a, b) {\r\n        return ascSort(a.shortName, b.shortName);\r\n      });\r\n    for (let i = 0; i < subClasses.length; i++) {\r\n      const nonStandardSource =\r\n        isNonstandardSource(subClasses[i].source) || hasBeenReprinted(subClasses[i].shortName, subClasses[i].source);\r\n      const styleClasses = [CLSS_ACTIVE, CLSS_SUBCLASS_PILL];\r\n      if (nonStandardSource) styleClasses.push(CLSS_NON_STANDARD_SOURCE);\r\n      const pillText = hasBeenReprinted(subClasses[i].shortName, subClasses[i].source)\r\n        ? `${subClasses[i].shortName} (${Parser.sourceJsonToAbv(subClasses[i].source)})`\r\n        : subClasses[i].shortName;\r\n      const pill = parseHTML(\r\n        `<div class=\"${styleClasses.join(\" \")}\" ${ATB_DATA_SC}=\"${subClasses[i].name}\" ${ATB_DATA_SRC}=\"${\r\n          subClasses[i].source\r\n        }\" title=\"Source: ${Parser.sourceJsonToFull(\r\n          subClasses[i].source\r\n        )}\"><span class='mdc-chip__text'>${pillText}</span></div>`\r\n      );\r\n      pill.addEventListener(\"click\", function() {\r\n        handleSubclassClick(pill.classList.contains(CLSS_ACTIVE), subClasses[i].name, subClasses[i].source);\r\n      });\r\n      if (nonStandardSource) pill.style.display = 'none';\r\n      subclassPillWrapper.append(pill);\r\n    }\r\n    subclassPillWrapper.append(parseHTML(`<div class='tab material-icons'>expand_less</div>`));\r\n\r\n    rootEl.querySelector(\"#subclasses .tab\").addEventListener(\"click\", () => {\r\n      rootEl.querySelector(\"#subclasses\").classList.toggle(\"closed\");\r\n    });\r\n\r\n    // if this is a UA class, toggle the \"All Sources\" button\r\n    const showUA = readRouteSelection().indexOf(HASH_ALL_SOURCES + 'true') > -1 || readRouteSelection().indexOf(HASH_ALL_SOURCES + 'false') === -1\r\n    if (showUA) {\r\n      allSourcesToggle.click();\r\n    }\r\n  } else {\r\n    rootEl.querySelector(\"#subclasses\").classList.add(\"hidden\");\r\n  }\r\n\r\n  // helper functions\r\n  function makeGenericTogglePill(pillText, pillActiveClass, pillId, hashKey, defaultActive, isUA) {\r\n    const pill = parseHTML(`<div id=\"${pillId}\" class=\"mdc-chip\"><span class=\"mdc-chip__text\">${pillText}</span></div>`);\r\n    subclassPillWrapper.append(pill);\r\n    pill.addEventListener(\"click\", function() {\r\n      let active = pill.classList.contains(pillActiveClass);\r\n      if (!defaultActive) active = !active;\r\n      handleToggleFeaturesClicks(active);\r\n      // enable UA features\r\n      if (isUA) {\r\n        toggleUAFeatures(active);\r\n        pill.querySelector('.mdc-chip__text').innerHTML = active ? \"Hide UA\" : \"Show UA\";\r\n      }\r\n    });\r\n    return pill;\r\n\r\n    function handleToggleFeaturesClicks(isPillActive) {\r\n      const outStack = [];\r\n      const split = readRouteSelection().split(HASH_PART_SEP);\r\n\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(hashKey)) outStack.push(hashPart);\r\n      }\r\n      if (isPillActive) {\r\n        outStack.push(hashKey + \"true\");\r\n      } else {\r\n        outStack.push(hashKey + \"false\");\r\n      }\r\n      const newHash = outStack.join(HASH_PART_SEP);\r\n      setRouteSelection(newHash, true);\r\n    }\r\n  }\r\n\r\n  function handleSubclassClick(isPillActive, subclassName, subclassSource) {\r\n    const outStack = [];\r\n    const routeSelection = readRouteSelection();\r\n    const split = routeSelection.split(HASH_PART_SEP);\r\n\r\n    const encodedSubClass = encodeForHash(subclassName, subclassSource);\r\n    const subclassLink = HASH_SUBCLASS + encodedSubClass;\r\n\r\n    if (isPillActive && routeSelection.includes(HASH_SUBCLASS)) {\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(HASH_SUBCLASS)) {\r\n\t\t\t\t\toutStack.push(hashPart);\r\n\t\t\t\t} else {\r\n          const subClassStack = [];\r\n          const subClasses = hashPart.substr(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n          for (let j = 0; j < subClasses.length; j++) {\r\n            const subClass = subClasses[j];\r\n            if (subClass !== encodedSubClass) subClassStack.push(subClass);\r\n          }\r\n          if (subClassStack.length > 0) outStack.push(HASH_SUBCLASS + subClassStack.join(HASH_LIST_SEP));\r\n        }\r\n      }\r\n    } else {\r\n      let hasSubclassHash = false;\r\n\r\n      for (let i = 0; i < split.length; i++) {\r\n        const hashPart = split[i];\r\n        if (!hashPart.startsWith(HASH_SUBCLASS)) outStack.push(hashPart);\r\n        else {\r\n          const subClassStack = [];\r\n          const subClasses = hashPart.substr(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n          for (let j = 0; j < subClasses.length; j++) {\r\n            const subClass = subClasses[j];\r\n            if (subClass !== encodedSubClass) subClassStack.push(subClass);\r\n          }\r\n          subClassStack.push(encodedSubClass);\r\n          if (subClassStack.length > 0) outStack.push(HASH_SUBCLASS + subClassStack.join(HASH_LIST_SEP));\r\n\r\n          hasSubclassHash = true;\r\n        }\r\n      }\r\n\r\n      if (!hasSubclassHash) outStack.push(subclassLink);\r\n    }\r\n    const newHash = outStack.join(HASH_PART_SEP);\r\n    setRouteSelection(newHash, true);\r\n  }\r\n\r\n  function toggleUAFeatures(active) {\r\n    let nonStandardPills = rootEl.querySelectorAll(`.${CLSS_NON_STANDARD_SOURCE}`);\r\n    for (let nonStandardPill of nonStandardPills) {\r\n      if (!nonStandardPill.classList.contains(CLSS_SUBCLASS_PILL)) {\r\n        nonStandardPill.style.display = active ? null : 'none';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSubChange(sub, curHash, rootEl) {\r\n\tlet subclasses = null;\r\n\tlet feature = null;\r\n\tlet hideClassFeatures = null;\r\n\tlet showAllSources = null;\r\n\r\n\tfor (let i = 0; i < sub.length; i++) {\r\n\t\tconst hashPart = sub[i];\r\n\r\n\t\tif (hashPart.startsWith(HASH_SUBCLASS)) subclasses = hashPart.slice(HASH_SUBCLASS.length).split(HASH_LIST_SEP);\r\n\t\tif (hashPart.startsWith(HASH_FEATURE)) feature = hashPart;\r\n\t\tif (hashPart.startsWith(HASH_HIDE_FEATURES)) hideClassFeatures = hashPart.slice(HASH_HIDE_FEATURES.length) === \"true\";\r\n\t\tif (hashPart.startsWith(HASH_ALL_SOURCES)) showAllSources = hashPart.slice(HASH_ALL_SOURCES.length) === \"true\";\r\n\t}\r\n\r\n\tconst hideOtherSources = showAllSources === null || showAllSources === false;\r\n\r\n\tif (subclasses !== null) {\r\n\t\tupdateClassTableLinks();\r\n\r\n\t\tconst $toShow = [];\r\n\t\tconst $toHide = [];\r\n\t\tconst $subClassSpanList = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PILL}`);\r\n\t\tfor (let classSpan of $subClassSpanList) {\r\n\t\t\tconst $this = classSpan;\r\n\t\t\tconst thisSc = encodeForHash($this.getAttribute(ATB_DATA_SC), $this.getAttribute(ATB_DATA_SRC));\r\n\t\t\tlet shown = false;\r\n\r\n\t\t\tfor (let j = 0; j < subclasses.length; j++) {\r\n\t\t\t\tconst sc = subclasses[j];\r\n\t\t\t\tif (sc.trim() === thisSc) {\r\n\t\t\t\t\tshown = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shown) {\r\n\t\t\t\t$toShow.push($this);\r\n\t\t\t} else {\r\n\t\t\t\t$toHide.push($this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    const otherSrcSubFeats = rootEl.querySelectorAll(`p.${CLSS_NON_STANDARD_SOURCE}`);\r\n    const shownInTable = [];\r\n\r\n    for (let v of $toShow) {\r\n      v.classList.add(CLSS_ACTIVE);\r\n      let selectedSCFeatures = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_FEATURE}[${ATB_DATA_SC}=\"${v.getAttribute(ATB_DATA_SC)}\"][${ATB_DATA_SRC}=\"${v.getAttribute(ATB_DATA_SRC)}\"]`);\r\n      for (let selectedSCFeature of selectedSCFeatures) {\r\n        selectedSCFeature.style.display = null;\r\n      }\r\n      if (hideOtherSources) {\r\n        for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n          if (\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n          ) {\r\n            otherSrcSubFeat.style.display = \"none\";\r\n          }\r\n        }\r\n      } else {\r\n        for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n          if (\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n            otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n          ) {\r\n            otherSrcSubFeat.style.display = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      const asInTable = v.getAttribute(ATB_DATA_SC) + ATB_DATA_PART_SEP + v.getAttribute(ATB_DATA_SRC);\r\n      shownInTable.push(asInTable);\r\n      handleTableGroups(shownInTable, asInTable, true);\r\n    }\r\n\r\n    for (let v of $toHide) {\r\n      v.classList.remove(CLSS_ACTIVE);\r\n      let selectedSCFeatures = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_FEATURE}[${ATB_DATA_SC}=\"${v.getAttribute(ATB_DATA_SC)}\"][${ATB_DATA_SRC}=\"${v.getAttribute(ATB_DATA_SRC)}\"]`);\r\n      for (let selectedSCFeature of selectedSCFeatures) {\r\n        selectedSCFeature.style.display = 'none';\r\n      }\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === v.getAttribute(ATB_DATA_SC) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === v.getAttribute(ATB_DATA_SRC)\r\n        ) {\r\n          otherSrcSubFeat.style.display = \"none\";\r\n        }\r\n      }\r\n      v.getAttribute(ATB_DATA_SC);\r\n      const asInTable = v.getAttribute(ATB_DATA_SC) + ATB_DATA_PART_SEP + v.getAttribute(ATB_DATA_SRC);\r\n      handleTableGroups(shownInTable, asInTable, false);\r\n    };\r\n\r\n    if (hideOtherSources) {\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          !otherSrcSubFeat.classList.contains(CLSS_SUBCLASS_FEATURE) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === EntryRenderer.DATA_NONE &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === EntryRenderer.DATA_NONE\r\n        ) {\r\n          otherSrcSubFeat.style.display = \"none\";\r\n        }\r\n      }\r\n    } else {\r\n      for (let otherSrcSubFeat of otherSrcSubFeats) {\r\n        if (\r\n          !otherSrcSubFeat.classList.contains(CLSS_SUBCLASS_FEATURE) &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SC) === EntryRenderer.DATA_NONE &&\r\n          otherSrcSubFeat.getAttribute(ATB_DATA_SRC) === EntryRenderer.DATA_NONE\r\n        ) {\r\n          otherSrcSubFeat.style.display = null;\r\n        }\r\n      }\r\n    }\r\n\r\n\t\t// show subclass prefixes if we're displaying more than 1 subclass\r\n\t\tlet subClassEls = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PREFIX}`);\r\n\t\tif ($toShow.length !== 1) {\r\n\t\t\tfor (let subClassEl of subClassEls) {\r\n\t\t\t\tsubClassEl.style.display = null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let subClassEl of subClassEls) {\r\n\t\t\t\tsubClassEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// hide class features as required\r\n\tconst cfToggle = rootEl.querySelector(`#${ID_CLASS_FEATURES_TOGGLE}`);\r\n\tconst toToggleCf= rootEl.querySelectorAll(`.${CLSS_CLASS_FEATURE}`);\r\n\tif (hideClassFeatures !== null && hideClassFeatures) {\r\n\t\tcfToggle.classList.remove(CLSS_CLASS_FEATURES_ACTIVE);\r\n\t\tfor (let el of toToggleCf) {\r\n\t\t\tif (!el.classList.contains(CLSS_GAIN_SUBCLASS_FEATURE)) {\r\n        el.style.display = \"none\";\r\n      }\r\n\t\t}\r\n\t} else {\r\n\t\tcfToggle.classList.add(CLSS_CLASS_FEATURES_ACTIVE);\r\n\t\tfor (let el of toToggleCf) {\r\n\t\t\tif (!el.classList.contains(CLSS_GAIN_SUBCLASS_FEATURE)) {\r\n        el.style.display = null;\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\t// show UA/etc content as required\r\n\tconst srcToggle = rootEl.querySelector(`#${ID_OTHER_SOURCES_TOGGLE}`);\r\n\tconst toToggleSrc = rootEl.querySelectorAll(`.${CLSS_SUBCLASS_PILL}.${CLSS_NON_STANDARD_SOURCE}`);\r\n\tif (hideOtherSources) {\r\n\t\tsrcToggle.classList.remove(CLSS_OTHER_SOURCES_ACTIVE);\r\n\t\tfor (let el of toToggleSrc) {\r\n\t\t\tel.style.display = \"none\";\r\n\t\t}\r\n\t} else {\r\n\t\tsrcToggle.classList.add(CLSS_OTHER_SOURCES_ACTIVE);\r\n\t\tfor (let el of toToggleSrc) {\r\n\t\t\tel.style.display = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// scroll to the linked feature if required\r\n\tif (feature !== null && (window.prevFeature === undefined || window.prevFeature !== feature)) {\r\n\t\trootEl.getElementById(rootEl.querySelectorAll(`[${ATB_DATA_FEATURE_LINK}=\"${feature}\"]`).getAttribute(ATB_DATA_FEATURE_ID)).scrollIntoView();\r\n\t\twindow.prevFeature = feature;\r\n\t}\r\n\r\n\tupdateClassTableLinks();\r\n\r\n\tfunction handleTableGroups(shownInTable, tableDataTag, show) {\r\n\t\tlet listEls = rootEl.querySelectorAll(`[data-subclass-list]`);\r\n\t\tfor (let el of listEls) {\r\n\t\t\tconst $this = el;\r\n\t\t\tconst scs = $this.getAttribute(ATB_DATA_SC_LIST).split(ATB_DATA_LIST_SEP);\r\n\r\n\t\t\t// if another class has shown this item, don't hide it\r\n\t\t\tif (!show) {\r\n\t\t\t\tfor (let i = 0; i < scs.length; i++) {\r\n\t\t\t\t\tconst sc = scs[i];\r\n\t\t\t\t\tif (sc.indexOf(shownInTable) > -1) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < scs.length; i++) {\r\n\t\t\t\tconst sc = scs[i];\r\n\t\t\t\tif (sc === tableDataTag) {\r\n\t\t\t\t\tif (show) $this.style.display = null;\r\n\t\t\t\t\telse $this.style.display = 'none';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateClassTableLinks () {\r\n\t\tconst hashParts = curHash.slice(1).split(HASH_PART_SEP);\r\n\t\tconst outParts = [];\r\n\t\tfor (let i = 0; i < hashParts.length; i++) {\r\n\t\t\tconst part = hashParts[i];\r\n\t\t\tif (!part.startsWith(HASH_FEATURE)) outParts.push(part);\r\n\t\t}\r\n\t\tlet els = rootEl.querySelectorAll(`.${CLSS_FEATURE_LINK}`);\r\n\t\tfor (let el of els) {\r\n\t\t\tel.href = HASH_START+outParts.join(HASH_PART_SEP)+HASH_PART_SEP+el.getAttribute(ATB_DATA_FEATURE_LINK);\r\n\t\t}\r\n\t}\r\n}\r\n","import { setRouteSelection } from \"./routing\";\nimport { encodeForHash, parseHTML } from \"../js/utils\";\n\nexport default function renderList(rootEl, items) {\n  const container = rootEl.querySelector('.class-container');\n  container.appendChild(parseHTML(\"<div class='list-container'></div>\"))\n  const listWrapper = container.querySelector('.list-container');\n\n  let htmlString = \"\";\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst curItem = items[i];\n\t\tlet svg = curItem.name.replace(/(\\s|\\(|\\))/g, \"\");\n\n\t\thtmlString += \n\t\t\t`<div class='list-item history-link grid-item__${svg}'\n\t\t\t\tdata-link='${encodeForHash(curItem.name, curItem.source)}' data-title='${curItem.name}'>\n\t\t\t\t<dnd-svg id='${svg}' class='list-item--image grid-item__${svg}'></dnd-svg>\n\t\t\t\t<span class='list-item--text'>${curItem.name}</span>\n\t\t\t</div>`\n\t}\n\tlet itemElements = parseHTML(htmlString);\n\twhile (itemElements.length > 0) {\n\t\titemElements[0].addEventListener(\"click\", (e) => {\n\t\t\tlet tar = e.target.closest(\".list-item\");\n      setRouteSelection(tar.getAttribute(\"data-link\"));\n    });\n\t\tlistWrapper.appendChild(itemElements[0]);\n\t}\n};"],"sourceRoot":""}