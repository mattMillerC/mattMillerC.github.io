{"version":3,"sources":["webpack:///./components/dnd-list.js","webpack:///./components/dnd-selected-item.js","webpack:///./components/dnd-selection-list.js","webpack:///./lib/droll.js","webpack:///./node_modules/@polymer/polymer/lib/elements/dom-repeat.js","webpack:///./js/dice.js","webpack:///./js eager ^\\.\\/.*\\.js$ namespace object","webpack:///./js/backgrounds.js","webpack:///./js/bestiary.js","webpack:///./js/conditions.js","webpack:///./js/cults.js","webpack:///./js/feats.js","webpack:///./js/items.js","webpack:///./js/psionics.js","webpack:///./js/races.js","webpack:///./js/rewards.js","webpack:///./js/spells.js","webpack:///./js/variantrules.js"],"names":["columns","type","Array","data","observer","super","connectedCallback","this","shadowRoot","querySelector","renderTable","_setSelectionListeners","links","querySelectorAll","link","addEventListener","e","selectionId","target","closest","getAttribute","id","cssClass","customElements","define","modelId","String","selectedItem","Object","loading","Boolean","value","_modelsRenderSelection","Function","dispatchEvent","CustomEvent","bubbles","composed","detail","set","undefined","then","module","renderSelection","console","error","catch","thing","enableHashRouting","reflectToAttribute","disableScrollBack","hasSelection","_data","_selectedItem","_selectedHash","selectionEventHandler","_checkHashForSelection","selection","deselectionEventHandler","disconnectedCallback","removeEventListener","result","newSelection","hashSelection","isArray","itemFromHash","window","scrollTo","title","name","droll","DrollFormula","numDice","numSides","modifier","minResult","maxResult","avgResult","DrollResult","rolls","total","prototype","toString","length","join","Math","abs","parse","i","t","l","match","validate","roll","o","floor","random","r","domRepeatBase","DomRepeat","items","as","indexAs","itemsIndexAs","sort","filter","observe","delay","Number","renderedItemCount","notify","readOnly","initialCount","targetFramerate","_targetFrameTime","computed","__instances","__limit","Infinity","__pool","__renderDebouncer","__itemsIdxToInstIdx","__chunkCount","__lastChunkTime","__sortFn","__filterFn","__observePaths","__ctor","__isDetached","template","__detachInstance","style","display","wrappedParent","parentNode","__attachInstance","MutationObserver","Error","disconnect","__render","childList","instanceProps","mutableData","parentModel","forwardHostProp","prop","i$","inst","notifyInstanceProp","idx","path","JSCompiler_renameProperty","notifyPath","__dataHost","_methodHost","functionOrMethodName","methodName","obj","__getMethodHost","apply","arguments","__functionFromPropertyValue","__debounceRender","rate","ceil","performance","now","__requestRenderChunk","requestAnimationFrame","__renderChunk","currChunkTime","ratio","round","replace","split","change","warn","__handleItemPath","__initializeChunking","paths","indexOf","fn","debounce","after","bind","__ensureTemplatized","__applyFullRefresh","_setRenderedItemCount","__tryRenderChunk","isntIdxToItemsIdx","array","a","b","itemsIdxToInstIdx","instIdx","limit","min","itemIdx","item","_setPendingProperty","_flushProperties","__insertInstance","__detachAndRemoveInstance","wrappedRoot","root","children","el","appendChild","parent","insertBefore","push","splice","model","pop","__stampInstance","beforeRow","beforeNode","hidden","_showHideChildren","itemsPath","slice","dot","itemsIdx","substring","parseInt","itemSubPath","__handleObservedPaths","itemPath","_setPendingPropertyOrPath","instance","modelForElement","is","onLoad","rootEl","outputEl","historyIndex","diceField","useNativeValidation","outputRollResult","rollResult","newOutput","addRollHandler","innerHTML","classList","add","preventDefault","remove","focus","keyCode","which","historyCount","click","keyData","originalEvent","map","webpackAsyncContext","req","webpackAsyncContextResolve","__webpack_require__","Promise","resolve","code","keys","exports","renderer","curbg","allBgs","source","sourceAbv","sourceJsonToAbv","sourceFull","sourceJsonToFull","sourceEl","setAttribute","entries","n","entry","outStack","recursiveEntryRender","texthtml","collapseList","traitTables","statsEl","setTimeout","list","getProfBonusFromCr","cr","CR_TO_PROF","SKILL_TO_ATB_ABV","athletics","acrobatics","stealth","arcana","history","investigation","nature","religion","insight","medicine","perception","survival","deception","intimidation","persuasion","mon","renderStack","entryList","monsterName","_pTypes","asText","sizeAbvToFull","size","getAbilityModifier","str","dex","con","int","wis","cha","saves","save","parentElement","skills","skill","k","uppercaseFirst","dmgvuln","vulnerable","dmgres","resist","dmgimm","immune","conimm","conditionImmune","senses","passive","languages","crToXp","traits","trait","traitname","traittext","text","traittexthtml","renderedcount","firstsecond","spells","newTrait","spellLinks","spellLink","spellslist","encodeURIComponent","toLowerCase","actions","action","actionname","actiontext","actiontexthtml","newAction","reactions","reaction","reactionname","reactiontext","reactiontexthtml","newNonReaction","newReaction","legendaries","legendary","shouldAddCap","legendaryname","legendarytext","legendarytexthtml","newLegendary","trim","legendaryActions","legendaryName","newLegendaryCap","renderSection","sectionClass","sectionEntries","newThing","renderSkillOrSaveRoller","itemName","profBonusString","profDiceString","isSave","lairActions","regionalEffects","element","$this","s","out","spl","skillName","skillString","bonus","fromAbility","getAbilityModNumber","pB","expert","makeSkillRoller","pBonusStr","pDiceStr","makeSaveRoller","statPEls","statPEl","addNonD20Rollers","titleMaybe","attemptToGetTitle","mode","expectedPB","withoutPB","capture","dc","ele","statsRollerEls","statsRollerEl","multi","res2","concat","statsDCRollerEls","statsDCRollerEl","$ele","newResult","MAX_ROLLS","curcondition","curcult","textlist","goal","cultists","signaturespells","feat","prerequisite","ability","hasabilityitem","unshift","outstack","page","weight","tier","rarity","reqAttune","weaponCategory","dmg1","dmgType","dmgTypeToFull","ac","speed","capacity","carryingcapacity","append","property","properties","itemPropertyList","dmg2","range","reload","selectedPsionic","STATS_ORDER_AND_TYPE","STATS_DURATION","STATS_TEXT","getModeString","modeIndex","modeString","modes","getModeTitle","submodes","modeStrings","subModes","getSubModeString","subMode","modeTitleArray","bracketPart","modeTitleBracketArray","cost","costMin","costMax","max","getModeTitleCost","concentration","duration","unit","getModeTitleBracketPart","order","modeStringArray","description","getTextString","loadDiscipline","race","walk","climb","fly","traitlist","statsText","header","faux","reward","spell","spLevelSchoolMetaToFull","level","school","meta","spTimeListToFull","time","spRangeToFull","spComponentsToFull","components","spDurationToFull","entriesHigherLevel","higherLevelsEntryList","spMainClassesToFull","classes","fromSubclass","currentAndLegacy","spSubclassesToCurrentAndLegacyFull","scrollNote","entryRenderer","curRule","textStack"],"mappings":"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","file":"2.bundle.js","sourcesContent":["import {PolymerElement, html} from '@polymer/polymer';\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCNotchedOutline } from \"@material/notched-outline\";\nimport { renderTable } from \"../util/renderTable.js\";\nimport './styles/material-styles.js';\nimport \"./styles/my-styles.js\";\nimport \"./dnd-spinner.js\";\nimport { setRouteSelection } from '../util/routing.js';\n\nclass DndList extends PolymerElement {\n  static get properties() {\n    return {\n      columns: {\n        type: Array\n      },\n      data: {\n        type: Array,\n        observer: '_dataChange'\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    new MDCTextField(this.shadowRoot.querySelector(\".mdc-text-field\"));\n    new MDCNotchedOutline(this.shadowRoot.querySelector(\".mdc-notched-outline\"));\n  }\n\n  _dataChange() {\n    if (this.data) {\n      renderTable(this.data, this.shadowRoot, this.columns);\n      this._setSelectionListeners();\n    }\n  }\n\n  _setSelectionListeners() {\n    const links = this.shadowRoot.querySelectorAll(\".history-link\");\n    for (let link of links) {\n      link.addEventListener(\"click\", e => {\n        const linkEl = e.target.closest('.history-link');\n        const selectionId = linkEl.getAttribute(\"data-link\");\n        setRouteSelection(selectionId);\n      });\n    }\n  }\n\n  _columnHeaderCssClass(id, cssClass) {\n    return `sort ${id ? id : \"\"} ${cssClass ? cssClass : \"\"}`;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <div id=\"listcontainer\">\n        <div id=\"filter-search-input-group\" class=\"filter-group\">\n          <div class=\"mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon\">\n            <i class=\"material-icons mdc-text-field__icon mdc-theme--primary\">search</i>\n            <input type=\"search\" id=\"search-field\" class=\"mdc-text-field__input search\" />\n            <div class=\"mdc-notched-outline\">\n              <div class=\"mdc-notched-outline__leading\"></div>\n              <div class=\"mdc-notched-outline__notch\">\n                <label for=\"search-field\" class=\"mdc-floating-label\">Search</label>\n              </div>\n              <div class=\"mdc-notched-outline__trailing\"></div>\n            </div>\n          </div>\n          <div class=\"filter-group--buttons\">\n            <button class=\"mdc-button mdc-button--raised\" id=\"reset\">\n              <span class=\"mdc-button__label\">Reset</span>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"table-wrap mdc-elevation--z6\">\n          <div class=\"table--scroll\">\n            <table class=\"table\">\n              <thead>\n                <tr class=\"table-row table-row--header\">\n                  <template is=\"dom-repeat\" items=\"[[columns]]\">\n                    <th class$=\"[[_columnHeaderCssClass(item.id, item.cssClass)]]\" data-sort$=\"[[item.id]]\">\n                      <div class=\"table-cell\">[[item.label]]</div>\n                    </th>\n                  </template>\n                </tr>\n              </thead>\n              <tbody class=\"list\"></tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-list', DndList);","import {PolymerElement, html} from '@polymer/polymer';\nimport \"./styles/material-styles.js\";\nimport \"./styles/my-styles.js\";\nimport \"./dnd-spinner.js\";\nimport {initCollapseToggles} from '../js/utils.js';\nimport { clearRouteSelection } from '../util/routing.js';\n\nclass DndSelectedItem extends PolymerElement {\n  static get properties() {\n    return {\n      modelId: {\n        type: String,\n        observer: \"_modelChange\"\n      },\n      selectedItem: {\n        type: Object\n      },\n      loading: {\n        type: Boolean,\n        value: false,\n        observer: \"_loadingChange\"\n      },\n      _modelsRenderSelection: {\n        type: Function\n      }\n    };\n  }\n\n  static get observers() {\n    return [\"__renderSelection(_modelsRenderSelection, selectedItem)\"];\n  }\n  \n  _loadingChange() {\n    this.dispatchEvent(new CustomEvent(\"loading-render\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        loading: this.loading\n      }\n    }));\n  }\n\n  __renderSelection() {\n    if (this._modelsRenderSelection && this.selectedItem) {\n      this._modelsRenderSelection(this.selectedItem, this.shadowRoot);\n      initCollapseToggles(this.shadowRoot);\n    }\n  }\n\n  _modelChange() {\n    if (this.modelId) {\n      this.loading = true;\n      this.set(\"_modelsRenderSelection\", undefined);\n\n      // Dynamically load the model page's renderSelection JS\n      import(/* webpackMode: \"eager\" */ `../js/${this.modelId}.js`)\n        .then(module => {\n          if (typeof module.renderSelection === \"function\") {\n            this._modelsRenderSelection = module.renderSelection;\n            this.loading = false;\n          } else {\n            console.error(\"Model module is missing the renderSelection export.\");\n          }\n        })\n        .catch(e => {\n          console.error(\"Model module failed to load.\", e);\n        });\n    }\n  }\n\n  _exists(thing) {\n    return !!thing;\n  }\n\n  _mainClass() {\n    return this.selectedItem ? \"main item-opened\" : \"main\";\n  }\n\n  clearSelection() {\n    clearRouteSelection(true);\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <div class$=\"[[_mainClass(selectedItem)]]\">\n        <button class=\"mdc-icon-button close-item material-icons\" on-click=\"clearSelection\">close</button>\n        <div class=\"selection-wrapper\"></div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-selected-item', DndSelectedItem);","import {PolymerElement, html} from '@polymer/polymer';\nimport \"./dnd-list.js\";\nimport \"./dnd-selected-item.js\";\nimport loadModel from \"../util/data.js\";\nimport { resolveHash } from \"../util/renderTable.js\";\nimport { readRouteSelection, routeEventChannel, clearRouteSelection } from '../util/routing.js';\n\nclass DndSelectionList extends PolymerElement {\n  static get properties() {\n    return {\n      modelId: {\n        type: String,\n        observer: \"_modelChange\"\n      },\n      columns: {\n        type: Array\n      },\n      enableHashRouting: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      disableScrollBack: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      hasSelection: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      _data: {\n        type: Array\n      },\n      _selectedItem: {\n        type: Object\n      },\n      _selectedHash: {\n        type: String\n      },\n      loading: {\n        type: Boolean,\n        value: true,\n        observer: '_loadingChange'\n      }\n    };\n  }\n\n  _loadingChange() {\n    this.dispatchEvent(new CustomEvent(\"loading-data\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        loading: this.loading\n      }\n    }));\n  }\n\n  /**\n   * Connects to route eventing channel and checks for loaded selection\n   * from hash.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectionEventHandler = (e) => {\n      this._checkHashForSelection(e.detail.selection);\n    };\n\n    this.deselectionEventHandler = () => {\n      this._selectedItem = undefined;\n      this.hasSelection = false;\n    };\n\n    // In case the list data has already been loaded, check if the hash is there\n    this._checkHashForSelection();\n\n    routeEventChannel().addEventListener(\"selection-change\", this.selectionEventHandler);\n    routeEventChannel().addEventListener(\"selection-deselected\", this.deselectionEventHandler);\n    routeEventChannel().addEventListener(\"view-change\", this.deselectionEventHandler);\n  }\n\n  /**\n   * Disconnects from route eventing channel.\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    routeEventChannel().removeEventListener(\"selection-change\", this.selectionEventHandler);\n    routeEventChannel().removeEventListener(\"selection-deselected\", this.deselectionEventHandler);\n  }\n\n  /**\n   * Loads the JSON data for the given modelId, then checks to see if \n   * the current routed selection is present in the data.\n   */\n  _modelChange() {\n    if (this.modelId) {\n      this.set(\"_data\", undefined);\n      this.loading = true;\n\n      loadModel(this.modelId)\n        .then(result => {\n          this.set(\"_data\", result);\n          this._checkHashForSelection();\n          this.loading = false;\n        })\n        .catch(e => {\n          console.error(\"Model requested for list did not return.\", e);\n        });\n    }\n  }\n\n  /**\n   * Looks through the loaded Data array for an item that matches the \n   * selection string.\n   * @param {String} [newSelection] Optional. If selection isn't provided,\n   * checks the current hash for the second pathed variable.\n   */\n  _checkHashForSelection(newSelection) {\n    let hashSelection = newSelection;\n    if (!hashSelection) {\n      hashSelection = readRouteSelection();\n    }\n    if (hashSelection && this.enableHashRouting && Array.isArray(this._data)) {\n      const itemFromHash = resolveHash(this._data, hashSelection);\n      if (itemFromHash) {\n        this.set(\"_selectedItem\", itemFromHash);\n        this.hasSelection = true;\n        if (!this.disableScrollBack) {\n          window.scrollTo(0, 0);\n        }\n        this.dispatchEvent(new CustomEvent(\"title-change\", {\n          bubbles: true,\n          composed: true,\n          detail: { title: itemFromHash.name }\n        }));\n      } else {\n        clearRouteSelection(true);\n      }\n    }\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([has-selection]) dnd-list {\n          display: none;\n        }\n        @media(min-width: 921px) {\n          dnd-list {\n            display: block !important;\n          }\n        }\n      </style>\n      <dnd-selected-item model-id=\"[[modelId]]\" selected-item=\"[[_selectedItem]]\"></dnd-selected-item>\n      <dnd-list data=\"[[_data]]\" columns=\"[[columns]]\"></dnd-list>\n    `;\n  }\n}\n\ncustomElements.define('dnd-selection-list', DndSelectionList);","/*! droll v0.2.1  http://github.com/thebinarypenguin/droll */\r\nvar droll={};function DrollFormula(){this.numDice=0,this.numSides=0,this.modifier=0,this.minResult=0,this.maxResult=0,this.avgResult=0}function DrollResult(){this.rolls=[],this.modifier=0,this.total=0}DrollResult.prototype.toString=function(){return 1===this.rolls.length&&0===this.modifier?this.rolls[0]+\"\":1<this.rolls.length&&0===this.modifier?this.rolls.join(\" + \")+\" = \"+this.total:1===this.rolls.length&&0<this.modifier?this.rolls[0]+\" + \"+this.modifier+\" = \"+this.total:1<this.rolls.length&&0<this.modifier?this.rolls.join(\" + \")+\" + \"+this.modifier+\" = \"+this.total:1===this.rolls.length&&this.modifier<0?this.rolls[0]+\" - \"+Math.abs(this.modifier)+\" = \"+this.total:1<this.rolls.length&&this.modifier<0?this.rolls.join(\" + \")+\" - \"+Math.abs(this.modifier)+\" = \"+this.total:void 0},droll.parse=function(i){var t,l=new DrollFormula;return!!(t=i.match(/^([1-9]\\d*)?d([1-9]\\d*)([+-]\\d+)?$/i))&&(l.numDice=+t[1]||1,l.numSides=+t[2],l.modifier=+t[3]||0,l.minResult=+l.numDice+l.modifier,l.maxResult=l.numDice*l.numSides+l.modifier,l.avgResult=(l.maxResult+l.minResult)/2,l)},droll.validate=function(i){return!!droll.parse(i)},droll.roll=function(i){var t,l=new DrollResult;if(!(t=droll.parse(i)))return!1;for(var o=0;o<t.numDice;o++)l.rolls[o]=1+Math.floor(Math.random()*t.numSides);l.modifier=t.modifier;for(var r=0;r<l.rolls.length;r++)l.total+=l.rolls[r];return l.total+=l.modifier,l};\r\nexport default droll;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {PolymerElement}\n * @private\n */\nconst domRepeatBase = OptionalMutableData(PolymerElement);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <dom-repeat items=\"{{employees}}\">\n *       <template>\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *       </template>\n *     </dom-repeat>\n *\n *   </template>\n *\n * </dom-module>\n * ```\n *\n * With the following custom element definition:\n *\n * ```js\n * class EmployeeList extends PolymerElement {\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n * }\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,\n * `shift`, `unshift`), and template instances will be kept in sync with the\n * data in the array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model should be used to manipulate data on the\n * instance, for example `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer(item) {\n *   return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @extends {domRepeatBase}\n * @appliesMixin OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nexport class DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time in ms after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffling of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: true,\n        readOnly: true\n      },\n\n      /**\n       * Defines an initial count of template instances to render after setting\n       * the `items` array, before the next paint, and puts the `dom-repeat`\n       * into \"chunking mode\".  The remaining items will be created and rendered\n       * incrementally at each animation frame therof until all instances have\n       * been rendered.\n       */\n      initialCount: {\n        type: Number,\n        observer: '__initializeChunking'\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate (in\n       * fps) to target by throttling the number of instances rendered each\n       * frame to not exceed the budget for the target frame rate.  The\n       * framerate is effectively the number of `requestAnimationFrame`s that\n       * it tries to allow to actually fire in a given second. It does this\n       * by measuring the time between `rAF`s and continuously adjusting the\n       * number of items created each `rAF` to maintain the target framerate.\n       * Setting this to a higher number allows lower latency and higher\n       * throughput for event handlers and other tasks, but results in a\n       * longer time for the remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__limit = Infinity;\n    this.__pool = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__lastChunkTime = null;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    /** @type {?function(new:TemplateInstanceBase, Object=)} */\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let wrappedParent = wrap(wrap(this).parentNode);\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, wrappedParent);\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      let template = this.template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n      if (!template) {\n        // // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {DomRepeat}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {DomRepeat}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __functionFromPropertyValue(functionOrMethodName) {\n    if (typeof functionOrMethodName === 'string') {\n      let methodName = functionOrMethodName;\n      let obj = this.__getMethodHost();\n      return function() { return obj[methodName].apply(obj, arguments); };\n    }\n\n    return functionOrMethodName;\n  }\n\n  __sortChanged(sort) {\n    this.__sortFn = this.__functionFromPropertyValue(sort);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __filterChanged(filter) {\n    this.__filterFn = this.__functionFromPropertyValue(filter);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __initializeChunking() {\n    if (this.initialCount) {\n      this.__limit = this.initialCount;\n      this.__chunkCount = this.initialCount;\n      this.__lastChunkTime = performance.now();\n    }\n  }\n\n  __tryRenderChunk() {\n    // Debounced so that multiple calls through `_render` between animation\n    // frames only queue one new rAF (e.g. array mutation & chunked render)\n    if (this.items && this.__limit < this.items.length) {\n      this.__debounceRender(this.__requestRenderChunk);\n    }\n  }\n\n  __requestRenderChunk() {\n    requestAnimationFrame(()=>this.__renderChunk());\n  }\n\n  __renderChunk() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio\n    // of target/actual frame time\n    let currChunkTime = performance.now();\n    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    this.__limit += this.__chunkCount;\n    this.__lastChunkTime = currChunkTime;\n    this.__debounceRender(this.__render);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (returns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a full refresh\n      this.__initializeChunking();\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  __handleObservedPaths(path) {\n    // Handle cases where path changes should cause a re-sort/filter\n    if (this.__sortFn || this.__filterFn) {\n      if (!path) {\n        // Always re-render if the item itself changed\n        this.__debounceRender(this.__render, this.delay);\n      } else if (this.__observePaths) {\n        // Otherwise, re-render if the path changed matches an observed path\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    this.__applyFullRefresh();\n    // Reset the pool\n    // TODO(kschaaf): Reuse pool across turns and nested templates\n    // Now that objects/arrays are re-evaluated when set, we can safely\n    // reuse pooled instances across turns, however we still need to decide\n    // semantics regarding how long to hold, how many to hold, etc.\n    this.__pool.length = 0;\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n    // Check to see if we need to render more items\n    this.__tryRenderChunk();\n  }\n\n  __applyFullRefresh() {\n    let items = this.items || [];\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx = 0;\n    // Generate instances and assign items\n    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n    for (; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    const wrappedRoot = wrap(inst.root);\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      wrappedRoot.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    // Note, this is pre-wrapped as an optimization\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    let inst = this.__detachInstance(idx);\n    if (inst) {\n      this.__pool.push(inst);\n    }\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    let inst = this.__pool.pop();\n    if (inst) {\n      // TODO(kschaaf): If the pool is shared across turns, hostProps\n      // need to be re-set to reused instances in addition to item\n      inst._setPendingProperty(this.as, item);\n      inst._setPendingProperty(this.indexAs, instIdx);\n      inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n      inst._flushProperties();\n    } else {\n      inst = this.__stampInstance(item, instIdx, itemIdx);\n    }\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hidden Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {!HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {!HTMLElement} el Element for which to return the index.\n   * @return {?number} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {!HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n","import { parseHTML, jqPrepend } from './utils.js';\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCNotchedOutline } from \"@material/notched-outline\";\nimport droll from \"../lib/droll.js\";\n\nfunction onLoad(rootEl) {\n  let outputEl = rootEl.querySelector(\"div#output\");\n  let total = 0,\n  historyIndex = -1;\n  \n  let diceField = new MDCTextField(rootEl.querySelector(\".mdc-text-field\"));\n  new MDCNotchedOutline(rootEl.querySelector(\".mdc-notched-outline\"));\n  \n  diceField.useNativeValidation = false;\n  \n  let outputRollResult = (roll) => {\n    let rollResult = droll.roll(roll.replace(/\\s/g, \"\"));\n    if (rollResult) {\n      let newOutput = parseHTML(`<div>\n        <em><a class='roll' data-roll='${roll}'>${roll}</a></em> rolled for <strong>${rollResult.total}</strong>${rollResult.rolls.length > 1 ? `<br>(${rollResult.rolls.join(\", \")})` : ''}\n        </div>`)\n      \n      jqPrepend(outputEl, newOutput);\n      outputEl.style.display = null;\n      addRollHandler(newOutput);\n\n      total += rollResult.total;\n      rootEl.querySelector('#total').innerHTML = total;\n      rootEl.querySelector(\".roll-total-wrap\").style.display = null;\n      rootEl.querySelector(\".roll-clear\").style.display = null;\n      diceField.value = \"\";\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n  };\n  \n  rootEl.querySelector(\".roll-clear\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    outputEl.innerHTML = '';\n    rootEl.querySelector(\".roll-total-wrap\").style.display = 'none';\n    rootEl.querySelector(\".roll-clear\").style.display = \"none\";\n    total = 0;\n  });\n  \n  rootEl.querySelector(\".roll-submit\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.remove(\"error\");\n    let roll = rootEl.querySelector(\".roll-field\").value;\n    if (roll) {\n      outputRollResult(roll);\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n    rootEl.querySelector(\".roll-field\").focus();\n  });\n  \n  rootEl.querySelector(\".roll-field\").addEventListener(\"keydown\", e => {\n    let keyCode = e.keyCode || e.which,\n    historyCount = rootEl.querySelectorAll(\"#output > div\").length;\n    \n    // up\n    if (keyCode === 38) {\n      e.preventDefault();\n      if (historyIndex + 1 < historyCount) {\n        historyIndex++;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // down\n    } else if (keyCode === 40) {\n      e.preventDefault();\n      if (historyIndex - 1 > -1) {\n        historyIndex--;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // enter\n    } else if (keyCode === 13) {\n      e.preventDefault();\n      rootEl.querySelector(\".roll-submit\").click();\n      \n      // comma or period\n    } else if (keyCode === 190 || keyCode === 188) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyCode === 32 || keyCode === 189 || keyCode === 187) {\n      e.preventDefault();\n      diceField.value = diceField.value + \" + \";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"submit\", e => {\n    e.preventDefault();\n    rootEl.querySelector(\".roll-submit\").click();\n  })\n  rootEl.querySelector(\".roll-field\").addEventListener(\"textInput\", e => {\n    var keyData = e.originalEvent.data;\n    if (keyData && (keyData === \".\" || keyData === \",\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyData && (keyData === \" \" || keyData === \"+\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"+\";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"focus\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = null;\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"blur\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = 'none';\n  });\n\n  let rolls = rootEl.querySelectorAll(\".roll[data-roll]\");\n  for (let roll of rolls) {\n    addRollHandler(roll);\n  }\n  \n  function addRollHandler(roll) {\n    roll.addEventListener(\"click\", e => {\n      e.preventDefault();\n\n      let roll = e.target.closest(\".roll\").getAttribute(\"data-roll\");\n      if (roll) {\n        outputRollResult(roll);\n      }\n    });\n  }\n};\n\nexport { onLoad };","var map = {\n\t\"./backgrounds.js\": 68,\n\t\"./bestiary.js\": 69,\n\t\"./classes.js\": 65,\n\t\"./conditions.js\": 70,\n\t\"./cults.js\": 71,\n\t\"./dice.js\": 61,\n\t\"./feats.js\": 72,\n\t\"./items.js\": 73,\n\t\"./psionics.js\": 74,\n\t\"./races.js\": 75,\n\t\"./rewards.js\": 76,\n\t\"./spells.js\": 77,\n\t\"./utils.js\": 3,\n\t\"./variantrules.js\": 78\n};\n\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(__webpack_require__);\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = 67;\nmodule.exports = webpackAsyncContext;","import {parseHTML, jqHeight, jqPrepend } from \"../js/utils.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"stats margin-bottom_small\"></div>\r\n\t\t<div class=\"table-container collapse collapse--left-arrow disabled\">\r\n\t\t\t<div class=\"collapse-toggle\">\r\n\t\t\t\t<div class=\"mdc-list-item stat-name\">Suggested Characteristics</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"collapse-wrapper\">\r\n\t\t\t\t<div class=\"collapse-list\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curbg, rootEl, allBgs) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const source = curbg.source;\r\n  const sourceAbv = Parser.sourceJsonToAbv(source);\r\n  const sourceFull = Parser.sourceJsonToFull(source);\r\n\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${sourceAbv}`);\r\n\tsourceEl.setAttribute(\"title\", sourceFull);\r\n\tsourceEl.innerHTML = sourceAbv;\r\n\r\n  const entries = curbg.entries;\r\n\r\n  if (entries.length) {\r\n    for (let n = entries.length - 1; n >= 0; n--) {\r\n      let entry = entries[n],\r\n        outStack = [];\r\n      renderer.recursiveEntryRender(entry, outStack, 0);\r\n      let texthtml = outStack.join(' ');\r\n\r\n      if (entry.name === \"Suggested Characteristics\") {\r\n        rootEl.querySelector(\".stats-wrapper .table-container\").classList.remove(\"disabled\");\r\n        const collapseList = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n        const traitTables = parseHTML(texthtml);\r\n        traitTables.querySelector(\".stat-name\").remove();\r\n        jqPrepend(collapseList, traitTables);\r\n      } else {\r\n        const statsEl = rootEl.querySelector(\".stats-wrapper .stats\");\r\n        jqPrepend(statsEl, parseHTML(texthtml));\r\n      }\r\n    }\r\n  }\r\n\r\n  window.setTimeout(() => {\r\n    let list = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n    list.style[\"margin-top\"] = \"-\" + jqHeight(list) + \"px\";\r\n  }, 0);\r\n}\r\n\r\nexport { renderSelection };\r\n","import { parseHTML, utils_makeRoller, jqAfter, jqPrepend} from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\"\r\nimport droll from \"../lib/droll.js\"\r\n\r\nconst MAX_ROLLS = 5\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"margin-bottom_large stats-wrapper\">\r\n\t\t<div id=\"stats\" class=\"monster\">\r\n\t\t\t<div id=\"name\">\r\n\t\t\t\tName <span class=\"source\" title=\"Source book\">SRC</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"sizetypealignment\">\r\n\t\t\t\t<span id=\"size\">Size</span> <span id=\"type\">type</span>, <span id=\"alignment\">alignment</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"divider\"></div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Armor Class</strong> <span id=\"ac\">## (source)</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Hit Points</strong> <span id=\"hp\">hp</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Speed</strong> <span id=\"speed\">30 ft.</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilitynames\">\r\n\t\t\t\t<div>STR</div>\r\n\t\t\t\t<div>DEX</div>\r\n\t\t\t\t<div>CON</div>\r\n\t\t\t\t<div>INT</div>\r\n\t\t\t\t<div>WIS</div>\r\n\t\t\t\t<div>CHA</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilityscores\">\r\n\t\t\t\t<div id=\"str\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"dex\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"con\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"int\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"wis\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"cha\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Saving Throws</strong> <span id=\"saves\">Str +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Skills</strong> <span id=\"skills\">Perception +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Vulnerabilities</strong> <span id=\"dmgvuln\">fire</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Resistances</strong> <span id=\"dmgres\">cold</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Immunities</strong> <span id=\"dmgimm\">lightning</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Condition Immunities</strong> <span id=\"conimm\">exhaustion</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Senses</strong> <span id=\"senses\">darkvision 30 ft.</span> passive Perception <span id=\"pp\">10</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Languages</strong> <span id=\"languages\">Common</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Challenge</strong> <span id=\"cr\">1</span> (<span id=\"xp\">450</span> XP)\r\n\t\t\t</div>\r\n\t\t\t<div id=\"traits\">\r\n\t\t\t</div>\r\n\t\t\t<div id=\"actions\">\r\n\t\t\t\t<span>Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"reactions\">\r\n\t\t\t\t<span>Reactions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"legendaries\">\r\n\t\t\t\t<span>Legendary Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"lairactions\">\r\n\t\t\t\t<span>Lair Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"regionaleffects\">\r\n\t\t\t\t<span>Regional Effects</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"output\"></div>\r\n\t</div>`;\r\n\r\nfunction objToTitleCaseStringWithCommas(obj) {\r\n  return Object.keys(obj)\r\n    .map(function(k) {\r\n      return k.uppercaseFirst() + \" \" + obj[k];\r\n    })\r\n    .join(\", \");\r\n}\r\nconst ATB_PROF_MODE = \"mode\";\r\nconst ATB_PROF_BONUS_STR = \"profBonusStr\";\r\nconst ATB_PROF_DICE_STR = \"profDiceStr\";\r\nconst PROF_MODE_BONUS = \"bonus\";\r\nconst PROF_MODE_DICE = \"dice\";\r\nfunction getProfBonusFromCr(cr) {\r\n  if (CR_TO_PROF[cr]) return CR_TO_PROF[cr];\r\n  return 0;\r\n}\r\nconst CR_TO_PROF = {\r\n  \"0\": 2,\r\n  \"1/8\": 2,\r\n  \"1/4\": 2,\r\n  \"1/2\": 2,\r\n  \"1\": 2,\r\n  \"2\": 2,\r\n  \"3\": 2,\r\n  \"4\": 2,\r\n  \"5\": 3,\r\n  \"6\": 3,\r\n  \"7\": 3,\r\n  \"8\": 3,\r\n  \"9\": 4,\r\n  \"10\": 4,\r\n  \"11\": 4,\r\n  \"12\": 4,\r\n  \"13\": 5,\r\n  \"14\": 5,\r\n  \"15\": 5,\r\n  \"16\": 5,\r\n  \"17\": 6,\r\n  \"18\": 6,\r\n  \"19\": 6,\r\n  \"20\": 6,\r\n  \"21\": 7,\r\n  \"22\": 7,\r\n  \"23\": 7,\r\n  \"24\": 7,\r\n  \"25\": 8,\r\n  \"26\": 8,\r\n  \"27\": 8,\r\n  \"28\": 8,\r\n  \"29\": 9,\r\n  \"30\": 9\r\n};\r\nconst SKILL_TO_ATB_ABV = {\r\n  athletics: \"dex\",\r\n  acrobatics: \"dex\",\r\n  \"sleight of hand\": \"dex\",\r\n  stealth: \"dex\",\r\n  arcana: \"int\",\r\n  history: \"int\",\r\n  investigation: \"int\",\r\n  nature: \"int\",\r\n  religion: \"int\",\r\n  \"animal handling\": \"wis\",\r\n  insight: \"wis\",\r\n  medicine: \"wis\",\r\n  perception: \"wis\",\r\n  survival: \"wis\",\r\n  deception: \"cha\",\r\n  intimidation: \"cha\",\r\n  performance: \"cha\",\r\n  persuasion: \"cha\"\r\n};\r\nfunction getAttribute(skill) {\r\n  return SKILL_TO_ATB_ABV[skill.toLowerCase().trim()];\r\n}\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(mon, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\tlet renderStack = [];\r\n\tlet entryList = {};\r\n\tvar name = mon.name;\r\n\twindow.monsterName = name;\r\n\tvar source = mon.source;\r\n\tvar type = mon._pTypes.asText;\r\n\tsource = Parser.sourceJsonToAbv(source);\r\n\r\n\trootEl.querySelector(\"#name\").innerHTML = (\r\n\t\t`<span class=\"stats-source source${source}\" title=\"${Parser.sourceJsonToFull(source)}\">${Parser.sourceJsonToAbv(source)}</span>`\r\n\t);\r\n\trootEl.querySelector(\"#size\").innerHTML = (Parser.sizeAbvToFull(mon.size));\r\n\trootEl.querySelector(\"#type\").innerHTML = (type);\r\n\trootEl.querySelector(\"#alignment\").innerHTML = (mon.alignment);\r\n\trootEl.querySelector(\"#ac\").innerHTML = (mon.ac);\r\n\trootEl.querySelector(\"#hp\").innerHTML = (mon.hp);\r\n\trootEl.querySelector(\"#speed\").innerHTML = (mon.speed);\r\n\trootEl.querySelector(\"#str span.score\").innerHTML = (mon.str);\r\n\trootEl.querySelector(\"#str span.mod\").innerHTML = (Parser.getAbilityModifier(mon.str));\r\n\trootEl.querySelector(\"#dex span.score\").innerHTML = (mon.dex);\r\n\trootEl.querySelector(\"#dex span.mod\").innerHTML = (Parser.getAbilityModifier(mon.dex));\r\n\trootEl.querySelector(\"#con span.score\").innerHTML = (mon.con);\r\n\trootEl.querySelector(\"#con span.mod\").innerHTML = (Parser.getAbilityModifier(mon.con));\r\n\trootEl.querySelector(\"#int span.score\").innerHTML = (mon.int);\r\n\trootEl.querySelector(\"#int span.mod\").innerHTML = (Parser.getAbilityModifier(mon.int));\r\n\trootEl.querySelector(\"#wis span.score\").innerHTML = (mon.wis);\r\n\trootEl.querySelector(\"#wis span.mod\").innerHTML = (Parser.getAbilityModifier(mon.wis));\r\n\trootEl.querySelector(\"#cha span.score\").innerHTML = (mon.cha);\r\n\trootEl.querySelector(\"#cha span.mod\").innerHTML = (Parser.getAbilityModifier(mon.cha));\r\n\r\n\tvar saves = mon.save;\r\n\tif (saves) {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#saves\").innerHTML = (saves);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar skills = mon.skill;\r\n\tlet perception = 0;\r\n\tif (skills) {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#skills\").innerHTML = (objToTitleCaseStringWithCommas(skills));\r\n\t\tif (skills.perception) perception = parseInt(skills.perception);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgvuln = mon.vulnerable;\r\n\tif (dmgvuln) {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgvuln\").innerHTML = (dmgvuln);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgres = mon.resist;\r\n\tif (dmgres) {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgres\").innerHTML = (dmgres);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgimm = mon.immune;\r\n\tif (dmgimm) {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgimm\").innerHTML = (dmgimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar conimm = mon.conditionImmune;\r\n\tif (conimm) {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#conimm\").innerHTML = (conimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar senses = mon.senses;\r\n\tif (senses) {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (senses + \", \");\r\n\t} else {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (\"\");\r\n\t}\r\n\r\n\tvar passive = mon.passive || (10 + perception).toString;\r\n\trootEl.querySelector(\"#pp\").innerHTML = (passive)\r\n\r\n\tvar languages = mon.languages;\r\n\tif (languages) {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (languages);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (\"\\u2014\");\r\n\t}\r\n\r\n\tvar cr = mon.cr === undefined ? \"Unknown\" : mon.cr;\r\n\trootEl.querySelector(\"#cr\").innerHTML = (cr);\r\n\trootEl.querySelector(\"#xp\").innerHTML = (Parser.crToXp(cr));\r\n\r\n\tvar traits = mon.trait;\r\n\trootEl.querySelector(\"#traits\").style.display = 'none';\r\n\r\n\tif (traits && traits.length > 0) {\r\n\t\trootEl.querySelector(\"#traits\").style.display = 'block';\r\n\t\tfor (var i = traits.length - 1; i >= 0; i--) {\r\n\t\t\tvar traitname = traits[i].name;\r\n\t\t\tvar traittext = traits[i].text;\r\n\t\t\tvar traittexthtml = \"\";\r\n\t\t\tvar renderedcount = 0;\r\n\t\t\tfor (var n = 0; n < traittext.length; n++) {\r\n\t\t\t\tif (!traittext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tvar firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\tvar spells = \"\";\r\n\t\t\t\tif (traitname.indexOf(\"Spellcasting\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\t\t\t\tif (traitname.indexOf(\"Variant\") !== -1 && traitname.indexOf(\"Coven\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\r\n\t\t\t\ttraittexthtml = traittexthtml + \"<p class='\" + firstsecond + spells + \"'>\" + traittext[n].replace(/\\u2022\\s?(?=C|\\d|At\\swill)/g, \"\")+\"</p>\";\r\n\t\t\t}\r\n\t\t\tconst newTrait = parseHTML(\"<div class='trait'><div class='trait\" + i + \"'><span class='name'>\" + traitname + \".</span> \" + traittexthtml + \"</div></div>\");\r\n\t\t\tjqAfter(rootEl.querySelector(\"#traits\"), newTrait);\r\n\r\n\t\t\t// parse spells, make hyperlinks\r\n\t\t\tconst spellLinks = rootEl.querySelectorAll('.trait div p.spells');\r\n\t\t\tfor (let spellLink of spellLinks) {\r\n\t\t\t\tlet spellslist = spellLink.innerHTML;\r\n\t\t\t\tif (spellslist[0] === \"*\") return;\r\n\t\t\t\tspellslist = spellslist.split(\": \")[1].split(/\\, (?!\\+|\\dd|appears|inside gems)/g);\r\n\t\t\t\tfor (let i = 0; i < spellslist.length; i++) {\r\n\t\t\t\t\tspellslist[i] = \"<a href='#/spells/\" + encodeURIComponent((spellslist[i].replace(/(\\*)| \\(([^\\)]+)\\)/g, \"\"))).toLowerCase().replace(\"'\", \"%27\") + \"_\" + \"phb'>\" + spellslist[i] + \"</a>\";\r\n\t\t\t\t\tif (i !== spellslist.length - 1) spellslist[i] = spellslist[i] + \", \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspellLink.innerHTML = (spellLink.innerHTML.split(\": \")[0] + \": \" + spellslist.join(\"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst actions = mon.action;\r\n\r\n\tif (actions && actions.length) for (let i = actions.length - 1; i >= 0; i--) {\r\n\t\tconst actionname = actions[i].name;\r\n\t\tconst actiontext = actions[i].text;\r\n\t\tlet actiontexthtml = \"\";\r\n\t\tlet renderedcount = 0;\r\n\t\tfor (let n = 0; n < actiontext.length; n++) {\r\n\t\t\tif (!actiontext[n]) continue;\r\n\r\n\t\t\trenderedcount++;\r\n\t\t\tlet firstsecond = \"\";\r\n\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\tactiontexthtml = actiontexthtml + \"<p class='\"+firstsecond+\"'>\"+actiontext[n]+\"</p>\";\r\n\t\t}\r\n\t\tconst newAction = parseHTML(\"<div class='action'><div class='action\"+i+\"'><span class='name'>\"+actionname+\".</span> \"+actiontexthtml+\"</div></div>\")\r\n\t\tjqAfter(rootEl.querySelector('#actions'), newAction);\r\n\t}\r\n\r\n\tconst reactions = mon.reaction;\r\n\trootEl.querySelector(\"#reactions\").style.display = 'none';\r\n\r\n\tif (reactions && (reactions.text || reactions.length)) {\r\n\r\n\t\trootEl.querySelector(\"#reactions\").style.display = 'block';\r\n\r\n\t\tif (!reactions.length) {\r\n\t\t\tconst reactionname = reactions.name;\r\n\t\t\tconst reactiontext = reactions.text;\r\n\t\t\tlet reactiontexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p class='\" + firstsecond + \"'>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newNonReaction = parseHTML(\"<div class='reaction'><div class='reaction0'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newNonReaction);\r\n\t\t}\r\n\r\n\t\tif (reactions.length) for (let i = reactions.length - 1; i >= 0; i--) {\r\n\t\t\tconst reactionname = reactions[i].name;\r\n\r\n\t\t\tconst reactiontext = reactions[i].text;\r\n\t\t\tlet reactiontexthtml = \"<span>\" + reactiontext + \"</span>\";\r\n\t\t\tfor (let n = 1; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newReaction = parseHTML(\"<div class='reaction'><div class='reaction\" + i + \"'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newReaction);\r\n\t\t}\r\n\t}\r\n\r\n\tconst legendaries = mon.legendary;\r\n\trootEl.querySelector(\"#legendaries\").style.display = 'none';\r\n\tif (legendaries) {\r\n\t\trootEl.querySelector(\"#legendaries\").style.display = 'block';\r\n\t\tlet shouldAddCap = legendaries.length > 0;\r\n\t\tfor (let i = legendaries.length - 1; i >= 0; i--) {\r\n\t\t\tconst legendaryname = legendaries[i].name ? legendaries[i].name + \".\" : \"\";\r\n\t\t\tconst legendarytext = legendaries[i].text;\r\n\t\t\tlet legendarytexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < legendarytext.length; n++) {\r\n\t\t\t\tif (!legendarytext[n]) continue;\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\t\t\t\tlegendarytexthtml += `<p class='${firstsecond}'>${legendarytext[n]}</p>`;\r\n\t\t\t}\r\n\t\t\tconst newLegendary = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'>${legendaryname}</span> ${legendarytexthtml}</div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendary);\r\n\t\t\tif (legendaryname.trim() === '' || legendaryname.indexOf('Legendary Actions') > -1) {\r\n\t\t\t\tshouldAddCap = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (shouldAddCap) {\r\n\t\t\tconst legendaryActions = mon.legendaryActions || 3;\r\n\t\t\tconst legendaryName = name.split(\",\");\r\n\t\t\tconst newLegendaryCap = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'></span> <span>${legendaryName[0]} can take ${legendaryActions} legendary action${legendaryActions > 1 ? \"s\" : \"\"}, choosing from the options below. Only one legendary action can be used at a time and only at the end of another creature's turn. ${legendaryName[0]} regains spent legendary actions at the start of its turn.</span></div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendaryCap);\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\"#lairactions\").style.display = 'none';\r\n\trootEl.querySelector(\"#regionaleffects\").style.display = 'none';\r\n\tif (mon.lairActions) renderSection(\"lairaction\", mon.lairActions);\r\n\tif (mon.regionalEffects) renderSection(\"regionaleffect\", mon.regionalEffects);\r\n\r\n\tfunction renderSection(sectionClass, sectionEntries) {\r\n\t\trootEl.querySelector(`#${sectionClass}s`).style.display = 'block';\r\n\t\tentryList = {type: \"entries\", entries: sectionEntries};\r\n\t\trenderStack = [];\r\n\t\trenderer.recursiveEntryRender(entryList, renderStack);\r\n\t\tconst newThing = parseHTML(`<div class='${sectionClass}'><div class='legendary'>${utils_makeRoller(renderStack.join(\"\"))}</div></div>`)\r\n\t\tjqAfter(rootEl.querySelector(`#${sectionClass}s`), newThing);\r\n\t}\r\n\r\n\tif (mon.skill) {\r\n\t\tmakeSkillRoller(rootEl.querySelector(\"#skills\"));\r\n\t}\r\n\tif (mon.save) {\r\n\t\tmakeSaveRoller(rootEl.querySelector(\"#saves\"));\r\n\t}\r\n\tfunction makeSkillRoller(element) {\r\n\t\tconst $this = element;\r\n\r\n\t\tconst re = /,\\s*(?![^()]*\\))/g; // Don't split commas within parentheses\r\n\t\tconst skills = $this.innerHTML.split(re).map(s => s.trim());\r\n\t\tconst out = [];\r\n\r\n\t\tskills.map(s => {\r\n\t\t\tconst re = /(\\-|\\+)?\\d+|(?:[^\\+]|\\n(?!\\+))+/g; // Split before and after each bonus\r\n\t\t\tconst spl = s.match(re);\r\n\r\n\t\t\tconst skillName = spl[0].trim();\r\n\r\n\t\t\tvar skillString = \"\";\r\n\t\t\tspl.map(b => {\r\n\t\t\t\tconst re = /(\\-|\\+)?\\d+/;\r\n\r\n\t\t\t\tif (b.match(re)){\r\n\t\t\t\t\tconst bonus = Number(b);\r\n\t\t\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[getAttribute(skillName)]);\r\n\t\t\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\t\t\tconst pB = bonus - fromAbility;\r\n\t\t\r\n\t\t\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\t\t\r\n\t\t\t\t\tskillString += renderSkillOrSaveRoller(skillName, pBonusStr, pDiceStr, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tskillString += b;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tout.push(skillString);\r\n\t\t});\t\t\r\n\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction makeSaveRoller(element) {\r\n\t\tconst $this = element;\r\n\t\tconst saves = $this.innerHTML.split(\",\").map(s => s.trim());\r\n\t\tconst out = [];\r\n\t\tsaves.map(s => {\r\n\t\t\tconst spl = s.split(\"+\").map(s => s.trim());\r\n\t\t\tconst bonus = Number(spl[1]);\r\n\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[spl[0].toLowerCase()]);\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst pB = bonus - fromAbility;\r\n\r\n\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\r\n\t\t\tout.push(spl[0] + ' ' + renderSkillOrSaveRoller(spl[0], pBonusStr, pDiceStr, true));\r\n\t\t});\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction renderSkillOrSaveRoller(itemName, profBonusString, profDiceString, isSave) {\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\t\treturn `<span class='roller' title=\"${itemName} ${isSave ? \" save\" : \"\"}\" data-roll-alt=\"1d20;${profDiceString}\" data-roll='1d20${profBonusString}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${profBonusString}\">${profBonusString}</span>`;\r\n\t}\r\n\r\n\t// inline rollers\r\n\tconst statPEls = rootEl.querySelectorAll(\"#stats p\");\r\n\tfor (let statPEl of statPEls) {\r\n\t\taddNonD20Rollers(statPEl);\r\n\r\n\t\t// add proficiency dice stuff for attack rolls, since those _generally_ have proficiency\r\n\t\t// this is not 100% accurate; for example, ghouls don't get their prof bonus on bite attacks\r\n\t\t// fixing it would probably involve machine learning though; we need an AI to figure it out on-the-fly\r\n\t\t// (Siri integration forthcoming)\r\n\t\tconst titleMaybe = attemptToGetTitle(statPEl);\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/(\\-|\\+)?\\d+(?= to hit)/g, function(match) {\r\n\t\t\tconst bonus = Number(match);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst withoutPB = bonus - expectedPB;\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst profDiceString = `1d${expectedPB*2}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll-alt='1d20;${profDiceString}' data-roll='1d20${match}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${match}\">${match}</span>`\r\n\t\t\t} else {\r\n\t\t\t\treturn `<span class='roller' data-roll='1d20${match}'>${match}</span>`; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/DC\\s*(\\d+)/g, function(match, capture) {\r\n\t\t\tconst dc = Number(capture);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst withoutPB = dc - expectedPB;\r\n\t\t\t\tconst profDiceString = `1d${(expectedPB*2)}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `DC <span class=\"dc-roller\" ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} ${ATB_PROF_MODE}=\"${mode}\" data-roll-alt=\"${profDiceString}\" data-bonus=\"${capture}\" ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${capture}\">${capture}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\treturn match; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\taddNonD20Rollers(rootEl.querySelector(\"#stats #hp\"));\r\n\tfunction addNonD20Rollers (ele) {\r\n\t\tele.innerHTML = ele.innerHTML.replace(/\\d+d\\d+(\\s?(\\-|\\+)\\s?\\d+\\s?)?/g, function(match) {\r\n      const titleMaybe = attemptToGetTitle(ele);\r\n      return `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll='${match}'>${match}</span>`;\r\n    });\r\n\t}\r\n\tfunction attemptToGetTitle(ele) {\r\n\t\tlet titleMaybe = ele.parentElement.querySelector(\".name\");\r\n\t\tif (titleMaybe) {\r\n\t\t\ttitleMaybe = titleMaybe.innerHTML;\r\n\t\t\tif (titleMaybe) {\r\n\t\t\t\ttitleMaybe = titleMaybe.substring(0, titleMaybe.length-1).trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn titleMaybe;\r\n\t}\r\n\r\n\t//$(\".spells span.roller\").contents().unwrap();\r\n\tlet statsRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsRollerEl of statsRollerEls) {\r\n\t\tstatsRollerEl.addEventListener('click', () => {\r\n\t\t\tconst $this = statsRollerEl;\r\n\t\t\tlet roll;\r\n\t\t\tlet rollResult;\r\n\t\t\tif ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n\t\t\t\t// hacks because droll doesn't support e.g. \"1d20+1d4+2\" :joy: :ok_hand:\r\n\t\t\t\tconst multi = roll.split(\";\");\r\n\t\t\t\troll = roll.replace(\";\", \"+\");\r\n\t\t\t\trollResult = droll.roll(multi[0]);\r\n\t\t\t\tconst res2 = droll.roll(multi[1]);\r\n\t\t\t\trollResult.rolls = rollResult.rolls.concat(res2.rolls);\r\n\t\t\t\trollResult.total += res2.total;\r\n\t\t\t} else {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll\").replace(/\\s+/g, \"\");\r\n\t\t\t\trollResult = droll.roll(roll);\r\n\t\t\t}\r\n\t\t\toutputRollResult($this, roll, rollResult);\r\n\t\t});\r\n\t}\r\n\t\r\n\tlet statsDCRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsDCRollerEl of statsDCRollerEls) {\r\n\t\tconst $this = statsDCRollerEl;\r\n    let roll;\r\n    let rollResult;\r\n    if ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n      roll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n      rollResult = droll.roll(roll);\r\n      outputRollResult($this, roll, rollResult);\r\n    }\r\n\t}\r\n\r\n\tfunction outputRollResult($ele, roll, rollResult) {\r\n\t\tconst name = window.monsterName;\r\n\t\tconst newResult = parseHTML(\r\n      `<span>${name}: <em>${roll}</em> rolled ${\r\n        $ele.getAttribute(\"title\") ? `${$ele.getAttribute(\"title\")} ` : \"\"\r\n      }for <strong>${rollResult.total}</strong> (<em>${rollResult.rolls.join(\", \")}</em>)<br></span>`\r\n\t\t);\r\n\t\tconst outputEl = rootEl.querySelector(\"#output\");\r\n\t\tjqPrepend(outputEl, newResult);\r\n\t\toutputEl.style.display = 'block';\r\n\t\tif (outputEl.children.length === MAX_ROLLS + 1) {\r\n\t\t\toutputEl.children[MAX_ROLLS].remove();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curcondition, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = utils_combineText(curcondition.entries, \"p\");\r\n}\r\n\r\nexport { renderSelection };","import {\r\n  utils_combineText,\r\n} from \"../js/utils.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curcult, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n  const textlist = curcult.text;\r\n  let texthtml = \"\";\r\n\r\n  if (curcult.goal !== undefined)\r\n    texthtml += utils_combineText(curcult.goal.text, \"p\", \"<span class='stat-name'>Goals:</span> \");\r\n  if (curcult.cultists !== undefined)\r\n    texthtml += utils_combineText(curcult.cultists.text, \"p\", \"<span class='stat-name'>Typical Cultist:</span> \");\r\n  if (curcult.signaturespells !== undefined)\r\n    texthtml += utils_combineText(\r\n      curcult.signaturespells.text,\r\n      \"p\",\r\n      \"<span class='stat-name'>Signature Spells:</span> \"\r\n    );\r\n  texthtml += utils_combineText(textlist, \"p\");\r\n\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = texthtml;\r\n}\r\n\r\nexport {renderSelection};","import { utils_makePrerequisite } from \"../js/utils.js\";\r\nimport { parse_abilityLong } from \"../util/ability.js\";\r\nimport Parser from '../util/Parser.js';\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"prerequisite margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(feat, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n\tlet sourceEl = rootEl.querySelector('.stats-wrapper .source');\r\n\tsourceEl.classList.add(`source${feat.source}`);\r\n\tsourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(feat.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(feat.source)}`;\r\n\r\n\tconst prerequisite = utils_makePrerequisite(feat.prerequisite);\r\n\trootEl.querySelector('.stats-wrapper .prerequisite').innerHTML = (prerequisite ? \"Prerequisite: \" + prerequisite : \"\");\r\n\t\r\n\tif (feat.ability) {\r\n\t\tfor (let entry of feat.entries) { \r\n\t\t\t// insert the new list item at the head of the first list we find list; flag with \"hasabilityitem\" so we don't do it more than once\r\n\t\t\tif (entry.type === \"list\" && !entry.hasabilityitem) {\r\n\t\t\t\tentry.hasabilityitem = true;\r\n\t\t\t\tentry.items.unshift(parse_abilityLong(feat.ability))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (feat.entries.length) {\r\n\t\tlet outstack = [];\r\n\t\tfor (let entry of feat.entries) {\r\n\t\t\trenderer.recursiveEntryRender(entry, outstack, 0);\r\n\t\t}\r\n\t\trootEl.querySelector('.stats-wrapper .text').innerHTML = outstack.join(' ');\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { utils_makeRoller } from '../js/utils.js';\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"type\"></span><span class=\"rarity\"></span>\r\n\t\t\t<span class=\"attunement\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"value\"></span><span class=\"weight\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"damage\"></span>\r\n\t\t\t<span class=\"damageType\"></span>\r\n\t\t\t<span class=\"properties\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"text\"></div>\r\n\t\t<div class=\"margin-bottom_small\">Source: <span class=\"source\"></span></div>\r\n\t</div>`;\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(item, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\t\r\n\tconst source = item.source;\r\n\tconst sourceFull = Parser.sourceJsonToFull(source);\r\n\trootEl.querySelector(\".stats-wrapper .source\").innerHTML = (`${sourceFull}, page ${item.page}`);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .value\").innerHTML = (item.value ? item.value+(item.weight ? \", \" : \"\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .weight\").innerHTML = (item.weight ? item.weight+(item.weight == 1 ? \" lb.\" : \" lbs.\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .rarity\").innerHTML = ((item.tier ? \", \"+item.tier : \"\")+(item.rarity ? \", \"+item.rarity : \"\"));\r\n\trootEl.querySelector(\".stats-wrapper .attunement\").innerHTML = (item.reqAttune ? item.reqAttune : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .type\").innerHTML = (item.typeText);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"\");\r\n\trootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (\"\");\r\n\tconst type = item.type || \"\";\r\n\tif (item.weaponCategory) {\r\n\t\tif(item.dmg1) rootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (utils_makeRoller(item.dmg1));\r\n\t\tif(item.dmgType) rootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (Parser.dmgTypeToFull(item.dmgType));\r\n\t} else if (type === \"LA\" ||type === \"MA\"|| type === \"HA\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC \"+item.ac+(type === \"LA\" ? \" + Dex\" : type === \"MA\" ? \" + Dex (max 2)\" : \"\"));\r\n\t} else if (type === \"S\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC +\"+item.ac);\r\n\t} else if (type === \"MNT\" || type === \"VEH\") {\r\n\t\tconst speed=item.speed;\r\n\t\tconst capacity=item.carryingcapacity;\r\n\t\tif (speed) rootEl.querySelector(\".stats-wrapper .damage\").append(\"Speed=\"+speed);\r\n\t\tif (speed && capacity) rootEl.querySelector(\".stats-wrapper .damage\").append(type === \"MNT\" ? \", \" : \"<br>\");\r\n\t\tif (capacity) {\r\n\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(\"Carrying Capacity=\"+capacity);\r\n\t\t\tif (capacity.indexOf(\"ton\") === -1 && capacity.indexOf(\"passenger\") === -1) rootEl.querySelector(\".stats-wrapper .damage\").append(capacity == 1 ? \" lb.\" : \" lbs.\");\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper .properties\").innerHTML = (\"\");\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let i = 0; i < properties.length; i++) {\r\n\t\t\tconst prop = properties[i];\r\n\t\t\tlet a = window.itemPropertyList[prop].name;\r\n\t\t\tif (prop === \"V\") a = `${a} (${utils_makeRoller(item.dmg2)})`;\r\n\t\t\tif (prop === \"T\" || prop === \"A\" || prop === \"AF\") a = `${a} (${item.range}ft.)`;\r\n\t\t\tif (prop === \"RLD\") a = `${a} (${item.reload} shots)`;\r\n\t\t\ta = (i > 0 ? \", \" : item.dmg1 ? \"- \" : \"\") + a;\r\n\t\t\trootEl.querySelector(\".stats-wrapper .properties\").append(a);\r\n\t\t}\r\n\t}\r\n\r\n\tconst entryList = {type: \"entries\", entries: item.entries};\r\n\tconst renderStack = [];\r\n\trenderer.recursiveEntryRender(entryList, renderStack, 1);\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = (utils_makeRoller(renderStack.join(\"\")).split(item.name.toLowerCase()).join(\"<i>\"+item.name.toLowerCase()+\"</i>\"));\r\n}\r\n\r\nexport { renderSelection };","import { utils_combineText, parse_psionicTypeToFull } from \"../js/utils.js\";\r\nimport { ELE_P, STR_EMPTY } from \"../util/consts.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"order margin-bottom_small\"></div>\r\n\t\t<div class=\"duration margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(selectedPsionic, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const STATS_ORDER_AND_TYPE = rootEl.querySelector(\".stats-wrapper .order\");\r\n  const STATS_DURATION = rootEl.querySelector(\".stats-wrapper .duration\");\r\n  const STATS_TEXT = rootEl.querySelector(\".stats-wrapper .text\");\r\n\r\n  if (selectedPsionic.type === \"T\") loadTalent();\r\n  else if (selectedPsionic.type === \"D\") loadDiscipline();\r\n\r\n  function loadTalent() {\r\n    STATS_ORDER_AND_TYPE.innerHTML = parse_psionicTypeToFull(selectedPsionic.type);\r\n    STATS_TEXT.innerHTML = utils_combineText(selectedPsionic.text, ELE_P);\r\n    STATS_DURATION.innerHTML = STR_EMPTY;\r\n  }\r\n  function loadDiscipline() {\r\n    STATS_ORDER_AND_TYPE.innerHTML = `${selectedPsionic.order} ${parse_psionicTypeToFull(selectedPsionic.type)}`;\r\n    STATS_TEXT.innerHTML = getTextString();\r\n    STATS_DURATION.innerHTML = getDurationString();\r\n\r\n    function getTextString() {\r\n      const modeStringArray = [];\r\n      for (let i = 0; i < selectedPsionic.modes.length; ++i) {\r\n        modeStringArray.push(getModeString(i));\r\n      }\r\n\r\n      return `${getDescriptionString()}${getFocusString()}${modeStringArray.join(STR_EMPTY)}`;\r\n    }\r\n    function getDescriptionString() {\r\n      return `<p>${selectedPsionic.description}</p>`;\r\n    }\r\n    function getFocusString() {\r\n      return `<p><span class='stat-name'>Psycic Focus.</span> ${selectedPsionic.focus}</p>`;\r\n    }\r\n    function getModeString(modeIndex) {\r\n      const modeString = utils_combineText(\r\n        selectedPsionic.modes[modeIndex].text,\r\n        ELE_P,\r\n        getModeTitle(selectedPsionic.modes[modeIndex])\r\n      );\r\n      if (selectedPsionic.modes[modeIndex].submodes === undefined) return modeString;\r\n      const subModeString = getSubModeString();\r\n      return `${modeString}${subModeString}`;\r\n\r\n      function getSubModeString() {\r\n        const modeStrings = [];\r\n        const subModes = selectedPsionic.modes[modeIndex].submodes;\r\n        for (let i = 0; i < subModes.length; ++i) {\r\n          modeStrings.push(utils_combineText(subModes[i].text, ELE_P, getModeTitle(subModes[i], true)));\r\n        }\r\n        return modeStrings.join(STR_EMPTY);\r\n      }\r\n\r\n      function getModeTitle(mode, subMode) {\r\n        subMode = subMode === undefined || subMode === null ? false : subMode;\r\n        const modeTitleArray = [];\r\n        modeTitleArray.push(mode.title);\r\n        const bracketPart = getModeTitleBracketPart();\r\n        if (bracketPart !== null) modeTitleArray.push(bracketPart);\r\n        if (subMode) return `<span class='stat-name'>${modeTitleArray.join(\" \")}.</span> `;\r\n        else return `<span class='stat-name'>${modeTitleArray.join(\" \")}.</span> `;\r\n\r\n        function getModeTitleBracketPart() {\r\n          const modeTitleBracketArray = [];\r\n\r\n          if (mode.cost) modeTitleBracketArray.push(getModeTitleCost());\r\n          if (mode.concentration) modeTitleBracketArray.push(getModeTitleConcentration());\r\n\r\n          if (modeTitleBracketArray.length === 0) return null;\r\n          return `(${modeTitleBracketArray.join(\"; \")})`;\r\n\r\n          function getModeTitleCost() {\r\n            const costMin = mode.cost.min;\r\n            const costMax = mode.cost.max;\r\n            const costString = costMin === costMax ? costMin : `${costMin}-${costMax}`;\r\n            return `${costString} psi`;\r\n          }\r\n          function getModeTitleConcentration() {\r\n            return `conc., ${mode.concentration.duration} ${mode.concentration.unit}.`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function getDurationString() {\r\n    const duration = selectedPsionic.duration;\r\n    if (duration === undefined) return STR_EMPTY;\r\n    else return getDurationElement();\r\n\r\n    function getDurationElement() {}\r\n  }\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport { parse_abilityShort } from \"../util/ability.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"size margin-bottom_small\"></div>\r\n\t\t<div class=\"ability margin-bottom_small\"></div>\r\n\t\t<div class=\"speed margin-bottom_small\"></div>\r\n\t\t<div class=\"stats\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(race, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${race.source}`);\r\n  sourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(race.source));\r\n  sourceEl.innerHTML = `${Parser.sourceJsonToAbv(race.source)}`;\r\n\r\n  const size = Parser.sizeAbvToFull(race.size);\r\n  rootEl.querySelector(\".stats-wrapper .size\").innerHTML = size;\r\n  if (size === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .size\").style.display = \"none\";\r\n  }\r\n\r\n  const ability = parse_abilityShort(race.ability);\r\n  rootEl.querySelector(\".stats-wrapper .ability\").innerHTML = ability;\r\n\r\n  let speed;\r\n  if (race.speed) {\r\n    if (race.speed.walk) {\r\n      speed = race.speed.walk + \" ft.\";\r\n      if (race.speed.climb) speed += `, climb ${race.speed.climb} ft.`;\r\n      if (race.speed.fly) speed += `, fly ${race.speed.fly} ft.`;\r\n    } else {\r\n      speed = race.speed + (race.speed === \"Varies\" ? \"\" : \" ft. \");\r\n    }\r\n  }\r\n  rootEl.querySelector(\".stats-wrapper .speed\").innerHTML = speed;\r\n  if (speed === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .speed\").style.display = \"none\";\r\n  }\r\n\r\n  const traitlist = race.trait;\r\n  if (traitlist) {\r\n    let statsText = \"<div class='stat-item'>\";\r\n    for (let n = 0; n < traitlist.length; ++n) {\r\n      const trait = traitlist[n];\r\n\r\n      const header = `<span class='stat-name'>${trait.name}.</span> `;\r\n      statsText += utils_combineText(traitlist[n].text, \"p\", header);\r\n    }\r\n    statsText += \"</div>\";\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = statsText;\r\n  } else if (race.entries) {\r\n    const renderStack = [];\r\n    const faux = { type: \"entries\", entries: race.entries };\r\n\r\n    // Grung to test with\r\n    new EntryRenderer().recursiveEntryRender(faux, renderStack, 1, \"<div class='renderer-output'>\", \"</div>\", true);\r\n\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = renderStack.join(\"\");\r\n  }\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(reward, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\t\r\n\tconst sourceEl = rootEl.querySelector('.stats-wrapper .source');\r\n\tsourceEl.classList.add(`source${reward.source}`);\r\n\tsourceEl.setAttribute('title', Parser.sourceJsonToFull(reward.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(reward.source)}`;\r\n\r\n\tconst textlist = reward.text;\r\n\tlet texthtml = \"\";\r\n\r\n\tif (reward.ability !== undefined) texthtml += utils_combineText(reward.ability.text, \"p\", \"<span class='stat-name'>Ability Score Adjustment:</span> \");\r\n\tif (reward.signaturespells !== undefined) texthtml += utils_combineText(reward.signaturespells.text ? reward.signaturespells.text : \"None\", \"p\", \"<span class='stat-name'>Signature Spells:</span> \");\r\n\ttexthtml += utils_combineText(textlist, \"p\");\r\n\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = \"<tr class='text'><td colspan='6'>\"+texthtml+\"</td></tr>\";\r\n}\r\n\r\nexport { renderSelection };\r\n","import EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t</div>`;\r\n\r\nfunction renderSelection(spell, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n\tconst renderStack = [];\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stats-source source${spell.source}\" title=\"${Parser.sourceJsonToFull(spell.source)}\">${Parser.sourceJsonToAbv(spell.source)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span>${Parser.spLevelSchoolMetaToFull(spell.level, spell.school, spell.meta)}</span></div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Casting Time: </span>${Parser.spTimeListToFull(spell.time)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Range: </span>${Parser.spRangeToFull(spell.range)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Components: </span>${Parser.spComponentsToFull(spell.components)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Duration: </span>${Parser.spDurationToFull(spell.duration)}</div>`);\r\n\trenderStack.push(`<div class='text'>`);\r\n\r\n\trenderer.recursiveEntryRender({type: \"entries\", entries: spell.entries}, renderStack, 1);\r\n\r\n\tif (spell.entriesHigherLevel) {\r\n\t\tconst higherLevelsEntryList = {type: \"entries\", entries: spell.entriesHigherLevel};\r\n\t\trenderer.recursiveEntryRender(higherLevelsEntryList, renderStack, 2);\r\n\t}\r\n\r\n\trenderStack.push(`</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Classes: </span>${Parser.spMainClassesToFull(spell.classes)}</div>`);\r\n\r\n\tif (spell.classes.fromSubclass) {\r\n\t\tconst currentAndLegacy = Parser.spSubclassesToCurrentAndLegacyFull(spell.classes);\r\n\t\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Subclasses: </span>${currentAndLegacy[0]}</div>`);\r\n\t\tif (currentAndLegacy[1]) {\r\n\t\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background margin-bottom_med\"><span class=\"stat-name\">Subclasses (legacy): </span>${currentAndLegacy[1]}</div>`);\r\n\t\t}\r\n\t}\r\n\r\n\tif (spell.scrollNote) {\r\n\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background\">`);\r\n\t\trenderer.recursiveEntryRender(\r\n\t\t\t`{@italic Note: Both the {@class ${\"Fighter\"} (${\"Eldritch Knight\"})} and the {@class ${\"Rogue\"} (${\"Arcane Trickster\"})} spell lists include all {@class ${\"Wizard\"}} spells. Spells of 5th level or higher may be cast with the aid of a spell scroll or similar.}`\r\n\t\t\t, renderStack, 2);\r\n\t\trenderStack.push(`</div>`);\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper\").innerHTML = renderStack.join(\"\");\r\n}\r\n\r\nexport { renderSelection };","import EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst entryRenderer = new EntryRenderer();\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curRule, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${curRule.source}`);\r\n  sourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(curRule.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(curRule.source)}`;\r\n\r\n  const textStack = [];\r\n  entryRenderer.recursiveEntryRender(curRule, textStack);\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = textStack.join(\"\");\r\n}\r\n\r\nexport { renderSelection };"],"sourceRoot":""}