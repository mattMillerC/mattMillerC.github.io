{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/views/character/dnd-character-builder-attributes.js"],"names":["$_documentContainer","document","head","appendChild","content","memoizedTemplate","hasControls","type","Boolean","value","reflectToAttribute","min","Number","observer","max","step","super","ready","this","__previousValidInput","inputElement","addEventListener","__onInputChange","bind","e","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","pow","_getDecimalCount","sign","newVal","oldVal","__validateByStep","__stepChangedCalled","getAttribute","setAttribute","_valueChanged","keyCode","_onKeyDown","undefined","checkValidity","window","customElements","define","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","str","dex","con","int","wis","cha","strAdj","dexAdj","conAdj","intAdj","wisAdj","chaAdj","saves","Array","connectedCallback","characterChangeHandler","character","detail","updateAttributesFromCharacter","disconnectedCallback","removeEventListener","attr","setProperties","adj","_absInt","a","b","intA","parseInt","intB","base","floor","_total"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n * `<vaadin-number-field>` is a Web Component for number field control in forms.\n *\n * ```html\n * <vaadin-number-field label=\"Number\">\n * </vaadin-number-field>\n * ```\n * @extends TextFieldElement\n * @demo demo/index.html\n */\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.7.0-alpha6';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display value increase/decrease controls.\n       * @type {boolean}\n       */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The minimum value of the field.\n       */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       * @type {number}\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  /** @private */\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  /** @private */\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  /** @protected */\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  /** @private */\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  /** @private */\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  /** @private */\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  /** @private */\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  /** @private */\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  /** @private */\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  /** @private */\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  /** @private */\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  /** @private */\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  /** @private */\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  /**\n   * @param {number} newVal\n   * @param {number | undefined} oldVal\n   * @protected\n   */\n  _stepChanged(newVal, oldVal) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? newVal : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', newVal);\n  }\n\n  /** @private */\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  /** @private */\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  /** @private */\n  __onInputChange() {\n    this.validate();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n *\n * ```html\n * <vaadin-integer-field label=\"Number\">\n * </vaadin-integer-field>\n * ```\n * @extends NumberFieldElement\n * @demo demo/index.html\n */\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.7.0-alpha6';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /** @private */\n      pattern: String,\n\n      /** @private */\n      preventInvalidInput: Boolean,\n\n      /** @private */\n      minlength: Number,\n\n      /** @private */\n      maxlength: Number\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  /**\n   * @param {number} newVal\n   * @param {number | undefined} oldVal\n   * @protected\n   */\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  /** @private */\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  /** @private */\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import {PolymerElement, html} from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport { getCharacterChannel, getSelectedCharacter, updateAttr, getClassSaves } from \"../../../util/charBuilder\";\n\nclass DndCharacterBuilderAttributes extends PolymerElement {\n  \n  static get properties() {\n    return {\n      str: {\n        type: Number\n      },\n      dex: {\n        type: Number\n      },\n      con: {\n        type: Number\n      },\n      int: {\n        type: Number\n      },\n      wis: {\n        type: Number\n      },\n      cha: {\n        type: Number\n      },\n      strAdj: {\n        type: Number,\n        value: 0\n      },\n      dexAdj: {\n        type: Number,\n        value: 0\n      },\n      conAdj: {\n        type: Number,\n        value: 0\n      },\n      intAdj: {\n        type: Number,\n        value: 0\n      },\n      wisAdj: {\n        type: Number,\n        value: 0\n      },\n      chaAdj: {\n        type: Number,\n        value: 0\n      },\n      saves: {\n        type: Array,\n        value: []\n      }\n    };\n  }\n\n  static get observers() {\n    return [\"updateCharAttr(str, dex, con, int, wis, cha)\"]\n  }\n\n  updateCharAttr(str, dex, con, int, wis, cha) {\n    if (str && dex && con && int && wis && cha) {\n      updateAttr({str, dex, con, int, wis, cha});\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateAttributesFromCharacter(character);\n    };\n    \n    this.updateAttributesFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  async updateAttributesFromCharacter(character) {\n    if (character && character.attr) {\n      const attr = character.attr;\n      if (attr.str !== this.str || attr.dex !== this.dex || attr.con !== this.con \n          || attr.int !== this.int || attr.wis !== this.wis || attr.cha !== this.cha) {\n        this.setProperties({\n          str: character.attr.str,\n          dex: character.attr.dex,\n          con: character.attr.con,\n          int: character.attr.int,\n          wis: character.attr.wis,\n          cha: character.attr.cha\n        });\n      }\n\n      this.saves = await getClassSaves();\n    }\n  }\n\n  _adjustString(adj) {\n    if (adj !== 0 && adj !== undefined) {\n      return this._absInt(adj);\n    }\n    return \"\";\n  }\n\n  _total(a, b) {\n    let intA = parseInt(a),\n      intB = parseInt(b);\n\n    intA = isNaN(intA) ? 0 : intA;\n    intB = isNaN(intB) ? 0 : intB;\n\n    return intA + intB;\n  }\n\n  _mod(base, adj) {\n    return this._absInt(Math.floor((this._total(base, adj) - 10) / 2));\n  }\n\n  _absInt(int) {\n    return int > 0 ? \"+\" + int : int;\n  }\n\n  _contains(saves, str) {\n    return saves.indexOf(str) > -1;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .table-wrap {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .stats {\n          width: 100%;\n          margin-top: 32px;\n        }\n\n        .row {\n          height: 92px;\n        }\n\n        .data {\n          margin-top: 32px;\n          font-size: 18px;\n          padding: 16px;\n          display: flex;\n          justify-content: center;\n        }\n\n        .mod {\n          border: 1px solid black;\n          border-radius: 4px;\n          width: 32px;\n          margin: 32px auto 0;\n        }\n\n        vaadin-integer-field {\n          width: 100px;\n        }\n\n        th {\n          font-weight: normal;\n        }\n\n        .save-icon {\n          width: 24px;\n        }\n\n        [hidden] {\n          visibility: hidden;\n        }\n\n        @media(min-width: 921px) {\n          .stats {\n            width: 50%;\n          }\n          .mobile-label {\n            display: none;\n          }\n        }\n      </style>\n\n      <div class=\"table-wrap\">\n        <table class=\"stats\">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Adjust.</th>\n              <th>Total</th>\n              <th>Mod.</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{str}} min=\"1\" max=\"20\" has-controls label=\"Strength\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(strAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(strAdj, str)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(strAdj, str)]]</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{dex}} min=\"1\" max=\"20\" has-controls label=\"Dexterity\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(dexAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(dexAdj, dex)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(dexAdj, dex)]]</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{con}} min=\"1\" max=\"20\" has-controls label=\"Constitution\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(conAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(conAdj, con)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(conAdj, con)]]</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{int}} min=\"1\" max=\"20\" has-controls label=\"Intellegence\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(intAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(intAdj, int)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(intAdj, int)]]</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{wis}} min=\"1\" max=\"20\" has-controls label=\"Wisdom\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(wisAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(wisAdj, wis)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(wisAdj, wis)]]</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td><vaadin-integer-field value={{cha}} min=\"1\" max=\"20\" has-controls label=\"Charisma\"></vaadin-integer-field></td>\n              <td><div class=\"adj data\">[[_adjustString(chaAdj)]]</div></td>\n              <td><div class=\"total data\">[[_total(chaAdj, cha)]]</div></td>\n              <td><div class=\"mod data\">[[_mod(chaAdj, cha)]]</div></td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table class=\"stats\">\n          <thead>\n            <tr>\n              <th class=\"mobile-label\">Attribute</th>\n              <th>Save</th>\n              <th>Proficiencies</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Strength</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'str')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\">Athletics</div></td>\n            </tr>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Dexterity</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'dex')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\"></div></td>\n            </tr>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Constitution</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'con')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\"></div></td>\n            </tr>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Intellegence</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'int')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\"></div></td>\n            </tr>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Wisdom</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'wis')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\"></div></td>\n            </tr>\n            <tr class=\"row\">\n              <td class=\"mobile-label\"><div class=\"data\">Charisma</div></td>\n              <td><div class=\"save data\">\n                <span hidden$=\"[[!_contains(saves, 'cha')]]\" class=\"save-icon material-icons\">done</span>\n              </div></td>\n              <td><div class=\"prof data\"></div></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-attributes\", DndCharacterBuilderAttributes);"],"sourceRoot":""}