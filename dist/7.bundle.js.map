{"version":3,"sources":["webpack:///./components/dnd-class-add.js","webpack:///./components/views/character/dnd-character-builder-class.js"],"names":["classOptions","type","Array","super","connectedCallback","ready","setTimeout","async","this","$","select","value","addEventListener","val","selectedClass","renderer","root","firstChild","listBox","document","createElement","i","length","classOption","item","textContent","name","setAttribute","appendChild","customElements","define","levels","classes","Object","characterChangeHandler","e","character","detail","updateFromCharacter","disconnectedCallback","removeEventListener","grid","classGrid","draggedItem","rowDetailsRenderer","rowData","firstElementChild","innerHTML","querySelector","src","picture","large","first","email","draggedItems","dropMode","dropTargetItem","items","filter","dropIndex","indexOf","dropLocation","splice","clearCache","index","classRef","classFeatures","levelsInClass","classLevelFeatures","_getClassLevelFeatures","map","f","join","model","__data"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import {PolymerElement, html} from '@polymer/polymer';\nimport { addClassLevel } from '../util/charBuilder';\nimport { jqEmpty } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport loadModel from \"../util/data\";\n\nclass DndClassAdd extends PolymerElement {\n  static get properties() {\n    return {\n      classOptions: {\n        type: Array\n      }\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n  }\n\n  ready() {\n    super.ready();\n\n    // Setting item renderer for vaadin-select\n    setTimeout(async () => {\n      this.classOptions = await loadModel(\"classes\");\n\n      this.$.select.value = \"\"\n      this.$.select.addEventListener(\"change\", () => {\n        const val = this.$.select.value;\n        if (val !== \"\") {\n          const selectedClass = this.classOptions[val];\n          addClassLevel(selectedClass);\n          this.$.select.value = \"\";\n        }\n      });\n\n      this.$.select.renderer = (root) => {\n        if (root.firstChild) {\n          return\n        }\n\n        const listBox = document.createElement('vaadin-list-box');\n\n        for (let i = 0; i < this.classOptions.length; i ++) {\n          let classOption = this.classOptions[i];\n\n          const item = document.createElement('vaadin-item');\n          item.textContent = classOption.name;\n          item.setAttribute(\"value\", i);\n\n          listBox.appendChild(item);\n        }\n\n        // update the content\n        jqEmpty(root);\n        root.appendChild(listBox);\n      };\n    }, 0);\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n      </style>\n      <vaadin-select mini add id=\"select\"></vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-class-add', DndClassAdd);","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { getCharacterChannel, getSelectedCharacter, getClassReferences, setClassLevels } from \"../../../util/charBuilder\";\nimport \"@vaadin/vaadin-grid\";\nimport \"../../dnd-class-add\";\n\nclass DndCharacterBuilderClass extends PolymerElement {\n  \n  static get properties() {\n    return {\n      levels: {\n        type: Array,\n        value: []\n      },\n      classes: {\n        type: Object,\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(() => {\n      const grid = this.$.classGrid;\n      let draggedItem;\n\n      grid.rowDetailsRenderer = function(root, grid, rowData) {\n        if (!root.firstElementChild) {\n          root.innerHTML =\n          '<div class=\"details\">' +\n          '<img><p><span></span><br>' +\n          '<small></small></p>' +\n          '</div>';\n        }\n        root.firstElementChild.querySelector('img').src = rowData.item.picture.large;\n        root.firstElementChild.querySelector('span').textContent = 'Hi! My name is ' + rowData.item.name.first + '!';\n        root.firstElementChild.querySelector('small').textContent = rowData.item.email;\n      };\n\n      grid.addEventListener('grid-dragstart', function(e) {\n        draggedItem = e.detail.draggedItems[0];\n        grid.dropMode = 'between';\n      });\n\n      grid.addEventListener('grid-dragend', function(e) {\n        draggedItem = grid.dropMode = null;\n      });\n\n      grid.addEventListener('grid-drop', function(e) {\n        const dropTargetItem = e.detail.dropTargetItem;\n        if (draggedItem && draggedItem !== dropTargetItem) {\n          // Reorder the items\n          const items = grid.items.filter(function(i) {\n            return i !== draggedItem;\n          });\n          const dropIndex = items.indexOf(dropTargetItem)\n            + (e.detail.dropLocation === 'below' ? 1 : 0);\n          items.splice(dropIndex, 0, draggedItem);\n          setClassLevels(items);\n        }\n      });\n    }, 0);\n  }\n\n  async updateFromCharacter(character) {\n    this.levels = character.levels;\n    this.classes = await getClassReferences(character);\n    this.$.classGrid.clearCache();\n  }\n\n  _getClassLevelFeatures(levels, name, index, classes) {\n    if (classes) {\n      const classRef = classes[name];\n\n      if (classRef) {\n        const classFeatures = classRef.classFeatures;\n        let levelsInClass = 0;\n\n        if (levels.length >= index + 1) {\n          for (let i = 0; i < index; i ++) {\n            if (levels[i].name === name) {\n              levelsInClass ++;\n            }\n          }\n\n          if (classFeatures[levelsInClass]) {\n            return classFeatures[levelsInClass];\n          }\n        }\n      }\n    }\n  }\n\n  _getClassLevelFeatureString(levels, name, index, classes) {\n    const classLevelFeatures = this._getClassLevelFeatures(levels, name, index, classes);\n\n    if (classLevelFeatures) {\n      return classLevelFeatures.map(f => {return f.name}).join(', ');\n    }\n  }\n\n  _level(index) {\n    return index + 1;\n  }\n\n  _deleteLevel(e) {\n    let index = e.model.__data.index;\n    this.levels.splice(index, 1);\n    setClassLevels(this.levels);\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .row {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n      </style>\n\n      <vaadin-grid id=\"classGrid\" rows-draggable items=[[levels]]>\n        <vaadin-grid-column width=\"60px\" flex-grow=\"0\">\n          <template class=\"header\">#</template>\n          <template>[[_level(index)]]</template>\n        </vaadin-grid-column>\n\n        <vaadin-grid-column flex-grow=\"0\" header=\"Class\" path=\"name\"></vaadin-grid-column>\n\n        <vaadin-grid-column flex-grow=\"1\">\n          <template class=\"header\">Features</template>\n          <template>[[_getClassLevelFeatureString(levels, item.name, index, classes)]]</template>\n        </vaadin-grid-column>\n\n        <vaadin-grid-column flex-grow=\"0\">\n          <template>\n            <button class=\"mdc-icon-button material-icons\" on-click=\"_deleteLevel\">close</button>\n          </template>\n        </vaadin-grid-column>\n      </vaadin-grid>\n\n      <dnd-class-add></dnd-class-add>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-class\", DndCharacterBuilderClass);"],"sourceRoot":""}