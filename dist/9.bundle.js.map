{"version":3,"sources":["webpack:///./components/views/character/dnd-character-builder-background-race.js"],"names":["DndCharacterBuilderBackgroundRace","selectedBackground","type","String","value","backgroundSkillProfOptions","Object","defaultBackgroundSkillProf","selectedRace","raceAttributeOptions","defaultRaceAttribute","super","connectedCallback","this","characterChangeHandler","e","character","detail","updateFromCharacter","addEventListener","disconnectedCallback","removeEventListener","background","name","race","backgroundSkills","choose","from","backgroundSkillProfChoices","count","backgroundSkillProfSelections","backgroundSkillProficiencies","undefined","map","join","raceAttributes","i","toUpperCase","raceAttributeChoices","raceAttributeSelections","attribute","toLowerCase","mod","dispatchEvent","CustomEvent","bubbles","composed","skills","attr","arg","arguments","constructor","entries","length","Array","isArray","customElements","define"],"mappings":"0FAAA,iCAaA,MAAMA,UAA0C,IAE9C,wBACE,MAAO,CACLC,mBAAoB,CAClBC,KAAMC,OACNC,MAAO,IAETC,2BAA4B,CAC1BH,KAAMI,OACNF,MAAO,IAETG,2BAA4B,CAC1BL,KAAMC,OACNC,MAAO,IAETI,aAAc,CACZN,KAAMC,OACNC,MAAO,IAETK,qBAAsB,CACpBP,KAAMI,OACNF,MAAO,IAETM,qBAAsB,CACpBR,KAAMC,OACNC,MAAO,KAKb,oBACEO,MAAMC,oBAENC,KAAKC,uBAA0BC,IAC7B,IAAIC,EAAYD,EAAEE,OAAOD,UACzBH,KAAKK,oBAAoBF,IAG3BH,KAAKK,oBAAoB,eACzB,cAAsBC,iBAAiB,qBAAsBN,KAAKC,wBAGpE,uBACEH,MAAMS,uBAEN,cAAsBC,oBAAoB,qBAAsBR,KAAKC,wBAGvE,0BAA0BE,GACxBH,KAAKZ,mBAAqBe,EAAUM,WAAWC,KAC/CV,KAAKL,aAAeQ,EAAUQ,KAAKD,KAEnC,IAAIE,QAAyB,cACzBA,GAAoBA,EAAiBC,QACvCb,KAAKR,2BAA6BoB,EAAiBC,OAAOC,KAC1Dd,KAAKe,2BAA6BH,EAAiBC,OAAOG,OAAS,EACnEhB,KAAKiB,8BAAgCd,EAAUe,+BAE/ClB,KAAKR,gCAA6B2B,EAClCnB,KAAKe,gCAA6BI,EAClCnB,KAAKiB,mCAAgCE,GAEvC,IAAIzB,QAAmC,YAA+BkB,GACtEZ,KAAKN,2BAA6BA,EAA2B0B,IAAIlB,GAAc,6BAAmBA,IAAMmB,KAAK,MAG7G,IAAIC,QAAuB,cACvBA,GAAkBA,EAAeT,QACnCb,KAAKJ,qBAAuB0B,EAAeT,OAAOC,KAAKM,IAAIG,GAAcA,EAAEC,eAC3ExB,KAAKyB,qBAAuBH,EAAeT,OAAOG,OAAS,EAC3DhB,KAAK0B,wBAA0BvB,EAAUmB,iBAEzCtB,KAAKJ,0BAAuBuB,EAC5BnB,KAAKyB,0BAAuBN,EAC5BnB,KAAK0B,6BAA0BP,GAEjC,IAAItB,QAA6B,YAAyByB,GAC1DtB,KAAKH,qBAAuBA,EACzBuB,IAAIlB,IACH,IAAIyB,EAAYzB,EAAE,GAAG0B,cACnBC,EAAM3B,EAAE,GACV,OAAOyB,EAAUH,cAAgB,IAAM,iBAAOK,KAC7CR,KAAK,MAEVrB,KAAK8B,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMC,UAAU,KAGjF,4BAA4BC,GAC1B,YAAgCA,GAGlC,0BAA0BC,GACxB,YAAkBA,GAGpB,UACE,IAAK,IAAIC,KAAOC,UACd,GAAMD,IAAQA,EAAIE,cAAgB7C,QAAUA,OAAO8C,QAAQH,GAAKI,OAAS,MAAQC,MAAMC,QAAQN,IAAQA,EAAII,OAAS,GAClH,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuEfG,eAAeC,OAAO,wCAAyCzD","file":"9.bundle.js","sourcesContent":["import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  getRaceAttributeOptions,\n  getRaceAttributeDefaults,\n  setRaceAttributes,\n  getBackgroundSkillProfOptions,\n  getBackgroundSkillProfDefaults,\n  setBackgroundSkillProficiencies,\n} from \"../../../util/charBuilder\";\nimport { util_capitalizeAll, absInt } from \"../../../js/utils\"; \n\nclass DndCharacterBuilderBackgroundRace extends PolymerElement {\n  \n  static get properties() {\n    return {\n      selectedBackground: {\n        type: String,\n        value: \"\"\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      selectedRace: {\n        type: String,\n        value: \"\"\n      },\n      raceAttributeOptions: {\n        type: Object,\n        value: []\n      },\n      defaultRaceAttribute: {\n        type: String,\n        value: \"\"\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    this.selectedBackground = character.background.name;\n    this.selectedRace = character.race.name;\n    // Skills from Background\n    let backgroundSkills = await getBackgroundSkillProfOptions();\n    if (backgroundSkills && backgroundSkills.choose) {\n      this.backgroundSkillProfOptions = backgroundSkills.choose.from;\n      this.backgroundSkillProfChoices = backgroundSkills.choose.count || 1;\n      this.backgroundSkillProfSelections = character.backgroundSkillProficiencies;\n    } else {\n      this.backgroundSkillProfOptions = undefined;\n      this.backgroundSkillProfChoices = undefined;\n      this.backgroundSkillProfSelections = undefined;\n    }\n    let defaultBackgroundSkillProf = await getBackgroundSkillProfDefaults(backgroundSkills);\n    this.defaultBackgroundSkillProf = defaultBackgroundSkillProf.map(e => { return util_capitalizeAll(e) }).join(', ');\n\n    // Attributes from Race\n    let raceAttributes = await getRaceAttributeOptions();\n    if (raceAttributes && raceAttributes.choose) {\n      this.raceAttributeOptions = raceAttributes.choose.from.map(i => { return i.toUpperCase() });\n      this.raceAttributeChoices = raceAttributes.choose.count || 1;\n      this.raceAttributeSelections = character.raceAttributes;\n    } else {\n      this.raceAttributeOptions = undefined;\n      this.raceAttributeChoices = undefined;\n      this.raceAttributeSelections = undefined;\n    }\n    let defaultRaceAttribute = await getRaceAttributeDefaults(raceAttributes);\n    this.defaultRaceAttribute = defaultRaceAttribute\n      .map(e => {\n        let attribute = e[0].toLowerCase(),\n          mod = e[1];\n        return attribute.toUpperCase() + ' ' + absInt(mod);\n      }).join(', ');\n    \n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n\n  _backgroundSkillAddCallback(skills) {\n    setBackgroundSkillProficiencies(skills);\n  }\n\n  _raceAttributeAddCallback(attr) {\n    setRaceAttributes(attr);\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        .col-wrap {\n          display: flex; \n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .row-wrap {\n          width: 100%;\n        }\n        .row-wrap:first-child {\n          margin-bottom: 24px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .default-selection {\n          font-size: 14px;\n          margin-bottom: 0 !important;\n        }\n\n        .default-selection span {\n          color: var(--mdc-theme-secondary)\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n          .row-wrap:first-child {\n            margin-bottom: 0;\n          }\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n        <div class=\"row-wrap\">\n          <h2>Race</h2>\n          <dnd-select-add model=\"races\" value=\"[[selectedRace]]\" placeholder=\"<Choose Race>\"></dnd-select-add>\n          <div hidden$=\"[[_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Select Race to add Attribute Bonuses</div>\n          <div hidden$=\"[[!_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Attribute Bonuses from Race:</div>\n          <div hidden$=\"[[!_exists(defaultRaceAttribute)]]\" class=\"default-selection\">Default Attributes: <span>[[defaultRaceAttribute]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(raceAttributeOptions)]]\" choices=\"[[raceAttributeChoices]]\" placeholder=\"<Choose Attribute>\" label=\"Choosen Attribute(s)\"\n            options=\"[[raceAttributeOptions]]\" value=\"[[raceAttributeSelections]]\" add-callback=\"[[_raceAttributeAddCallback]]\"></dnd-select-add>\n        </div>\n\n        <div class=\"row-wrap\">\n          <h2>Background</h2>\n          <dnd-select-add model=\"backgrounds\" value=\"[[selectedBackground]]\" placeholder=\"<Choose Background>\"></dnd-select-add>\n          <div hidden$=\"[[_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Select Background to add Skill Proficiencies</div>\n          <div hidden$=\"[[!_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Skill Proficiencies from Background:</div>\n          <div hidden$=\"[[!_exists(defaultBackgroundSkillProf)]]\" class=\"default-selection\">Default Skills: <span>[[defaultBackgroundSkillProf]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(backgroundSkillProfOptions)]]\" choices=\"[[backgroundSkillProfChoices]]\" placeholder=\"<Choose Skills>\" label=\"Choosen Skill(s)\"\n            options=\"[[backgroundSkillProfOptions]]\" value=\"[[backgroundSkillProfSelections]]\" add-callback=\"[[_backgroundSkillAddCallback]]\"></dnd-select-add>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-background-race\", DndCharacterBuilderBackgroundRace);"],"sourceRoot":""}